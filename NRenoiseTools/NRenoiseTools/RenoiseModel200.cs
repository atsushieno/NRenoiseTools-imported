//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :2.0.50727.3053
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.1432.
// 
namespace NRenoiseTools {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class RenoiseSong : Song {
        
        private int doc_versionField;
        
        public RenoiseSong() {
            this.doc_versionField = 14;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int doc_version {
            get {
                return this.doc_versionField;
            }
            set {
                this.doc_versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RenoiseSong))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Song : SongBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Song))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RenoiseSong))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public abstract partial class SongBase {
        
        private GlobalSongData globalSongDataField;
        
        private RecordManager recordManagerField;
        
        private Instrument[] instrumentsField;
        
        private int selectedInstrumentIndexField;
        
        private int selectedSampleIndexField;
        
        private SongBaseTracks tracksField;
        
        private int selectedTrackIndexField;
        
        private PatternPool patternPoolField;
        
        private PatternSequenceData patternSequenceField;
        
        public SongBase() {
            this.selectedInstrumentIndexField = 0;
            this.selectedSampleIndexField = 0;
            this.selectedTrackIndexField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GlobalSongData GlobalSongData {
            get {
                return this.globalSongDataField;
            }
            set {
                this.globalSongDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RecordManager RecordManager {
            get {
                return this.recordManagerField;
            }
            set {
                this.recordManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Instrument[] Instruments {
            get {
                return this.instrumentsField;
            }
            set {
                this.instrumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SelectedInstrumentIndex {
            get {
                return this.selectedInstrumentIndexField;
            }
            set {
                this.selectedInstrumentIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SelectedSampleIndex {
            get {
                return this.selectedSampleIndexField;
            }
            set {
                this.selectedSampleIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SongBaseTracks Tracks {
            get {
                return this.tracksField;
            }
            set {
                this.tracksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SelectedTrackIndex {
            get {
                return this.selectedTrackIndexField;
            }
            set {
                this.selectedTrackIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatternPool PatternPool {
            get {
                return this.patternPoolField;
            }
            set {
                this.patternPoolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatternSequenceData PatternSequence {
            get {
                return this.patternSequenceField;
            }
            set {
                this.patternSequenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GlobalSongData {
        
        private int octaveField;
        
        private int editStepField;
        
        private bool recordQuantizationEnabledField;
        
        private int recordQuantizationAmountField;
        
        private bool loopPlayField;
        
        private int loopCoeffField;
        
        private int loopStartField;
        
        private float beatsPerMinField;
        
        private int linesPerBeatField;
        
        private int ticksPerLineField;
        
        private bool shuffleIsActiveField;
        
        private int[] shuffleAmountsField;
        
        private string songNameField;
        
        private string artistField;
        
        private string[] songCommentsField;
        
        private bool showSongCommentsAfterLoadingField;
        
        private bool showUsedAutomationsOnlyField;
        
        private bool sampleOffsetCompatibilityModeField;
        
        private bool pitchEffectsCompatibilityModeField;
        
        private int playbackEngineVersionField;
        
        private int renderSelectionNameCounterField;
        
        private int recordSampleNameCounterField;
        
        private int newSampleNameCounterField;
        
        public GlobalSongData() {
            this.octaveField = 4;
            this.editStepField = 1;
            this.recordQuantizationEnabledField = false;
            this.recordQuantizationAmountField = 1;
            this.loopPlayField = false;
            this.loopCoeffField = 4;
            this.loopStartField = 0;
            this.beatsPerMinField = ((float)(128F));
            this.linesPerBeatField = 4;
            this.ticksPerLineField = 12;
            this.shuffleIsActiveField = false;
            this.songNameField = "Untitled";
            this.artistField = "By Somebody";
            this.showSongCommentsAfterLoadingField = false;
            this.showUsedAutomationsOnlyField = false;
            this.sampleOffsetCompatibilityModeField = false;
            this.pitchEffectsCompatibilityModeField = false;
            this.playbackEngineVersionField = 4;
            this.renderSelectionNameCounterField = 0;
            this.recordSampleNameCounterField = 0;
            this.newSampleNameCounterField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(4)]
        public int Octave {
            get {
                return this.octaveField;
            }
            set {
                this.octaveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int EditStep {
            get {
                return this.editStepField;
            }
            set {
                this.editStepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool RecordQuantizationEnabled {
            get {
                return this.recordQuantizationEnabledField;
            }
            set {
                this.recordQuantizationEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int RecordQuantizationAmount {
            get {
                return this.recordQuantizationAmountField;
            }
            set {
                this.recordQuantizationAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool LoopPlay {
            get {
                return this.loopPlayField;
            }
            set {
                this.loopPlayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(4)]
        public int LoopCoeff {
            get {
                return this.loopCoeffField;
            }
            set {
                this.loopCoeffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int LoopStart {
            get {
                return this.loopStartField;
            }
            set {
                this.loopStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "128")]
        public float BeatsPerMin {
            get {
                return this.beatsPerMinField;
            }
            set {
                this.beatsPerMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(4)]
        public int LinesPerBeat {
            get {
                return this.linesPerBeatField;
            }
            set {
                this.linesPerBeatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(12)]
        public int TicksPerLine {
            get {
                return this.ticksPerLineField;
            }
            set {
                this.ticksPerLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ShuffleIsActive {
            get {
                return this.shuffleIsActiveField;
            }
            set {
                this.shuffleIsActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ShuffleAmount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public int[] ShuffleAmounts {
            get {
                return this.shuffleAmountsField;
            }
            set {
                this.shuffleAmountsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string SongName {
            get {
                return this.songNameField;
            }
            set {
                this.songNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("By Somebody")]
        public string Artist {
            get {
                return this.artistField;
            }
            set {
                this.artistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SongComment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] SongComments {
            get {
                return this.songCommentsField;
            }
            set {
                this.songCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ShowSongCommentsAfterLoading {
            get {
                return this.showSongCommentsAfterLoadingField;
            }
            set {
                this.showSongCommentsAfterLoadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ShowUsedAutomationsOnly {
            get {
                return this.showUsedAutomationsOnlyField;
            }
            set {
                this.showUsedAutomationsOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SampleOffsetCompatibilityMode {
            get {
                return this.sampleOffsetCompatibilityModeField;
            }
            set {
                this.sampleOffsetCompatibilityModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PitchEffectsCompatibilityMode {
            get {
                return this.pitchEffectsCompatibilityModeField;
            }
            set {
                this.pitchEffectsCompatibilityModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(4)]
        public int PlaybackEngineVersion {
            get {
                return this.playbackEngineVersionField;
            }
            set {
                this.playbackEngineVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int RenderSelectionNameCounter {
            get {
                return this.renderSelectionNameCounterField;
            }
            set {
                this.renderSelectionNameCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int RecordSampleNameCounter {
            get {
                return this.recordSampleNameCounterField;
            }
            set {
                this.recordSampleNameCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int NewSampleNameCounter {
            get {
                return this.newSampleNameCounterField;
            }
            set {
                this.newSampleNameCounterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoopSelection {
        
        private int cursorPosField;
        
        private int rangePosField;
        
        public LoopSelection() {
            this.cursorPosField = -1;
            this.rangePosField = -1;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CursorPos {
            get {
                return this.cursorPosField;
            }
            set {
                this.cursorPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int RangePos {
            get {
                return this.rangePosField;
            }
            set {
                this.rangePosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatternSequenceData {
        
        private int[] patternSequenceField;
        
        private LoopSelection loopSelectionField;
        
        private int patternNameWidthField;
        
        private int highliteStepField;
        
        private int highliteOffsetField;
        
        public PatternSequenceData() {
            this.patternNameWidthField = 0;
            this.highliteStepField = 0;
            this.highliteOffsetField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Pattern", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public int[] PatternSequence {
            get {
                return this.patternSequenceField;
            }
            set {
                this.patternSequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoopSelection LoopSelection {
            get {
                return this.loopSelectionField;
            }
            set {
                this.loopSelectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int PatternNameWidth {
            get {
                return this.patternNameWidthField;
            }
            set {
                this.patternNameWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int HighliteStep {
            get {
                return this.highliteStepField;
            }
            set {
                this.highliteStepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int HighliteOffset {
            get {
                return this.highliteOffsetField;
            }
            set {
                this.highliteOffsetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EffectColumn {
        
        private string valueField;
        
        private string numberField;
        
        public EffectColumn() {
            this.valueField = "00";
            this.numberField = "00";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("00")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("00")]
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NoteColumn {
        
        private string noteField;
        
        private string instrumentField;
        
        private string volumeField;
        
        private string panningField;
        
        private string delayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Instrument {
            get {
                return this.instrumentField;
            }
            set {
                this.instrumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Line {
        
        private NoteColumn[] noteColumnsField;
        
        private EffectColumn[] effectColumnsField;
        
        private int indexField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public NoteColumn[] NoteColumns {
            get {
                return this.noteColumnsField;
            }
            set {
                this.noteColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public EffectColumn[] EffectColumns {
            get {
                return this.effectColumnsField;
            }
            set {
                this.effectColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnvelopeData {
        
        private EnvelopeDataPlayMode playModeField;
        
        private int lengthField;
        
        private float valueQuantumField;
        
        private string[] pointsField;
        
        public EnvelopeData() {
            this.playModeField = EnvelopeDataPlayMode.Linear;
            this.lengthField = 1;
            this.valueQuantumField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopeDataPlayMode.Linear)]
        public EnvelopeDataPlayMode PlayMode {
            get {
                return this.playModeField;
            }
            set {
                this.playModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float ValueQuantum {
            get {
                return this.valueQuantumField;
            }
            set {
                this.valueQuantumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Point", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopeDataPlayMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Points,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnvelopeItem {
        
        private int deviceIndexField;
        
        private int parameterIndexField;
        
        private EnvelopeData envelopeField;
        
        public EnvelopeItem() {
            this.deviceIndexField = -1;
            this.parameterIndexField = -1;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int DeviceIndex {
            get {
                return this.deviceIndexField;
            }
            set {
                this.deviceIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ParameterIndex {
            get {
                return this.parameterIndexField;
            }
            set {
                this.parameterIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EnvelopeData Envelope {
            get {
                return this.envelopeField;
            }
            set {
                this.envelopeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Automations {
        
        private EnvelopeItem[] envelopesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Envelope", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public EnvelopeItem[] Envelopes {
            get {
                return this.envelopesField;
            }
            set {
                this.envelopesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatternSendTrack))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatternMasterTrack))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatternTrack))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public abstract partial class Track {
        
        private Automations automationsField;
        
        private Line[] linesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Automations Automations {
            get {
                return this.automationsField;
            }
            set {
                this.automationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Line[] Lines {
            get {
                return this.linesField;
            }
            set {
                this.linesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatternSendTrack : Track {
        
        private string typeField;
        
        public PatternSendTrack() {
            this.typeField = "PatternSendTrack";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatternMasterTrack : Track {
        
        private string typeField;
        
        public PatternMasterTrack() {
            this.typeField = "PatternMasterTrack";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatternTrack : Track {
        
        private string typeField;
        
        public PatternTrack() {
            this.typeField = "PatternTrack";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Pattern {
        
        private string nameField;
        
        private int numberOfLinesField;
        
        private PatternTracks tracksField;
        
        public Pattern() {
            this.numberOfLinesField = 64;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(64)]
        public int NumberOfLines {
            get {
                return this.numberOfLinesField;
            }
            set {
                this.numberOfLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatternTracks Tracks {
            get {
                return this.tracksField;
            }
            set {
                this.tracksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class PatternTracks {
        
        private PatternTrack[] patternTrackField;
        
        private PatternMasterTrack[] patternMasterTrackField;
        
        private PatternSendTrack[] patternSendTrackField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatternTrack", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatternTrack[] PatternTrack {
            get {
                return this.patternTrackField;
            }
            set {
                this.patternTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatternMasterTrack", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatternMasterTrack[] PatternMasterTrack {
            get {
                return this.patternMasterTrackField;
            }
            set {
                this.patternMasterTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatternSendTrack", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatternSendTrack[] PatternSendTrack {
            get {
                return this.patternSendTrackField;
            }
            set {
                this.patternSendTrackField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatternPool {
        
        private int highliteStepField;
        
        private int defaultPatternLengthField;
        
        private Pattern[] patternsField;
        
        public PatternPool() {
            this.highliteStepField = 0;
            this.defaultPatternLengthField = 64;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int HighliteStep {
            get {
                return this.highliteStepField;
            }
            set {
                this.highliteStepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(64)]
        public int DefaultPatternLength {
            get {
                return this.defaultPatternLengthField;
            }
            set {
                this.defaultPatternLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Pattern[] Patterns {
            get {
                return this.patternsField;
            }
            set {
                this.patternsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDevicePostVolume {
        
        private float valueField;
        
        private SequencerSendTrackDevicePostVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerSendTrackDevicePostVolume() {
            this.valueField = ((float)(1F));
            this.visualizationField = SequencerSendTrackDevicePostVolumeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerSendTrackDevicePostVolumeVisualization.Deviceonly)]
        public SequencerSendTrackDevicePostVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerSendTrackDevicePostVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MidiMapping {
        
        private int channelField;
        
        private int cCNumberField;
        
        private int modeField;
        
        private float minField;
        
        private float maxField;
        
        private bool inverseField;
        
        public MidiMapping() {
            this.channelField = -1;
            this.cCNumberField = -1;
            this.modeField = 0;
            this.minField = ((float)(0F));
            this.maxField = ((float)(1F));
            this.inverseField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int Channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CCNumber {
            get {
                return this.cCNumberField;
            }
            set {
                this.cCNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Inverse {
            get {
                return this.inverseField;
            }
            set {
                this.inverseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDevicePostPanning {
        
        private float valueField;
        
        private SequencerSendTrackDevicePostPanningVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerSendTrackDevicePostPanning() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = SequencerSendTrackDevicePostPanningVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerSendTrackDevicePostPanningVisualization.Deviceonly)]
        public SequencerSendTrackDevicePostPanningVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerSendTrackDevicePostPanningVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDeviceSurround {
        
        private float valueField;
        
        private SequencerSendTrackDeviceSurroundVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerSendTrackDeviceSurround() {
            this.valueField = ((float)(0F));
            this.visualizationField = SequencerSendTrackDeviceSurroundVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerSendTrackDeviceSurroundVisualization.Deviceonly)]
        public SequencerSendTrackDeviceSurroundVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerSendTrackDeviceSurroundVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDeviceVolume {
        
        private float valueField;
        
        private SequencerSendTrackDeviceVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerSendTrackDeviceVolume() {
            this.valueField = ((float)(1F));
            this.visualizationField = SequencerSendTrackDeviceVolumeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerSendTrackDeviceVolumeVisualization.Deviceonly)]
        public SequencerSendTrackDeviceVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerSendTrackDeviceVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDevicePanning {
        
        private float valueField;
        
        private SequencerSendTrackDevicePanningVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerSendTrackDevicePanning() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = SequencerSendTrackDevicePanningVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerSendTrackDevicePanningVisualization.Deviceonly)]
        public SequencerSendTrackDevicePanningVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerSendTrackDevicePanningVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDevicePostVolumeRunTimePreset {
        
        private float valueField;
        
        public SequencerSendTrackDevicePostVolumeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDevicePostPanningRunTimePreset {
        
        private float valueField;
        
        public SequencerSendTrackDevicePostPanningRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDeviceSurroundRunTimePreset {
        
        private float valueField;
        
        public SequencerSendTrackDeviceSurroundRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDeviceVolumeRunTimePreset {
        
        private float valueField;
        
        public SequencerSendTrackDeviceVolumeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDevicePanningRunTimePreset {
        
        private float valueField;
        
        public SequencerSendTrackDevicePanningRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDeviceDeviceSlotRunTimePreset {
        
        private SequencerSendTrackDevicePanningRunTimePreset panningField;
        
        private SequencerSendTrackDeviceVolumeRunTimePreset volumeField;
        
        private SequencerSendTrackDeviceSurroundRunTimePreset surroundField;
        
        private SequencerSendTrackDevicePostPanningRunTimePreset postPanningField;
        
        private SequencerSendTrackDevicePostVolumeRunTimePreset postVolumeField;
        
        private string typeField;
        
        public SequencerSendTrackDeviceDeviceSlotRunTimePreset() {
            this.typeField = "SequencerSendTrackDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDevicePanningRunTimePreset Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDeviceVolumeRunTimePreset Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDeviceSurroundRunTimePreset Surround {
            get {
                return this.surroundField;
            }
            set {
                this.surroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDevicePostPanningRunTimePreset PostPanning {
            get {
                return this.postPanningField;
            }
            set {
                this.postPanningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDevicePostVolumeRunTimePreset PostVolume {
            get {
                return this.postVolumeField;
            }
            set {
                this.postVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDeviceRunTimePreset {
        
        private SequencerSendTrackDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public SequencerSendTrackDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private SequencerSendTrackDeviceRunTimePreset runTimePresetAField;
        
        private SequencerSendTrackDeviceRunTimePreset runTimePresetBField;
        
        private SequencerSendTrackDevicePanning panningField;
        
        private SequencerSendTrackDeviceVolume volumeField;
        
        private SequencerSendTrackDeviceSurround surroundField;
        
        private SequencerSendTrackDevicePostPanning postPanningField;
        
        private SequencerSendTrackDevicePostVolume postVolumeField;
        
        private string typeField;
        
        public SequencerSendTrackDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "SequencerSendTrackDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDevicePanning Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDeviceVolume Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDeviceSurround Surround {
            get {
                return this.surroundField;
            }
            set {
                this.surroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDevicePostPanning PostPanning {
            get {
                return this.postPanningField;
            }
            set {
                this.postPanningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDevicePostVolume PostVolume {
            get {
                return this.postVolumeField;
            }
            set {
                this.postVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrackFilterDevices {
        
        private SequencerSendTrackFilterDevicesDevices devicesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackFilterDevicesDevices Devices {
            get {
                return this.devicesField;
            }
            set {
                this.devicesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SequencerSendTrackFilterDevicesDevices {
        
        private BusCompressorDevice[] busCompressorDeviceField;
        
        private ChorusDevice[] chorusDeviceField;
        
        private CompressorDevice[] compressorDeviceField;
        
        private DcOffsetDevice[] dcOffsetDeviceField;
        
        private DelayDevice[] delayDeviceField;
        
        private DistortionDeviceDistortionDevice[] distortionDeviceField;
        
        private Distortion2DeviceDistortionDevice[] distortion2DeviceField;
        
        private Eq10DeviceEqDevice[] eq10DeviceField;
        
        private Eq5DeviceEqDevice[] eq5DeviceField;
        
        private Filter1DeviceFilterDevice[] filter1DeviceField;
        
        private Filter2DeviceFilterDevice[] filter2DeviceField;
        
        private Filter3DeviceFilterDevice[] filter3DeviceField;
        
        private FlangerDevice[] flangerDeviceField;
        
        private GainerDevice[] gainerDeviceField;
        
        private GateDeviceGateDevice[] gateDeviceField;
        
        private Gate2DeviceGateDevice[] gate2DeviceField;
        
        private LofiDeviceLofiDevice[] lofiDeviceField;
        
        private Lofi2DeviceLofiDevice[] lofi2DeviceField;
        
        private MaximizerDevice[] maximizerDeviceField;
        
        private MixerEqDevice[] mixerEqDeviceField;
        
        private Reverb2DeviceReverbDevice[] reverb2DeviceField;
        
        private Reverb3DeviceReverbDevice[] reverb3DeviceField;
        
        private PhaserDevice[] phaserDeviceField;
        
        private ReverbDeviceReverbDevice[] reverbDeviceField;
        
        private RingModDevice[] ringModDeviceField;
        
        private FilterDistortionDevice[] filterDistortionDeviceField;
        
        private SequencerSendTrackDevice[] sequencerSendTrackDeviceField;
        
        private ShaperDevice[] shaperDeviceField;
        
        private StereoExpanderDevice[] stereoExpanderDeviceField;
        
        private SendDevice[] sendDeviceField;
        
        private PdcTestDelayDevice[] pdcTestDelayDeviceField;
        
        private InstrumentAutomationDevice[] instrumentAutomationDeviceField;
        
        private LfoDevice[] lfoDeviceField;
        
        private MidiCCDevice[] midiCCDeviceField;
        
        private VelocityDevice[] velocityDeviceField;
        
        private AudioPluginDevice[] audioPluginDeviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BusCompressorDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDevice[] BusCompressorDevice {
            get {
                return this.busCompressorDeviceField;
            }
            set {
                this.busCompressorDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChorusDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDevice[] ChorusDevice {
            get {
                return this.chorusDeviceField;
            }
            set {
                this.chorusDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CompressorDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDevice[] CompressorDevice {
            get {
                return this.compressorDeviceField;
            }
            set {
                this.compressorDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DcOffsetDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDevice[] DcOffsetDevice {
            get {
                return this.dcOffsetDeviceField;
            }
            set {
                this.dcOffsetDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DelayDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDevice[] DelayDevice {
            get {
                return this.delayDeviceField;
            }
            set {
                this.delayDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DistortionDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceDistortionDevice[] DistortionDevice {
            get {
                return this.distortionDeviceField;
            }
            set {
                this.distortionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Distortion2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDistortionDevice[] Distortion2Device {
            get {
                return this.distortion2DeviceField;
            }
            set {
                this.distortion2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Eq10Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceEqDevice[] Eq10Device {
            get {
                return this.eq10DeviceField;
            }
            set {
                this.eq10DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Eq5Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceEqDevice[] Eq5Device {
            get {
                return this.eq5DeviceField;
            }
            set {
                this.eq5DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter1Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceFilterDevice[] Filter1Device {
            get {
                return this.filter1DeviceField;
            }
            set {
                this.filter1DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceFilterDevice[] Filter2Device {
            get {
                return this.filter2DeviceField;
            }
            set {
                this.filter2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter3Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceFilterDevice[] Filter3Device {
            get {
                return this.filter3DeviceField;
            }
            set {
                this.filter3DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FlangerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDevice[] FlangerDevice {
            get {
                return this.flangerDeviceField;
            }
            set {
                this.flangerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GainerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDevice[] GainerDevice {
            get {
                return this.gainerDeviceField;
            }
            set {
                this.gainerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GateDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceGateDevice[] GateDevice {
            get {
                return this.gateDeviceField;
            }
            set {
                this.gateDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Gate2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceGateDevice[] Gate2Device {
            get {
                return this.gate2DeviceField;
            }
            set {
                this.gate2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LofiDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceLofiDevice[] LofiDevice {
            get {
                return this.lofiDeviceField;
            }
            set {
                this.lofiDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Lofi2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceLofiDevice[] Lofi2Device {
            get {
                return this.lofi2DeviceField;
            }
            set {
                this.lofi2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaximizerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDevice[] MaximizerDevice {
            get {
                return this.maximizerDeviceField;
            }
            set {
                this.maximizerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MixerEqDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDevice[] MixerEqDevice {
            get {
                return this.mixerEqDeviceField;
            }
            set {
                this.mixerEqDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reverb2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceReverbDevice[] Reverb2Device {
            get {
                return this.reverb2DeviceField;
            }
            set {
                this.reverb2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reverb3Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceReverbDevice[] Reverb3Device {
            get {
                return this.reverb3DeviceField;
            }
            set {
                this.reverb3DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PhaserDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDevice[] PhaserDevice {
            get {
                return this.phaserDeviceField;
            }
            set {
                this.phaserDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReverbDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceReverbDevice[] ReverbDevice {
            get {
                return this.reverbDeviceField;
            }
            set {
                this.reverbDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RingModDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDevice[] RingModDevice {
            get {
                return this.ringModDeviceField;
            }
            set {
                this.ringModDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FilterDistortionDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDevice[] FilterDistortionDevice {
            get {
                return this.filterDistortionDeviceField;
            }
            set {
                this.filterDistortionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SequencerSendTrackDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackDevice[] SequencerSendTrackDevice {
            get {
                return this.sequencerSendTrackDeviceField;
            }
            set {
                this.sequencerSendTrackDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ShaperDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDevice[] ShaperDevice {
            get {
                return this.shaperDeviceField;
            }
            set {
                this.shaperDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StereoExpanderDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDevice[] StereoExpanderDevice {
            get {
                return this.stereoExpanderDeviceField;
            }
            set {
                this.stereoExpanderDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SendDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDevice[] SendDevice {
            get {
                return this.sendDeviceField;
            }
            set {
                this.sendDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PdcTestDelayDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDevice[] PdcTestDelayDevice {
            get {
                return this.pdcTestDelayDeviceField;
            }
            set {
                this.pdcTestDelayDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InstrumentAutomationDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstrumentAutomationDevice[] InstrumentAutomationDevice {
            get {
                return this.instrumentAutomationDeviceField;
            }
            set {
                this.instrumentAutomationDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LfoDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDevice[] LfoDevice {
            get {
                return this.lfoDeviceField;
            }
            set {
                this.lfoDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MidiCCDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDevice[] MidiCCDevice {
            get {
                return this.midiCCDeviceField;
            }
            set {
                this.midiCCDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("VelocityDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDevice[] VelocityDevice {
            get {
                return this.velocityDeviceField;
            }
            set {
                this.velocityDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AudioPluginDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDevice[] AudioPluginDevice {
            get {
                return this.audioPluginDeviceField;
            }
            set {
                this.audioPluginDeviceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private BusCompressorDeviceRunTimePreset runTimePresetAField;
        
        private BusCompressorDeviceRunTimePreset runTimePresetBField;
        
        private BusCompressorDeviceThreshold thresholdField;
        
        private BusCompressorDeviceRatio ratioField;
        
        private BusCompressorDeviceAttack attackField;
        
        private BusCompressorDeviceRelease releaseField;
        
        private BusCompressorDeviceMakeUp makeUpField;
        
        private BusCompressorDeviceKnee kneeField;
        
        private string typeField;
        
        public BusCompressorDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "BusCompressorDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceThreshold Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceRatio Ratio {
            get {
                return this.ratioField;
            }
            set {
                this.ratioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceAttack Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceRelease Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceMakeUp MakeUp {
            get {
                return this.makeUpField;
            }
            set {
                this.makeUpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceKnee Knee {
            get {
                return this.kneeField;
            }
            set {
                this.kneeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceRunTimePreset {
        
        private BusCompressorDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public BusCompressorDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceDeviceSlotRunTimePreset {
        
        private BusCompressorDeviceThresholdRunTimePreset thresholdField;
        
        private BusCompressorDeviceRatioRunTimePreset ratioField;
        
        private BusCompressorDeviceAttackRunTimePreset attackField;
        
        private BusCompressorDeviceReleaseRunTimePreset releaseField;
        
        private BusCompressorDeviceMakeUpRunTimePreset makeUpField;
        
        private BusCompressorDeviceKneeRunTimePreset kneeField;
        
        private string typeField;
        
        public BusCompressorDeviceDeviceSlotRunTimePreset() {
            this.typeField = "BusCompressorDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceThresholdRunTimePreset Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceRatioRunTimePreset Ratio {
            get {
                return this.ratioField;
            }
            set {
                this.ratioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceAttackRunTimePreset Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceReleaseRunTimePreset Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceMakeUpRunTimePreset MakeUp {
            get {
                return this.makeUpField;
            }
            set {
                this.makeUpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDeviceKneeRunTimePreset Knee {
            get {
                return this.kneeField;
            }
            set {
                this.kneeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceThresholdRunTimePreset {
        
        private float valueField;
        
        public BusCompressorDeviceThresholdRunTimePreset() {
            this.valueField = ((float)(-12F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-12")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceRatioRunTimePreset {
        
        private float valueField;
        
        public BusCompressorDeviceRatioRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceAttackRunTimePreset {
        
        private float valueField;
        
        public BusCompressorDeviceAttackRunTimePreset() {
            this.valueField = ((float)(0.02001001F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.02001001")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceReleaseRunTimePreset {
        
        private float valueField;
        
        public BusCompressorDeviceReleaseRunTimePreset() {
            this.valueField = ((float)(0.1565639F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1565639")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceMakeUpRunTimePreset {
        
        private float valueField;
        
        public BusCompressorDeviceMakeUpRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceKneeRunTimePreset {
        
        private float valueField;
        
        public BusCompressorDeviceKneeRunTimePreset() {
            this.valueField = ((float)(10F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceThreshold {
        
        private float valueField;
        
        private BusCompressorDeviceThresholdVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public BusCompressorDeviceThreshold() {
            this.valueField = ((float)(-12F));
            this.visualizationField = BusCompressorDeviceThresholdVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-12")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(BusCompressorDeviceThresholdVisualization.Deviceonly)]
        public BusCompressorDeviceThresholdVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum BusCompressorDeviceThresholdVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceRatio {
        
        private float valueField;
        
        private BusCompressorDeviceRatioVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public BusCompressorDeviceRatio() {
            this.valueField = ((float)(0F));
            this.visualizationField = BusCompressorDeviceRatioVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(BusCompressorDeviceRatioVisualization.Deviceonly)]
        public BusCompressorDeviceRatioVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum BusCompressorDeviceRatioVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceAttack {
        
        private float valueField;
        
        private BusCompressorDeviceAttackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public BusCompressorDeviceAttack() {
            this.valueField = ((float)(0.02001001F));
            this.visualizationField = BusCompressorDeviceAttackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.02001001")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(BusCompressorDeviceAttackVisualization.Deviceonly)]
        public BusCompressorDeviceAttackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum BusCompressorDeviceAttackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceRelease {
        
        private float valueField;
        
        private BusCompressorDeviceReleaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public BusCompressorDeviceRelease() {
            this.valueField = ((float)(0.1565639F));
            this.visualizationField = BusCompressorDeviceReleaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1565639")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(BusCompressorDeviceReleaseVisualization.Deviceonly)]
        public BusCompressorDeviceReleaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum BusCompressorDeviceReleaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceMakeUp {
        
        private float valueField;
        
        private BusCompressorDeviceMakeUpVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public BusCompressorDeviceMakeUp() {
            this.valueField = ((float)(0F));
            this.visualizationField = BusCompressorDeviceMakeUpVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(BusCompressorDeviceMakeUpVisualization.MixerandDevice)]
        public BusCompressorDeviceMakeUpVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum BusCompressorDeviceMakeUpVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusCompressorDeviceKnee {
        
        private float valueField;
        
        private BusCompressorDeviceKneeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public BusCompressorDeviceKnee() {
            this.valueField = ((float)(10F));
            this.visualizationField = BusCompressorDeviceKneeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(BusCompressorDeviceKneeVisualization.Deviceonly)]
        public BusCompressorDeviceKneeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum BusCompressorDeviceKneeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private ChorusDeviceRunTimePreset runTimePresetAField;
        
        private ChorusDeviceRunTimePreset runTimePresetBField;
        
        private ChorusDeviceLfoRate lfoRateField;
        
        private ChorusDeviceLfoDepth lfoDepthField;
        
        private ChorusDeviceFeedback feedbackField;
        
        private ChorusDeviceDelay delayField;
        
        private ChorusDeviceDryWetMix dryWetMixField;
        
        private ChorusDevicePhase phaseField;
        
        private ChorusDeviceFilterType filterTypeField;
        
        private ChorusDeviceFilterFreq filterFreqField;
        
        private ChorusDeviceFilterResonance filterResonanceField;
        
        private string typeField;
        
        public ChorusDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "ChorusDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceLfoRate LfoRate {
            get {
                return this.lfoRateField;
            }
            set {
                this.lfoRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceLfoDepth LfoDepth {
            get {
                return this.lfoDepthField;
            }
            set {
                this.lfoDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceFeedback Feedback {
            get {
                return this.feedbackField;
            }
            set {
                this.feedbackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceDelay Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceDryWetMix DryWetMix {
            get {
                return this.dryWetMixField;
            }
            set {
                this.dryWetMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDevicePhase Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceFilterType FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceFilterFreq FilterFreq {
            get {
                return this.filterFreqField;
            }
            set {
                this.filterFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceFilterResonance FilterResonance {
            get {
                return this.filterResonanceField;
            }
            set {
                this.filterResonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceRunTimePreset {
        
        private ChorusDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public ChorusDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceDeviceSlotRunTimePreset {
        
        private ChorusDeviceLfoRateRunTimePreset lfoRateField;
        
        private ChorusDeviceLfoDepthRunTimePreset lfoDepthField;
        
        private ChorusDeviceFeedbackRunTimePreset feedbackField;
        
        private ChorusDeviceDelayRunTimePreset delayField;
        
        private ChorusDeviceDryWetMixRunTimePreset dryWetMixField;
        
        private ChorusDevicePhaseRunTimePreset phaseField;
        
        private ChorusDeviceFilterTypeRunTimePreset filterTypeField;
        
        private ChorusDeviceFilterFreqRunTimePreset filterFreqField;
        
        private ChorusDeviceFilterResonanceRunTimePreset filterResonanceField;
        
        private string typeField;
        
        public ChorusDeviceDeviceSlotRunTimePreset() {
            this.typeField = "ChorusDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceLfoRateRunTimePreset LfoRate {
            get {
                return this.lfoRateField;
            }
            set {
                this.lfoRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceLfoDepthRunTimePreset LfoDepth {
            get {
                return this.lfoDepthField;
            }
            set {
                this.lfoDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceFeedbackRunTimePreset Feedback {
            get {
                return this.feedbackField;
            }
            set {
                this.feedbackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceDelayRunTimePreset Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceDryWetMixRunTimePreset DryWetMix {
            get {
                return this.dryWetMixField;
            }
            set {
                this.dryWetMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDevicePhaseRunTimePreset Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceFilterTypeRunTimePreset FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceFilterFreqRunTimePreset FilterFreq {
            get {
                return this.filterFreqField;
            }
            set {
                this.filterFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDeviceFilterResonanceRunTimePreset FilterResonance {
            get {
                return this.filterResonanceField;
            }
            set {
                this.filterResonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceLfoRateRunTimePreset {
        
        private float valueField;
        
        public ChorusDeviceLfoRateRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceLfoDepthRunTimePreset {
        
        private float valueField;
        
        public ChorusDeviceLfoDepthRunTimePreset() {
            this.valueField = ((float)(0.4F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceFeedbackRunTimePreset {
        
        private float valueField;
        
        public ChorusDeviceFeedbackRunTimePreset() {
            this.valueField = ((float)(0.4F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceDelayRunTimePreset {
        
        private float valueField;
        
        public ChorusDeviceDelayRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceDryWetMixRunTimePreset {
        
        private float valueField;
        
        public ChorusDeviceDryWetMixRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDevicePhaseRunTimePreset {
        
        private float valueField;
        
        public ChorusDevicePhaseRunTimePreset() {
            this.valueField = ((float)(3.141593F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3.141593")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceFilterTypeRunTimePreset {
        
        private float valueField;
        
        public ChorusDeviceFilterTypeRunTimePreset() {
            this.valueField = ((float)(3F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceFilterFreqRunTimePreset {
        
        private float valueField;
        
        public ChorusDeviceFilterFreqRunTimePreset() {
            this.valueField = ((float)(127F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceFilterResonanceRunTimePreset {
        
        private float valueField;
        
        public ChorusDeviceFilterResonanceRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceLfoRate {
        
        private float valueField;
        
        private ChorusDeviceLfoRateVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDeviceLfoRate() {
            this.valueField = ((float)(1F));
            this.visualizationField = ChorusDeviceLfoRateVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDeviceLfoRateVisualization.Deviceonly)]
        public ChorusDeviceLfoRateVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDeviceLfoRateVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceLfoDepth {
        
        private float valueField;
        
        private ChorusDeviceLfoDepthVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDeviceLfoDepth() {
            this.valueField = ((float)(0.4F));
            this.visualizationField = ChorusDeviceLfoDepthVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDeviceLfoDepthVisualization.Deviceonly)]
        public ChorusDeviceLfoDepthVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDeviceLfoDepthVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceFeedback {
        
        private float valueField;
        
        private ChorusDeviceFeedbackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDeviceFeedback() {
            this.valueField = ((float)(0.4F));
            this.visualizationField = ChorusDeviceFeedbackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDeviceFeedbackVisualization.Deviceonly)]
        public ChorusDeviceFeedbackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDeviceFeedbackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceDelay {
        
        private float valueField;
        
        private ChorusDeviceDelayVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDeviceDelay() {
            this.valueField = ((float)(0F));
            this.visualizationField = ChorusDeviceDelayVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDeviceDelayVisualization.Deviceonly)]
        public ChorusDeviceDelayVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDeviceDelayVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceDryWetMix {
        
        private float valueField;
        
        private ChorusDeviceDryWetMixVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDeviceDryWetMix() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = ChorusDeviceDryWetMixVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDeviceDryWetMixVisualization.Deviceonly)]
        public ChorusDeviceDryWetMixVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDeviceDryWetMixVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDevicePhase {
        
        private float valueField;
        
        private ChorusDevicePhaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDevicePhase() {
            this.valueField = ((float)(3.141593F));
            this.visualizationField = ChorusDevicePhaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3.141593")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDevicePhaseVisualization.Deviceonly)]
        public ChorusDevicePhaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDevicePhaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceFilterType {
        
        private float valueField;
        
        private ChorusDeviceFilterTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDeviceFilterType() {
            this.valueField = ((float)(3F));
            this.visualizationField = ChorusDeviceFilterTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDeviceFilterTypeVisualization.Deviceonly)]
        public ChorusDeviceFilterTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDeviceFilterTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceFilterFreq {
        
        private float valueField;
        
        private ChorusDeviceFilterFreqVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDeviceFilterFreq() {
            this.valueField = ((float)(127F));
            this.visualizationField = ChorusDeviceFilterFreqVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDeviceFilterFreqVisualization.Deviceonly)]
        public ChorusDeviceFilterFreqVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDeviceFilterFreqVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChorusDeviceFilterResonance {
        
        private float valueField;
        
        private ChorusDeviceFilterResonanceVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ChorusDeviceFilterResonance() {
            this.valueField = ((float)(0F));
            this.visualizationField = ChorusDeviceFilterResonanceVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ChorusDeviceFilterResonanceVisualization.Deviceonly)]
        public ChorusDeviceFilterResonanceVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChorusDeviceFilterResonanceVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private CompressorDeviceRunTimePreset runTimePresetAField;
        
        private CompressorDeviceRunTimePreset runTimePresetBField;
        
        private CompressorDeviceLogThreshold logThresholdField;
        
        private CompressorDeviceRatio ratioField;
        
        private CompressorDeviceAttack attackField;
        
        private CompressorDeviceRelease releaseField;
        
        private CompressorDeviceGain gainField;
        
        private string typeField;
        
        public CompressorDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "CompressorDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceLogThreshold LogThreshold {
            get {
                return this.logThresholdField;
            }
            set {
                this.logThresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceRatio Ratio {
            get {
                return this.ratioField;
            }
            set {
                this.ratioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceAttack Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceRelease Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceGain Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceRunTimePreset {
        
        private CompressorDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public CompressorDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceDeviceSlotRunTimePreset {
        
        private CompressorDeviceLogThresholdRunTimePreset logThresholdField;
        
        private CompressorDeviceRatioRunTimePreset ratioField;
        
        private CompressorDeviceAttackRunTimePreset attackField;
        
        private CompressorDeviceReleaseRunTimePreset releaseField;
        
        private CompressorDeviceGainRunTimePreset gainField;
        
        private string typeField;
        
        public CompressorDeviceDeviceSlotRunTimePreset() {
            this.typeField = "CompressorDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceLogThresholdRunTimePreset LogThreshold {
            get {
                return this.logThresholdField;
            }
            set {
                this.logThresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceRatioRunTimePreset Ratio {
            get {
                return this.ratioField;
            }
            set {
                this.ratioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceAttackRunTimePreset Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceReleaseRunTimePreset Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDeviceGainRunTimePreset Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceLogThresholdRunTimePreset {
        
        private float valueField;
        
        public CompressorDeviceLogThresholdRunTimePreset() {
            this.valueField = ((float)(11.67803F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "11.67803")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceRatioRunTimePreset {
        
        private float valueField;
        
        public CompressorDeviceRatioRunTimePreset() {
            this.valueField = ((float)(2F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceAttackRunTimePreset {
        
        private float valueField;
        
        public CompressorDeviceAttackRunTimePreset() {
            this.valueField = ((float)(0.1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceReleaseRunTimePreset {
        
        private float valueField;
        
        public CompressorDeviceReleaseRunTimePreset() {
            this.valueField = ((float)(10F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceGainRunTimePreset {
        
        private float valueField;
        
        public CompressorDeviceGainRunTimePreset() {
            this.valueField = ((float)(1.412538F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1.412538")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceLogThreshold {
        
        private float valueField;
        
        private CompressorDeviceLogThresholdVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public CompressorDeviceLogThreshold() {
            this.valueField = ((float)(11.67803F));
            this.visualizationField = CompressorDeviceLogThresholdVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "11.67803")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(CompressorDeviceLogThresholdVisualization.Deviceonly)]
        public CompressorDeviceLogThresholdVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CompressorDeviceLogThresholdVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceRatio {
        
        private float valueField;
        
        private CompressorDeviceRatioVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public CompressorDeviceRatio() {
            this.valueField = ((float)(2F));
            this.visualizationField = CompressorDeviceRatioVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(CompressorDeviceRatioVisualization.Deviceonly)]
        public CompressorDeviceRatioVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CompressorDeviceRatioVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceAttack {
        
        private float valueField;
        
        private CompressorDeviceAttackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public CompressorDeviceAttack() {
            this.valueField = ((float)(0.1F));
            this.visualizationField = CompressorDeviceAttackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(CompressorDeviceAttackVisualization.Deviceonly)]
        public CompressorDeviceAttackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CompressorDeviceAttackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceRelease {
        
        private float valueField;
        
        private CompressorDeviceReleaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public CompressorDeviceRelease() {
            this.valueField = ((float)(10F));
            this.visualizationField = CompressorDeviceReleaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(CompressorDeviceReleaseVisualization.Deviceonly)]
        public CompressorDeviceReleaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CompressorDeviceReleaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressorDeviceGain {
        
        private float valueField;
        
        private CompressorDeviceGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public CompressorDeviceGain() {
            this.valueField = ((float)(1.412538F));
            this.visualizationField = CompressorDeviceGainVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1.412538")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(CompressorDeviceGainVisualization.MixerandDevice)]
        public CompressorDeviceGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CompressorDeviceGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DcOffsetDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private DcOffsetDeviceRunTimePreset runTimePresetAField;
        
        private DcOffsetDeviceRunTimePreset runTimePresetBField;
        
        private DcOffsetDeviceDCOffset dCOffsetField;
        
        private DcOffsetDeviceAutoDC autoDCField;
        
        private string typeField;
        
        public DcOffsetDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "DcOffsetDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDeviceDCOffset DCOffset {
            get {
                return this.dCOffsetField;
            }
            set {
                this.dCOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDeviceAutoDC AutoDC {
            get {
                return this.autoDCField;
            }
            set {
                this.autoDCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DcOffsetDeviceRunTimePreset {
        
        private DcOffsetDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public DcOffsetDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DcOffsetDeviceDeviceSlotRunTimePreset {
        
        private DcOffsetDeviceDCOffsetRunTimePreset dCOffsetField;
        
        private DcOffsetDeviceAutoDCRunTimePreset autoDCField;
        
        private string typeField;
        
        public DcOffsetDeviceDeviceSlotRunTimePreset() {
            this.typeField = "DcOffsetDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDeviceDCOffsetRunTimePreset DCOffset {
            get {
                return this.dCOffsetField;
            }
            set {
                this.dCOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDeviceAutoDCRunTimePreset AutoDC {
            get {
                return this.autoDCField;
            }
            set {
                this.autoDCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DcOffsetDeviceDCOffsetRunTimePreset {
        
        private float valueField;
        
        public DcOffsetDeviceDCOffsetRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DcOffsetDeviceAutoDCRunTimePreset {
        
        private float valueField;
        
        public DcOffsetDeviceAutoDCRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DcOffsetDeviceDCOffset {
        
        private float valueField;
        
        private DcOffsetDeviceDCOffsetVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DcOffsetDeviceDCOffset() {
            this.valueField = ((float)(0F));
            this.visualizationField = DcOffsetDeviceDCOffsetVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DcOffsetDeviceDCOffsetVisualization.Deviceonly)]
        public DcOffsetDeviceDCOffsetVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DcOffsetDeviceDCOffsetVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DcOffsetDeviceAutoDC {
        
        private float valueField;
        
        private DcOffsetDeviceAutoDCVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DcOffsetDeviceAutoDC() {
            this.valueField = ((float)(0F));
            this.visualizationField = DcOffsetDeviceAutoDCVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DcOffsetDeviceAutoDCVisualization.Deviceonly)]
        public DcOffsetDeviceAutoDCVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DcOffsetDeviceAutoDCVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private DelayDeviceRunTimePreset runTimePresetAField;
        
        private DelayDeviceRunTimePreset runTimePresetBField;
        
        private DelayDeviceTrackSend trackSendField;
        
        private DelayDeviceLDelay lDelayField;
        
        private DelayDeviceRDelay rDelayField;
        
        private DelayDeviceLFeedback lFeedbackField;
        
        private DelayDeviceRFeedback rFeedbackField;
        
        private DelayDeviceMuteDrySignal muteDrySignalField;
        
        private DelayDeviceLTapPan lTapPanField;
        
        private DelayDeviceRTapPan rTapPanField;
        
        private DelayDeviceLineSync lineSyncField;
        
        private DelayDeviceLSyncTime lSyncTimeField;
        
        private DelayDeviceRSyncTime rSyncTimeField;
        
        private DelayDeviceLSyncOffset lSyncOffsetField;
        
        private DelayDeviceRSyncOffset rSyncOffsetField;
        
        private string typeField;
        
        public DelayDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "DelayDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceTrackSend TrackSend {
            get {
                return this.trackSendField;
            }
            set {
                this.trackSendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLDelay LDelay {
            get {
                return this.lDelayField;
            }
            set {
                this.lDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRDelay RDelay {
            get {
                return this.rDelayField;
            }
            set {
                this.rDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLFeedback LFeedback {
            get {
                return this.lFeedbackField;
            }
            set {
                this.lFeedbackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRFeedback RFeedback {
            get {
                return this.rFeedbackField;
            }
            set {
                this.rFeedbackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceMuteDrySignal MuteDrySignal {
            get {
                return this.muteDrySignalField;
            }
            set {
                this.muteDrySignalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLTapPan LTapPan {
            get {
                return this.lTapPanField;
            }
            set {
                this.lTapPanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRTapPan RTapPan {
            get {
                return this.rTapPanField;
            }
            set {
                this.rTapPanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLineSync LineSync {
            get {
                return this.lineSyncField;
            }
            set {
                this.lineSyncField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLSyncTime LSyncTime {
            get {
                return this.lSyncTimeField;
            }
            set {
                this.lSyncTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRSyncTime RSyncTime {
            get {
                return this.rSyncTimeField;
            }
            set {
                this.rSyncTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLSyncOffset LSyncOffset {
            get {
                return this.lSyncOffsetField;
            }
            set {
                this.lSyncOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRSyncOffset RSyncOffset {
            get {
                return this.rSyncOffsetField;
            }
            set {
                this.rSyncOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRunTimePreset {
        
        private DelayDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public DelayDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceDeviceSlotRunTimePreset {
        
        private DelayDeviceTrackSendRunTimePreset trackSendField;
        
        private DelayDeviceLDelayRunTimePreset lDelayField;
        
        private DelayDeviceRDelayRunTimePreset rDelayField;
        
        private DelayDeviceLFeedbackRunTimePreset lFeedbackField;
        
        private DelayDeviceRFeedbackRunTimePreset rFeedbackField;
        
        private DelayDeviceMuteDrySignalRunTimePreset muteDrySignalField;
        
        private DelayDeviceLTapPanRunTimePreset lTapPanField;
        
        private DelayDeviceRTapPanRunTimePreset rTapPanField;
        
        private DelayDeviceLineSyncRunTimePreset lineSyncField;
        
        private DelayDeviceLSyncTimeRunTimePreset lSyncTimeField;
        
        private DelayDeviceRSyncTimeRunTimePreset rSyncTimeField;
        
        private DelayDeviceLSyncOffsetRunTimePreset lSyncOffsetField;
        
        private DelayDeviceRSyncOffsetRunTimePreset rSyncOffsetField;
        
        private string typeField;
        
        public DelayDeviceDeviceSlotRunTimePreset() {
            this.typeField = "DelayDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceTrackSendRunTimePreset TrackSend {
            get {
                return this.trackSendField;
            }
            set {
                this.trackSendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLDelayRunTimePreset LDelay {
            get {
                return this.lDelayField;
            }
            set {
                this.lDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRDelayRunTimePreset RDelay {
            get {
                return this.rDelayField;
            }
            set {
                this.rDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLFeedbackRunTimePreset LFeedback {
            get {
                return this.lFeedbackField;
            }
            set {
                this.lFeedbackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRFeedbackRunTimePreset RFeedback {
            get {
                return this.rFeedbackField;
            }
            set {
                this.rFeedbackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceMuteDrySignalRunTimePreset MuteDrySignal {
            get {
                return this.muteDrySignalField;
            }
            set {
                this.muteDrySignalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLTapPanRunTimePreset LTapPan {
            get {
                return this.lTapPanField;
            }
            set {
                this.lTapPanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRTapPanRunTimePreset RTapPan {
            get {
                return this.rTapPanField;
            }
            set {
                this.rTapPanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLineSyncRunTimePreset LineSync {
            get {
                return this.lineSyncField;
            }
            set {
                this.lineSyncField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLSyncTimeRunTimePreset LSyncTime {
            get {
                return this.lSyncTimeField;
            }
            set {
                this.lSyncTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRSyncTimeRunTimePreset RSyncTime {
            get {
                return this.rSyncTimeField;
            }
            set {
                this.rSyncTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceLSyncOffsetRunTimePreset LSyncOffset {
            get {
                return this.lSyncOffsetField;
            }
            set {
                this.lSyncOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDeviceRSyncOffsetRunTimePreset RSyncOffset {
            get {
                return this.rSyncOffsetField;
            }
            set {
                this.rSyncOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceTrackSendRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceTrackSendRunTimePreset() {
            this.valueField = ((float)(127F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLDelayRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceLDelayRunTimePreset() {
            this.valueField = ((float)(130F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "130")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRDelayRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceRDelayRunTimePreset() {
            this.valueField = ((float)(391F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "391")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLFeedbackRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceLFeedbackRunTimePreset() {
            this.valueField = ((float)(0.15F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.15")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRFeedbackRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceRFeedbackRunTimePreset() {
            this.valueField = ((float)(0.3F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceMuteDrySignalRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceMuteDrySignalRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLTapPanRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceLTapPanRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRTapPanRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceRTapPanRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLineSyncRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceLineSyncRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLSyncTimeRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceLSyncTimeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRSyncTimeRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceRSyncTimeRunTimePreset() {
            this.valueField = ((float)(3F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLSyncOffsetRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceLSyncOffsetRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRSyncOffsetRunTimePreset {
        
        private float valueField;
        
        public DelayDeviceRSyncOffsetRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceTrackSend {
        
        private float valueField;
        
        private DelayDeviceTrackSendVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceTrackSend() {
            this.valueField = ((float)(127F));
            this.visualizationField = DelayDeviceTrackSendVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceTrackSendVisualization.Deviceonly)]
        public DelayDeviceTrackSendVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceTrackSendVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLDelay {
        
        private float valueField;
        
        private DelayDeviceLDelayVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceLDelay() {
            this.valueField = ((float)(130F));
            this.visualizationField = DelayDeviceLDelayVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "130")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceLDelayVisualization.Deviceonly)]
        public DelayDeviceLDelayVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceLDelayVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRDelay {
        
        private float valueField;
        
        private DelayDeviceRDelayVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceRDelay() {
            this.valueField = ((float)(391F));
            this.visualizationField = DelayDeviceRDelayVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "391")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceRDelayVisualization.Deviceonly)]
        public DelayDeviceRDelayVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceRDelayVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLFeedback {
        
        private float valueField;
        
        private DelayDeviceLFeedbackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceLFeedback() {
            this.valueField = ((float)(0.15F));
            this.visualizationField = DelayDeviceLFeedbackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.15")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceLFeedbackVisualization.Deviceonly)]
        public DelayDeviceLFeedbackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceLFeedbackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRFeedback {
        
        private float valueField;
        
        private DelayDeviceRFeedbackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceRFeedback() {
            this.valueField = ((float)(0.3F));
            this.visualizationField = DelayDeviceRFeedbackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceRFeedbackVisualization.Deviceonly)]
        public DelayDeviceRFeedbackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceRFeedbackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceMuteDrySignal {
        
        private float valueField;
        
        private DelayDeviceMuteDrySignalVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceMuteDrySignal() {
            this.valueField = ((float)(0F));
            this.visualizationField = DelayDeviceMuteDrySignalVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceMuteDrySignalVisualization.Deviceonly)]
        public DelayDeviceMuteDrySignalVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceMuteDrySignalVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLTapPan {
        
        private float valueField;
        
        private DelayDeviceLTapPanVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceLTapPan() {
            this.valueField = ((float)(0F));
            this.visualizationField = DelayDeviceLTapPanVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceLTapPanVisualization.Deviceonly)]
        public DelayDeviceLTapPanVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceLTapPanVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRTapPan {
        
        private float valueField;
        
        private DelayDeviceRTapPanVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceRTapPan() {
            this.valueField = ((float)(1F));
            this.visualizationField = DelayDeviceRTapPanVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceRTapPanVisualization.Deviceonly)]
        public DelayDeviceRTapPanVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceRTapPanVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLineSync {
        
        private float valueField;
        
        private DelayDeviceLineSyncVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceLineSync() {
            this.valueField = ((float)(0F));
            this.visualizationField = DelayDeviceLineSyncVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceLineSyncVisualization.Deviceonly)]
        public DelayDeviceLineSyncVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceLineSyncVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLSyncTime {
        
        private float valueField;
        
        private DelayDeviceLSyncTimeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceLSyncTime() {
            this.valueField = ((float)(1F));
            this.visualizationField = DelayDeviceLSyncTimeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceLSyncTimeVisualization.Deviceonly)]
        public DelayDeviceLSyncTimeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceLSyncTimeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRSyncTime {
        
        private float valueField;
        
        private DelayDeviceRSyncTimeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceRSyncTime() {
            this.valueField = ((float)(3F));
            this.visualizationField = DelayDeviceRSyncTimeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceRSyncTimeVisualization.Deviceonly)]
        public DelayDeviceRSyncTimeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceRSyncTimeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceLSyncOffset {
        
        private float valueField;
        
        private DelayDeviceLSyncOffsetVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceLSyncOffset() {
            this.valueField = ((float)(0F));
            this.visualizationField = DelayDeviceLSyncOffsetVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceLSyncOffsetVisualization.Deviceonly)]
        public DelayDeviceLSyncOffsetVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceLSyncOffsetVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelayDeviceRSyncOffset {
        
        private float valueField;
        
        private DelayDeviceRSyncOffsetVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DelayDeviceRSyncOffset() {
            this.valueField = ((float)(0F));
            this.visualizationField = DelayDeviceRSyncOffsetVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DelayDeviceRSyncOffsetVisualization.Deviceonly)]
        public DelayDeviceRSyncOffsetVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DelayDeviceRSyncOffsetVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceDistortionDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private DistortionDeviceRunTimePreset runTimePresetAField;
        
        private DistortionDeviceRunTimePreset runTimePresetBField;
        
        private DistortionDeviceThreshold thresholdField;
        
        private DistortionDeviceLpOrClamp lpOrClampField;
        
        private DistortionDeviceWetOut wetOutField;
        
        private DistortionDeviceDryOut dryOutField;
        
        private DistortionDeviceGateOrFilter gateOrFilterField;
        
        private DistortionDeviceType typeField;
        
        private string typeField1;
        
        public DistortionDeviceDistortionDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField1 = "DistortionDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceThreshold Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceLpOrClamp LpOrClamp {
            get {
                return this.lpOrClampField;
            }
            set {
                this.lpOrClampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceWetOut WetOut {
            get {
                return this.wetOutField;
            }
            set {
                this.wetOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceDryOut DryOut {
            get {
                return this.dryOutField;
            }
            set {
                this.dryOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceGateOrFilter GateOrFilter {
            get {
                return this.gateOrFilterField;
            }
            set {
                this.gateOrFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceRunTimePreset {
        
        private DistortionDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public DistortionDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceDeviceSlotRunTimePreset {
        
        private DistortionDeviceThresholdRunTimePreset thresholdField;
        
        private DistortionDeviceLpOrClampRunTimePreset lpOrClampField;
        
        private DistortionDeviceWetOutRunTimePreset wetOutField;
        
        private DistortionDeviceDryOutRunTimePreset dryOutField;
        
        private DistortionDeviceGateOrFilterRunTimePreset gateOrFilterField;
        
        private DistortionDeviceTypeRunTimePreset typeField;
        
        private string typeField1;
        
        public DistortionDeviceDeviceSlotRunTimePreset() {
            this.typeField1 = "DistortionDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceThresholdRunTimePreset Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceLpOrClampRunTimePreset LpOrClamp {
            get {
                return this.lpOrClampField;
            }
            set {
                this.lpOrClampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceWetOutRunTimePreset WetOut {
            get {
                return this.wetOutField;
            }
            set {
                this.wetOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceDryOutRunTimePreset DryOut {
            get {
                return this.dryOutField;
            }
            set {
                this.dryOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceGateOrFilterRunTimePreset GateOrFilter {
            get {
                return this.gateOrFilterField;
            }
            set {
                this.gateOrFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceTypeRunTimePreset Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceThresholdRunTimePreset {
        
        private float valueField;
        
        public DistortionDeviceThresholdRunTimePreset() {
            this.valueField = ((float)(5000F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "5000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceLpOrClampRunTimePreset {
        
        private float valueField;
        
        public DistortionDeviceLpOrClampRunTimePreset() {
            this.valueField = ((float)(16000F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "16000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceWetOutRunTimePreset {
        
        private float valueField;
        
        public DistortionDeviceWetOutRunTimePreset() {
            this.valueField = ((float)(13F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "13")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceDryOutRunTimePreset {
        
        private float valueField;
        
        public DistortionDeviceDryOutRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceGateOrFilterRunTimePreset {
        
        private float valueField;
        
        public DistortionDeviceGateOrFilterRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceTypeRunTimePreset {
        
        private float valueField;
        
        public DistortionDeviceTypeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceThreshold {
        
        private float valueField;
        
        private DistortionDeviceThresholdVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DistortionDeviceThreshold() {
            this.valueField = ((float)(5000F));
            this.visualizationField = DistortionDeviceThresholdVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "5000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DistortionDeviceThresholdVisualization.Deviceonly)]
        public DistortionDeviceThresholdVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DistortionDeviceThresholdVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceLpOrClamp {
        
        private float valueField;
        
        private DistortionDeviceLpOrClampVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DistortionDeviceLpOrClamp() {
            this.valueField = ((float)(16000F));
            this.visualizationField = DistortionDeviceLpOrClampVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "16000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DistortionDeviceLpOrClampVisualization.Deviceonly)]
        public DistortionDeviceLpOrClampVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DistortionDeviceLpOrClampVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceWetOut {
        
        private float valueField;
        
        private DistortionDeviceWetOutVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DistortionDeviceWetOut() {
            this.valueField = ((float)(13F));
            this.visualizationField = DistortionDeviceWetOutVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "13")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DistortionDeviceWetOutVisualization.Deviceonly)]
        public DistortionDeviceWetOutVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DistortionDeviceWetOutVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceDryOut {
        
        private float valueField;
        
        private DistortionDeviceDryOutVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DistortionDeviceDryOut() {
            this.valueField = ((float)(0F));
            this.visualizationField = DistortionDeviceDryOutVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DistortionDeviceDryOutVisualization.Deviceonly)]
        public DistortionDeviceDryOutVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DistortionDeviceDryOutVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceGateOrFilter {
        
        private float valueField;
        
        private DistortionDeviceGateOrFilterVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DistortionDeviceGateOrFilter() {
            this.valueField = ((float)(0F));
            this.visualizationField = DistortionDeviceGateOrFilterVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DistortionDeviceGateOrFilterVisualization.Deviceonly)]
        public DistortionDeviceGateOrFilterVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DistortionDeviceGateOrFilterVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistortionDeviceType {
        
        private float valueField;
        
        private DistortionDeviceTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DistortionDeviceType() {
            this.valueField = ((float)(1F));
            this.visualizationField = DistortionDeviceTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DistortionDeviceTypeVisualization.Deviceonly)]
        public DistortionDeviceTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DistortionDeviceTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceDistortionDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Distortion2DeviceRunTimePreset runTimePresetAField;
        
        private Distortion2DeviceRunTimePreset runTimePresetBField;
        
        private Distortion2DeviceType typeField;
        
        private Distortion2DeviceDrive driveField;
        
        private Distortion2DeviceTone toneField;
        
        private Distortion2DeviceWetOut wetOutField;
        
        private Distortion2DeviceDryOut dryOutField;
        
        private string typeField1;
        
        public Distortion2DeviceDistortionDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField1 = "Distortion2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDrive Drive {
            get {
                return this.driveField;
            }
            set {
                this.driveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceTone Tone {
            get {
                return this.toneField;
            }
            set {
                this.toneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceWetOut WetOut {
            get {
                return this.wetOutField;
            }
            set {
                this.wetOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDryOut DryOut {
            get {
                return this.dryOutField;
            }
            set {
                this.dryOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceRunTimePreset {
        
        private Distortion2DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Distortion2DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceDeviceSlotRunTimePreset {
        
        private Distortion2DeviceTypeRunTimePreset typeField;
        
        private Distortion2DeviceDriveRunTimePreset driveField;
        
        private Distortion2DeviceToneRunTimePreset toneField;
        
        private Distortion2DeviceWetOutRunTimePreset wetOutField;
        
        private Distortion2DeviceDryOutRunTimePreset dryOutField;
        
        private string typeField1;
        
        public Distortion2DeviceDeviceSlotRunTimePreset() {
            this.typeField1 = "Distortion2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceTypeRunTimePreset Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDriveRunTimePreset Drive {
            get {
                return this.driveField;
            }
            set {
                this.driveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceToneRunTimePreset Tone {
            get {
                return this.toneField;
            }
            set {
                this.toneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceWetOutRunTimePreset WetOut {
            get {
                return this.wetOutField;
            }
            set {
                this.wetOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDryOutRunTimePreset DryOut {
            get {
                return this.dryOutField;
            }
            set {
                this.dryOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceTypeRunTimePreset {
        
        private float valueField;
        
        public Distortion2DeviceTypeRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceDriveRunTimePreset {
        
        private float valueField;
        
        public Distortion2DeviceDriveRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceToneRunTimePreset {
        
        private float valueField;
        
        public Distortion2DeviceToneRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceWetOutRunTimePreset {
        
        private float valueField;
        
        public Distortion2DeviceWetOutRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceDryOutRunTimePreset {
        
        private float valueField;
        
        public Distortion2DeviceDryOutRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceType {
        
        private float valueField;
        
        private Distortion2DeviceTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Distortion2DeviceType() {
            this.valueField = ((float)(0F));
            this.visualizationField = Distortion2DeviceTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Distortion2DeviceTypeVisualization.Deviceonly)]
        public Distortion2DeviceTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Distortion2DeviceTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceDrive {
        
        private float valueField;
        
        private Distortion2DeviceDriveVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Distortion2DeviceDrive() {
            this.valueField = ((float)(0F));
            this.visualizationField = Distortion2DeviceDriveVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Distortion2DeviceDriveVisualization.Deviceonly)]
        public Distortion2DeviceDriveVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Distortion2DeviceDriveVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceTone {
        
        private float valueField;
        
        private Distortion2DeviceToneVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Distortion2DeviceTone() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = Distortion2DeviceToneVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Distortion2DeviceToneVisualization.Deviceonly)]
        public Distortion2DeviceToneVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Distortion2DeviceToneVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceWetOut {
        
        private float valueField;
        
        private Distortion2DeviceWetOutVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Distortion2DeviceWetOut() {
            this.valueField = ((float)(1F));
            this.visualizationField = Distortion2DeviceWetOutVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Distortion2DeviceWetOutVisualization.Deviceonly)]
        public Distortion2DeviceWetOutVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Distortion2DeviceWetOutVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Distortion2DeviceDryOut {
        
        private float valueField;
        
        private Distortion2DeviceDryOutVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Distortion2DeviceDryOut() {
            this.valueField = ((float)(0F));
            this.visualizationField = Distortion2DeviceDryOutVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Distortion2DeviceDryOutVisualization.Deviceonly)]
        public Distortion2DeviceDryOutVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Distortion2DeviceDryOutVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq10DeviceEqDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Eq10DeviceRunTimePreset runTimePresetAField;
        
        private Eq10DeviceRunTimePreset runTimePresetBField;
        
        private Eq10DeviceEqDeviceInputMode inputModeField;
        
        private float maxVisualizedGainField;
        
        private Eq10DeviceGain gain0Field;
        
        private Eq10DeviceGain gain1Field;
        
        private Eq10DeviceGain gain2Field;
        
        private Eq10DeviceGain gain3Field;
        
        private Eq10DeviceGain gain4Field;
        
        private Eq10DeviceGain gain5Field;
        
        private Eq10DeviceGain gain6Field;
        
        private Eq10DeviceGain gain7Field;
        
        private Eq10DeviceGain gain8Field;
        
        private Eq10DeviceGain gain9Field;
        
        private float frequency0Field;
        
        private float frequency1Field;
        
        private float frequency2Field;
        
        private float frequency3Field;
        
        private float frequency4Field;
        
        private float frequency5Field;
        
        private float frequency6Field;
        
        private float frequency7Field;
        
        private float frequency8Field;
        
        private float frequency9Field;
        
        private float bandWidth0Field;
        
        private float bandWidth1Field;
        
        private float bandWidth2Field;
        
        private float bandWidth3Field;
        
        private float bandWidth4Field;
        
        private float bandWidth5Field;
        
        private float bandWidth6Field;
        
        private float bandWidth7Field;
        
        private float bandWidth8Field;
        
        private float bandWidth9Field;
        
        private string typeField;
        
        public Eq10DeviceEqDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.inputModeField = Eq10DeviceEqDeviceInputMode.LR1;
            this.maxVisualizedGainField = ((float)(20F));
            this.frequency0Field = ((float)(50F));
            this.frequency1Field = ((float)(100F));
            this.frequency2Field = ((float)(300F));
            this.frequency3Field = ((float)(600F));
            this.frequency4Field = ((float)(1200F));
            this.frequency5Field = ((float)(2000F));
            this.frequency6Field = ((float)(3000.25F));
            this.frequency7Field = ((float)(5000F));
            this.frequency8Field = ((float)(10000F));
            this.frequency9Field = ((float)(15000F));
            this.bandWidth0Field = ((float)(1F));
            this.bandWidth1Field = ((float)(2F));
            this.bandWidth2Field = ((float)(2F));
            this.bandWidth3Field = ((float)(2F));
            this.bandWidth4Field = ((float)(2F));
            this.bandWidth5Field = ((float)(2F));
            this.bandWidth6Field = ((float)(2F));
            this.bandWidth7Field = ((float)(2F));
            this.bandWidth8Field = ((float)(2F));
            this.bandWidth9Field = ((float)(1F));
            this.typeField = "Eq10Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Eq10DeviceEqDeviceInputMode.LR1)]
        public Eq10DeviceEqDeviceInputMode InputMode {
            get {
                return this.inputModeField;
            }
            set {
                this.inputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float MaxVisualizedGain {
            get {
                return this.maxVisualizedGainField;
            }
            set {
                this.maxVisualizedGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain0 {
            get {
                return this.gain0Field;
            }
            set {
                this.gain0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain1 {
            get {
                return this.gain1Field;
            }
            set {
                this.gain1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain2 {
            get {
                return this.gain2Field;
            }
            set {
                this.gain2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain3 {
            get {
                return this.gain3Field;
            }
            set {
                this.gain3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain4 {
            get {
                return this.gain4Field;
            }
            set {
                this.gain4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain5 {
            get {
                return this.gain5Field;
            }
            set {
                this.gain5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain6 {
            get {
                return this.gain6Field;
            }
            set {
                this.gain6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain7 {
            get {
                return this.gain7Field;
            }
            set {
                this.gain7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain8 {
            get {
                return this.gain8Field;
            }
            set {
                this.gain8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGain Gain9 {
            get {
                return this.gain9Field;
            }
            set {
                this.gain9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "50")]
        public float Frequency0 {
            get {
                return this.frequency0Field;
            }
            set {
                this.frequency0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
        public float Frequency1 {
            get {
                return this.frequency1Field;
            }
            set {
                this.frequency1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "300")]
        public float Frequency2 {
            get {
                return this.frequency2Field;
            }
            set {
                this.frequency2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "600")]
        public float Frequency3 {
            get {
                return this.frequency3Field;
            }
            set {
                this.frequency3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1200")]
        public float Frequency4 {
            get {
                return this.frequency4Field;
            }
            set {
                this.frequency4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2000")]
        public float Frequency5 {
            get {
                return this.frequency5Field;
            }
            set {
                this.frequency5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3000.25")]
        public float Frequency6 {
            get {
                return this.frequency6Field;
            }
            set {
                this.frequency6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "5000")]
        public float Frequency7 {
            get {
                return this.frequency7Field;
            }
            set {
                this.frequency7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10000")]
        public float Frequency8 {
            get {
                return this.frequency8Field;
            }
            set {
                this.frequency8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "15000")]
        public float Frequency9 {
            get {
                return this.frequency9Field;
            }
            set {
                this.frequency9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float BandWidth0 {
            get {
                return this.bandWidth0Field;
            }
            set {
                this.bandWidth0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth1 {
            get {
                return this.bandWidth1Field;
            }
            set {
                this.bandWidth1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth2 {
            get {
                return this.bandWidth2Field;
            }
            set {
                this.bandWidth2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth3 {
            get {
                return this.bandWidth3Field;
            }
            set {
                this.bandWidth3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth4 {
            get {
                return this.bandWidth4Field;
            }
            set {
                this.bandWidth4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth5 {
            get {
                return this.bandWidth5Field;
            }
            set {
                this.bandWidth5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth6 {
            get {
                return this.bandWidth6Field;
            }
            set {
                this.bandWidth6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth7 {
            get {
                return this.bandWidth7Field;
            }
            set {
                this.bandWidth7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth8 {
            get {
                return this.bandWidth8Field;
            }
            set {
                this.bandWidth8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float BandWidth9 {
            get {
                return this.bandWidth9Field;
            }
            set {
                this.bandWidth9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq10DeviceRunTimePreset {
        
        private Eq10DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Eq10DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq10DeviceDeviceSlotRunTimePreset {
        
        private Eq10DeviceDeviceSlotRunTimePresetInputMode inputModeField;
        
        private float maxVisualizedGainField;
        
        private Eq10DeviceGainRunTimePreset gain0Field;
        
        private Eq10DeviceGainRunTimePreset gain1Field;
        
        private Eq10DeviceGainRunTimePreset gain2Field;
        
        private Eq10DeviceGainRunTimePreset gain3Field;
        
        private Eq10DeviceGainRunTimePreset gain4Field;
        
        private Eq10DeviceGainRunTimePreset gain5Field;
        
        private Eq10DeviceGainRunTimePreset gain6Field;
        
        private Eq10DeviceGainRunTimePreset gain7Field;
        
        private Eq10DeviceGainRunTimePreset gain8Field;
        
        private Eq10DeviceGainRunTimePreset gain9Field;
        
        private float frequency0Field;
        
        private float frequency1Field;
        
        private float frequency2Field;
        
        private float frequency3Field;
        
        private float frequency4Field;
        
        private float frequency5Field;
        
        private float frequency6Field;
        
        private float frequency7Field;
        
        private float frequency8Field;
        
        private float frequency9Field;
        
        private float bandWidth0Field;
        
        private float bandWidth1Field;
        
        private float bandWidth2Field;
        
        private float bandWidth3Field;
        
        private float bandWidth4Field;
        
        private float bandWidth5Field;
        
        private float bandWidth6Field;
        
        private float bandWidth7Field;
        
        private float bandWidth8Field;
        
        private float bandWidth9Field;
        
        private string typeField;
        
        public Eq10DeviceDeviceSlotRunTimePreset() {
            this.inputModeField = Eq10DeviceDeviceSlotRunTimePresetInputMode.LR1;
            this.maxVisualizedGainField = ((float)(20F));
            this.frequency0Field = ((float)(50F));
            this.frequency1Field = ((float)(100F));
            this.frequency2Field = ((float)(300F));
            this.frequency3Field = ((float)(600F));
            this.frequency4Field = ((float)(1200F));
            this.frequency5Field = ((float)(2000F));
            this.frequency6Field = ((float)(3000.25F));
            this.frequency7Field = ((float)(5000F));
            this.frequency8Field = ((float)(10000F));
            this.frequency9Field = ((float)(15000F));
            this.bandWidth0Field = ((float)(1F));
            this.bandWidth1Field = ((float)(2F));
            this.bandWidth2Field = ((float)(2F));
            this.bandWidth3Field = ((float)(2F));
            this.bandWidth4Field = ((float)(2F));
            this.bandWidth5Field = ((float)(2F));
            this.bandWidth6Field = ((float)(2F));
            this.bandWidth7Field = ((float)(2F));
            this.bandWidth8Field = ((float)(2F));
            this.bandWidth9Field = ((float)(1F));
            this.typeField = "Eq10Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Eq10DeviceDeviceSlotRunTimePresetInputMode.LR1)]
        public Eq10DeviceDeviceSlotRunTimePresetInputMode InputMode {
            get {
                return this.inputModeField;
            }
            set {
                this.inputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float MaxVisualizedGain {
            get {
                return this.maxVisualizedGainField;
            }
            set {
                this.maxVisualizedGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain0 {
            get {
                return this.gain0Field;
            }
            set {
                this.gain0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain1 {
            get {
                return this.gain1Field;
            }
            set {
                this.gain1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain2 {
            get {
                return this.gain2Field;
            }
            set {
                this.gain2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain3 {
            get {
                return this.gain3Field;
            }
            set {
                this.gain3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain4 {
            get {
                return this.gain4Field;
            }
            set {
                this.gain4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain5 {
            get {
                return this.gain5Field;
            }
            set {
                this.gain5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain6 {
            get {
                return this.gain6Field;
            }
            set {
                this.gain6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain7 {
            get {
                return this.gain7Field;
            }
            set {
                this.gain7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain8 {
            get {
                return this.gain8Field;
            }
            set {
                this.gain8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceGainRunTimePreset Gain9 {
            get {
                return this.gain9Field;
            }
            set {
                this.gain9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "50")]
        public float Frequency0 {
            get {
                return this.frequency0Field;
            }
            set {
                this.frequency0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
        public float Frequency1 {
            get {
                return this.frequency1Field;
            }
            set {
                this.frequency1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "300")]
        public float Frequency2 {
            get {
                return this.frequency2Field;
            }
            set {
                this.frequency2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "600")]
        public float Frequency3 {
            get {
                return this.frequency3Field;
            }
            set {
                this.frequency3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1200")]
        public float Frequency4 {
            get {
                return this.frequency4Field;
            }
            set {
                this.frequency4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2000")]
        public float Frequency5 {
            get {
                return this.frequency5Field;
            }
            set {
                this.frequency5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3000.25")]
        public float Frequency6 {
            get {
                return this.frequency6Field;
            }
            set {
                this.frequency6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "5000")]
        public float Frequency7 {
            get {
                return this.frequency7Field;
            }
            set {
                this.frequency7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10000")]
        public float Frequency8 {
            get {
                return this.frequency8Field;
            }
            set {
                this.frequency8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "15000")]
        public float Frequency9 {
            get {
                return this.frequency9Field;
            }
            set {
                this.frequency9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float BandWidth0 {
            get {
                return this.bandWidth0Field;
            }
            set {
                this.bandWidth0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth1 {
            get {
                return this.bandWidth1Field;
            }
            set {
                this.bandWidth1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth2 {
            get {
                return this.bandWidth2Field;
            }
            set {
                this.bandWidth2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth3 {
            get {
                return this.bandWidth3Field;
            }
            set {
                this.bandWidth3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth4 {
            get {
                return this.bandWidth4Field;
            }
            set {
                this.bandWidth4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth5 {
            get {
                return this.bandWidth5Field;
            }
            set {
                this.bandWidth5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth6 {
            get {
                return this.bandWidth6Field;
            }
            set {
                this.bandWidth6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth7 {
            get {
                return this.bandWidth7Field;
            }
            set {
                this.bandWidth7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
        public float BandWidth8 {
            get {
                return this.bandWidth8Field;
            }
            set {
                this.bandWidth8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float BandWidth9 {
            get {
                return this.bandWidth9Field;
            }
            set {
                this.bandWidth9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Eq10DeviceDeviceSlotRunTimePresetInputMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L-R")]
        LR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq10DeviceGainRunTimePreset {
        
        private float valueField;
        
        public Eq10DeviceGainRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Eq10DeviceEqDeviceInputMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L-R")]
        LR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq10DeviceGain {
        
        private float valueField;
        
        private Eq10DeviceGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Eq10DeviceGain() {
            this.valueField = ((float)(0F));
            this.visualizationField = Eq10DeviceGainVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Eq10DeviceGainVisualization.Deviceonly)]
        public Eq10DeviceGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Eq10DeviceGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq5DeviceEqDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Eq5DeviceRunTimePreset runTimePresetAField;
        
        private Eq5DeviceRunTimePreset runTimePresetBField;
        
        private Eq5DeviceEqDeviceInputMode inputModeField;
        
        private float maxVisualizedGainField;
        
        private Eq5DeviceGain gain0Field;
        
        private Eq5DeviceGain gain1Field;
        
        private Eq5DeviceGain gain2Field;
        
        private Eq5DeviceGain gain3Field;
        
        private Eq5DeviceGain gain4Field;
        
        private float frequency0Field;
        
        private float frequency1Field;
        
        private float frequency2Field;
        
        private float frequency3Field;
        
        private float frequency4Field;
        
        private float bandWidth0Field;
        
        private float bandWidth1Field;
        
        private float bandWidth2Field;
        
        private float bandWidth3Field;
        
        private float bandWidth4Field;
        
        private string typeField;
        
        public Eq5DeviceEqDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.inputModeField = Eq5DeviceEqDeviceInputMode.LR1;
            this.maxVisualizedGainField = ((float)(20F));
            this.frequency0Field = ((float)(100F));
            this.frequency1Field = ((float)(1000F));
            this.frequency2Field = ((float)(4000F));
            this.frequency3Field = ((float)(8000F));
            this.frequency4Field = ((float)(12000F));
            this.bandWidth0Field = ((float)(1F));
            this.bandWidth1Field = ((float)(4F));
            this.bandWidth2Field = ((float)(4F));
            this.bandWidth3Field = ((float)(4F));
            this.bandWidth4Field = ((float)(1F));
            this.typeField = "Eq5Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Eq5DeviceEqDeviceInputMode.LR1)]
        public Eq5DeviceEqDeviceInputMode InputMode {
            get {
                return this.inputModeField;
            }
            set {
                this.inputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float MaxVisualizedGain {
            get {
                return this.maxVisualizedGainField;
            }
            set {
                this.maxVisualizedGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGain Gain0 {
            get {
                return this.gain0Field;
            }
            set {
                this.gain0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGain Gain1 {
            get {
                return this.gain1Field;
            }
            set {
                this.gain1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGain Gain2 {
            get {
                return this.gain2Field;
            }
            set {
                this.gain2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGain Gain3 {
            get {
                return this.gain3Field;
            }
            set {
                this.gain3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGain Gain4 {
            get {
                return this.gain4Field;
            }
            set {
                this.gain4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
        public float Frequency0 {
            get {
                return this.frequency0Field;
            }
            set {
                this.frequency0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1000")]
        public float Frequency1 {
            get {
                return this.frequency1Field;
            }
            set {
                this.frequency1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4000")]
        public float Frequency2 {
            get {
                return this.frequency2Field;
            }
            set {
                this.frequency2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "8000")]
        public float Frequency3 {
            get {
                return this.frequency3Field;
            }
            set {
                this.frequency3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "12000")]
        public float Frequency4 {
            get {
                return this.frequency4Field;
            }
            set {
                this.frequency4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float BandWidth0 {
            get {
                return this.bandWidth0Field;
            }
            set {
                this.bandWidth0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float BandWidth1 {
            get {
                return this.bandWidth1Field;
            }
            set {
                this.bandWidth1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float BandWidth2 {
            get {
                return this.bandWidth2Field;
            }
            set {
                this.bandWidth2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float BandWidth3 {
            get {
                return this.bandWidth3Field;
            }
            set {
                this.bandWidth3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float BandWidth4 {
            get {
                return this.bandWidth4Field;
            }
            set {
                this.bandWidth4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq5DeviceRunTimePreset {
        
        private Eq5DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Eq5DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq5DeviceDeviceSlotRunTimePreset {
        
        private Eq5DeviceDeviceSlotRunTimePresetInputMode inputModeField;
        
        private float maxVisualizedGainField;
        
        private Eq5DeviceGainRunTimePreset gain0Field;
        
        private Eq5DeviceGainRunTimePreset gain1Field;
        
        private Eq5DeviceGainRunTimePreset gain2Field;
        
        private Eq5DeviceGainRunTimePreset gain3Field;
        
        private Eq5DeviceGainRunTimePreset gain4Field;
        
        private float frequency0Field;
        
        private float frequency1Field;
        
        private float frequency2Field;
        
        private float frequency3Field;
        
        private float frequency4Field;
        
        private float bandWidth0Field;
        
        private float bandWidth1Field;
        
        private float bandWidth2Field;
        
        private float bandWidth3Field;
        
        private float bandWidth4Field;
        
        private string typeField;
        
        public Eq5DeviceDeviceSlotRunTimePreset() {
            this.inputModeField = Eq5DeviceDeviceSlotRunTimePresetInputMode.LR1;
            this.maxVisualizedGainField = ((float)(20F));
            this.frequency0Field = ((float)(100F));
            this.frequency1Field = ((float)(1000F));
            this.frequency2Field = ((float)(4000F));
            this.frequency3Field = ((float)(8000F));
            this.frequency4Field = ((float)(12000F));
            this.bandWidth0Field = ((float)(1F));
            this.bandWidth1Field = ((float)(4F));
            this.bandWidth2Field = ((float)(4F));
            this.bandWidth3Field = ((float)(4F));
            this.bandWidth4Field = ((float)(1F));
            this.typeField = "Eq5Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Eq5DeviceDeviceSlotRunTimePresetInputMode.LR1)]
        public Eq5DeviceDeviceSlotRunTimePresetInputMode InputMode {
            get {
                return this.inputModeField;
            }
            set {
                this.inputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float MaxVisualizedGain {
            get {
                return this.maxVisualizedGainField;
            }
            set {
                this.maxVisualizedGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGainRunTimePreset Gain0 {
            get {
                return this.gain0Field;
            }
            set {
                this.gain0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGainRunTimePreset Gain1 {
            get {
                return this.gain1Field;
            }
            set {
                this.gain1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGainRunTimePreset Gain2 {
            get {
                return this.gain2Field;
            }
            set {
                this.gain2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGainRunTimePreset Gain3 {
            get {
                return this.gain3Field;
            }
            set {
                this.gain3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceGainRunTimePreset Gain4 {
            get {
                return this.gain4Field;
            }
            set {
                this.gain4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
        public float Frequency0 {
            get {
                return this.frequency0Field;
            }
            set {
                this.frequency0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1000")]
        public float Frequency1 {
            get {
                return this.frequency1Field;
            }
            set {
                this.frequency1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4000")]
        public float Frequency2 {
            get {
                return this.frequency2Field;
            }
            set {
                this.frequency2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "8000")]
        public float Frequency3 {
            get {
                return this.frequency3Field;
            }
            set {
                this.frequency3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "12000")]
        public float Frequency4 {
            get {
                return this.frequency4Field;
            }
            set {
                this.frequency4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float BandWidth0 {
            get {
                return this.bandWidth0Field;
            }
            set {
                this.bandWidth0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float BandWidth1 {
            get {
                return this.bandWidth1Field;
            }
            set {
                this.bandWidth1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float BandWidth2 {
            get {
                return this.bandWidth2Field;
            }
            set {
                this.bandWidth2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float BandWidth3 {
            get {
                return this.bandWidth3Field;
            }
            set {
                this.bandWidth3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float BandWidth4 {
            get {
                return this.bandWidth4Field;
            }
            set {
                this.bandWidth4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Eq5DeviceDeviceSlotRunTimePresetInputMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L-R")]
        LR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq5DeviceGainRunTimePreset {
        
        private float valueField;
        
        public Eq5DeviceGainRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Eq5DeviceEqDeviceInputMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L-R")]
        LR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eq5DeviceGain {
        
        private float valueField;
        
        private Eq5DeviceGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Eq5DeviceGain() {
            this.valueField = ((float)(0F));
            this.visualizationField = Eq5DeviceGainVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Eq5DeviceGainVisualization.Deviceonly)]
        public Eq5DeviceGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Eq5DeviceGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceFilterDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Filter1DeviceRunTimePreset runTimePresetAField;
        
        private Filter1DeviceRunTimePreset runTimePresetBField;
        
        private Filter1DeviceCutoff cutoffField;
        
        private Filter1DeviceResonance resonanceField;
        
        private Filter1DeviceInnertia innertiaField;
        
        private Filter1DeviceType typeField;
        
        private string typeField1;
        
        public Filter1DeviceFilterDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField1 = "Filter1Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceCutoff Cutoff {
            get {
                return this.cutoffField;
            }
            set {
                this.cutoffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceResonance Resonance {
            get {
                return this.resonanceField;
            }
            set {
                this.resonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceInnertia Innertia {
            get {
                return this.innertiaField;
            }
            set {
                this.innertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceRunTimePreset {
        
        private Filter1DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Filter1DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceDeviceSlotRunTimePreset {
        
        private Filter1DeviceCutoffRunTimePreset cutoffField;
        
        private Filter1DeviceResonanceRunTimePreset resonanceField;
        
        private Filter1DeviceInnertiaRunTimePreset innertiaField;
        
        private Filter1DeviceTypeRunTimePreset typeField;
        
        private string typeField1;
        
        public Filter1DeviceDeviceSlotRunTimePreset() {
            this.typeField1 = "Filter1Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceCutoffRunTimePreset Cutoff {
            get {
                return this.cutoffField;
            }
            set {
                this.cutoffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceResonanceRunTimePreset Resonance {
            get {
                return this.resonanceField;
            }
            set {
                this.resonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceInnertiaRunTimePreset Innertia {
            get {
                return this.innertiaField;
            }
            set {
                this.innertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceTypeRunTimePreset Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceCutoffRunTimePreset {
        
        private float valueField;
        
        public Filter1DeviceCutoffRunTimePreset() {
            this.valueField = ((float)(127F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceResonanceRunTimePreset {
        
        private float valueField;
        
        public Filter1DeviceResonanceRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceInnertiaRunTimePreset {
        
        private float valueField;
        
        public Filter1DeviceInnertiaRunTimePreset() {
            this.valueField = ((float)(0.0039062F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.0039062")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceTypeRunTimePreset {
        
        private float valueField;
        
        public Filter1DeviceTypeRunTimePreset() {
            this.valueField = ((float)(3F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceCutoff {
        
        private float valueField;
        
        private Filter1DeviceCutoffVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter1DeviceCutoff() {
            this.valueField = ((float)(127F));
            this.visualizationField = Filter1DeviceCutoffVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter1DeviceCutoffVisualization.Deviceonly)]
        public Filter1DeviceCutoffVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter1DeviceCutoffVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceResonance {
        
        private float valueField;
        
        private Filter1DeviceResonanceVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter1DeviceResonance() {
            this.valueField = ((float)(0F));
            this.visualizationField = Filter1DeviceResonanceVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter1DeviceResonanceVisualization.Deviceonly)]
        public Filter1DeviceResonanceVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter1DeviceResonanceVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceInnertia {
        
        private float valueField;
        
        private Filter1DeviceInnertiaVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter1DeviceInnertia() {
            this.valueField = ((float)(0.0039062F));
            this.visualizationField = Filter1DeviceInnertiaVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.0039062")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter1DeviceInnertiaVisualization.Deviceonly)]
        public Filter1DeviceInnertiaVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter1DeviceInnertiaVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter1DeviceType {
        
        private float valueField;
        
        private Filter1DeviceTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter1DeviceType() {
            this.valueField = ((float)(3F));
            this.visualizationField = Filter1DeviceTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter1DeviceTypeVisualization.Deviceonly)]
        public Filter1DeviceTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter1DeviceTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceFilterDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Filter2DeviceRunTimePreset runTimePresetAField;
        
        private Filter2DeviceRunTimePreset runTimePresetBField;
        
        private Filter2DeviceCutoff cutoffField;
        
        private Filter2DeviceResonance resonanceField;
        
        private Filter2DeviceInnertia innertiaField;
        
        private Filter2DeviceType typeField;
        
        private bool limitMoogFilterOutputField;
        
        private string typeField1;
        
        public Filter2DeviceFilterDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.limitMoogFilterOutputField = true;
            this.typeField1 = "Filter2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceCutoff Cutoff {
            get {
                return this.cutoffField;
            }
            set {
                this.cutoffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceResonance Resonance {
            get {
                return this.resonanceField;
            }
            set {
                this.resonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceInnertia Innertia {
            get {
                return this.innertiaField;
            }
            set {
                this.innertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool LimitMoogFilterOutput {
            get {
                return this.limitMoogFilterOutputField;
            }
            set {
                this.limitMoogFilterOutputField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceRunTimePreset {
        
        private Filter2DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Filter2DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceDeviceSlotRunTimePreset {
        
        private Filter2DeviceCutoffRunTimePreset cutoffField;
        
        private Filter2DeviceResonanceRunTimePreset resonanceField;
        
        private Filter2DeviceInnertiaRunTimePreset innertiaField;
        
        private Filter2DeviceTypeRunTimePreset typeField;
        
        private bool limitMoogFilterOutputField;
        
        private string typeField1;
        
        public Filter2DeviceDeviceSlotRunTimePreset() {
            this.limitMoogFilterOutputField = true;
            this.typeField1 = "Filter2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceCutoffRunTimePreset Cutoff {
            get {
                return this.cutoffField;
            }
            set {
                this.cutoffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceResonanceRunTimePreset Resonance {
            get {
                return this.resonanceField;
            }
            set {
                this.resonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceInnertiaRunTimePreset Innertia {
            get {
                return this.innertiaField;
            }
            set {
                this.innertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceTypeRunTimePreset Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool LimitMoogFilterOutput {
            get {
                return this.limitMoogFilterOutputField;
            }
            set {
                this.limitMoogFilterOutputField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceCutoffRunTimePreset {
        
        private float valueField;
        
        public Filter2DeviceCutoffRunTimePreset() {
            this.valueField = ((float)(127F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceResonanceRunTimePreset {
        
        private float valueField;
        
        public Filter2DeviceResonanceRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceInnertiaRunTimePreset {
        
        private float valueField;
        
        public Filter2DeviceInnertiaRunTimePreset() {
            this.valueField = ((float)(0.0039062F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.0039062")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceTypeRunTimePreset {
        
        private float valueField;
        
        public Filter2DeviceTypeRunTimePreset() {
            this.valueField = ((float)(3F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceCutoff {
        
        private float valueField;
        
        private Filter2DeviceCutoffVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter2DeviceCutoff() {
            this.valueField = ((float)(127F));
            this.visualizationField = Filter2DeviceCutoffVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter2DeviceCutoffVisualization.Deviceonly)]
        public Filter2DeviceCutoffVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter2DeviceCutoffVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceResonance {
        
        private float valueField;
        
        private Filter2DeviceResonanceVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter2DeviceResonance() {
            this.valueField = ((float)(0F));
            this.visualizationField = Filter2DeviceResonanceVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter2DeviceResonanceVisualization.Deviceonly)]
        public Filter2DeviceResonanceVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter2DeviceResonanceVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceInnertia {
        
        private float valueField;
        
        private Filter2DeviceInnertiaVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter2DeviceInnertia() {
            this.valueField = ((float)(0.0039062F));
            this.visualizationField = Filter2DeviceInnertiaVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.0039062")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter2DeviceInnertiaVisualization.Deviceonly)]
        public Filter2DeviceInnertiaVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter2DeviceInnertiaVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter2DeviceType {
        
        private float valueField;
        
        private Filter2DeviceTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter2DeviceType() {
            this.valueField = ((float)(3F));
            this.visualizationField = Filter2DeviceTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter2DeviceTypeVisualization.Deviceonly)]
        public Filter2DeviceTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter2DeviceTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceFilterDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Filter3DeviceRunTimePreset runTimePresetAField;
        
        private Filter3DeviceRunTimePreset runTimePresetBField;
        
        private Filter3DeviceType typeField;
        
        private Filter3DeviceFrequency frequencyField;
        
        private Filter3DeviceQ qField;
        
        private Filter3DeviceGain gainField;
        
        private Filter3DeviceInertia inertiaField;
        
        private Filter3DeviceFilterDeviceModel modelField;
        
        private string typeField1;
        
        public Filter3DeviceFilterDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.modelField = Filter3DeviceFilterDeviceModel.Item24dB4Pole;
            this.typeField1 = "Filter3Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceFrequency Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceQ Q {
            get {
                return this.qField;
            }
            set {
                this.qField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceGain Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceInertia Inertia {
            get {
                return this.inertiaField;
            }
            set {
                this.inertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter3DeviceFilterDeviceModel.Item24dB4Pole)]
        public Filter3DeviceFilterDeviceModel Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceRunTimePreset {
        
        private Filter3DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Filter3DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceDeviceSlotRunTimePreset {
        
        private Filter3DeviceTypeRunTimePreset typeField;
        
        private Filter3DeviceFrequencyRunTimePreset frequencyField;
        
        private Filter3DeviceQRunTimePreset qField;
        
        private Filter3DeviceGainRunTimePreset gainField;
        
        private Filter3DeviceInertiaRunTimePreset inertiaField;
        
        private Filter3DeviceDeviceSlotRunTimePresetModel modelField;
        
        private string typeField1;
        
        public Filter3DeviceDeviceSlotRunTimePreset() {
            this.modelField = Filter3DeviceDeviceSlotRunTimePresetModel.Item24dB4Pole;
            this.typeField1 = "Filter3Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceTypeRunTimePreset Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceFrequencyRunTimePreset Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceQRunTimePreset Q {
            get {
                return this.qField;
            }
            set {
                this.qField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceGainRunTimePreset Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceInertiaRunTimePreset Inertia {
            get {
                return this.inertiaField;
            }
            set {
                this.inertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter3DeviceDeviceSlotRunTimePresetModel.Item24dB4Pole)]
        public Filter3DeviceDeviceSlotRunTimePresetModel Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceTypeRunTimePreset {
        
        private float valueField;
        
        public Filter3DeviceTypeRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceFrequencyRunTimePreset {
        
        private float valueField;
        
        public Filter3DeviceFrequencyRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceQRunTimePreset {
        
        private float valueField;
        
        public Filter3DeviceQRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceGainRunTimePreset {
        
        private float valueField;
        
        public Filter3DeviceGainRunTimePreset() {
            this.valueField = ((float)(-60F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-60")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceInertiaRunTimePreset {
        
        private float valueField;
        
        public Filter3DeviceInertiaRunTimePreset() {
            this.valueField = ((float)(0.0078125F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.0078125")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter3DeviceDeviceSlotRunTimePresetModel {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24dB 4Pole")]
        Item24dB4Pole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24dB Moog")]
        Item24dBMoog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Butterworth 4n")]
        Butterworth4n,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Butterworth 8n")]
        Butterworth8n,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceType {
        
        private float valueField;
        
        private Filter3DeviceTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter3DeviceType() {
            this.valueField = ((float)(0F));
            this.visualizationField = Filter3DeviceTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter3DeviceTypeVisualization.Deviceonly)]
        public Filter3DeviceTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter3DeviceTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceFrequency {
        
        private float valueField;
        
        private Filter3DeviceFrequencyVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter3DeviceFrequency() {
            this.valueField = ((float)(1F));
            this.visualizationField = Filter3DeviceFrequencyVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter3DeviceFrequencyVisualization.Deviceonly)]
        public Filter3DeviceFrequencyVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter3DeviceFrequencyVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceQ {
        
        private float valueField;
        
        private Filter3DeviceQVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter3DeviceQ() {
            this.valueField = ((float)(0F));
            this.visualizationField = Filter3DeviceQVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter3DeviceQVisualization.Deviceonly)]
        public Filter3DeviceQVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter3DeviceQVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceGain {
        
        private float valueField;
        
        private Filter3DeviceGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter3DeviceGain() {
            this.valueField = ((float)(-60F));
            this.visualizationField = Filter3DeviceGainVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-60")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter3DeviceGainVisualization.Deviceonly)]
        public Filter3DeviceGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter3DeviceGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Filter3DeviceInertia {
        
        private float valueField;
        
        private Filter3DeviceInertiaVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Filter3DeviceInertia() {
            this.valueField = ((float)(0.0078125F));
            this.visualizationField = Filter3DeviceInertiaVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.0078125")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Filter3DeviceInertiaVisualization.Deviceonly)]
        public Filter3DeviceInertiaVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter3DeviceInertiaVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Filter3DeviceFilterDeviceModel {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24dB 4Pole")]
        Item24dB4Pole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24dB Moog")]
        Item24dBMoog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Butterworth 4n")]
        Butterworth4n,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Butterworth 8n")]
        Butterworth8n,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private FlangerDeviceRunTimePreset runTimePresetAField;
        
        private FlangerDeviceRunTimePreset runTimePresetBField;
        
        private FlangerDeviceAmount amountField;
        
        private FlangerDeviceRate rateField;
        
        private FlangerDeviceAmplitude amplitudeField;
        
        private FlangerDeviceFeedBack feedBackField;
        
        private FlangerDeviceDelay delayField;
        
        private FlangerDeviceDephase dephaseField;
        
        private FlangerDeviceFilterType filterTypeField;
        
        private FlangerDeviceFilterFreq filterFreqField;
        
        private FlangerDeviceFilterResonance filterResonanceField;
        
        private string typeField;
        
        public FlangerDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "FlangerDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceAmount Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceRate Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceAmplitude Amplitude {
            get {
                return this.amplitudeField;
            }
            set {
                this.amplitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceFeedBack FeedBack {
            get {
                return this.feedBackField;
            }
            set {
                this.feedBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceDelay Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceDephase Dephase {
            get {
                return this.dephaseField;
            }
            set {
                this.dephaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceFilterType FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceFilterFreq FilterFreq {
            get {
                return this.filterFreqField;
            }
            set {
                this.filterFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceFilterResonance FilterResonance {
            get {
                return this.filterResonanceField;
            }
            set {
                this.filterResonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceRunTimePreset {
        
        private FlangerDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public FlangerDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceDeviceSlotRunTimePreset {
        
        private FlangerDeviceAmountRunTimePreset amountField;
        
        private FlangerDeviceRateRunTimePreset rateField;
        
        private FlangerDeviceAmplitudeRunTimePreset amplitudeField;
        
        private FlangerDeviceFeedBackRunTimePreset feedBackField;
        
        private FlangerDeviceDelayRunTimePreset delayField;
        
        private FlangerDeviceDephaseRunTimePreset dephaseField;
        
        private FlangerDeviceFilterTypeRunTimePreset filterTypeField;
        
        private FlangerDeviceFilterFreqRunTimePreset filterFreqField;
        
        private FlangerDeviceFilterResonanceRunTimePreset filterResonanceField;
        
        private string typeField;
        
        public FlangerDeviceDeviceSlotRunTimePreset() {
            this.typeField = "FlangerDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceAmountRunTimePreset Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceRateRunTimePreset Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceAmplitudeRunTimePreset Amplitude {
            get {
                return this.amplitudeField;
            }
            set {
                this.amplitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceFeedBackRunTimePreset FeedBack {
            get {
                return this.feedBackField;
            }
            set {
                this.feedBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceDelayRunTimePreset Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceDephaseRunTimePreset Dephase {
            get {
                return this.dephaseField;
            }
            set {
                this.dephaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceFilterTypeRunTimePreset FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceFilterFreqRunTimePreset FilterFreq {
            get {
                return this.filterFreqField;
            }
            set {
                this.filterFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDeviceFilterResonanceRunTimePreset FilterResonance {
            get {
                return this.filterResonanceField;
            }
            set {
                this.filterResonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceAmountRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceAmountRunTimePreset() {
            this.valueField = ((float)(-1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceRateRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceRateRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceAmplitudeRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceAmplitudeRunTimePreset() {
            this.valueField = ((float)(0.04F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.04")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceFeedBackRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceFeedBackRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceDelayRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceDelayRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceDephaseRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceDephaseRunTimePreset() {
            this.valueField = ((float)(0.7853982F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.7853982")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceFilterTypeRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceFilterTypeRunTimePreset() {
            this.valueField = ((float)(3F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceFilterFreqRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceFilterFreqRunTimePreset() {
            this.valueField = ((float)(127F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceFilterResonanceRunTimePreset {
        
        private float valueField;
        
        public FlangerDeviceFilterResonanceRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceAmount {
        
        private float valueField;
        
        private FlangerDeviceAmountVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceAmount() {
            this.valueField = ((float)(-1F));
            this.visualizationField = FlangerDeviceAmountVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceAmountVisualization.Deviceonly)]
        public FlangerDeviceAmountVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceAmountVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceRate {
        
        private float valueField;
        
        private FlangerDeviceRateVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceRate() {
            this.valueField = ((float)(1F));
            this.visualizationField = FlangerDeviceRateVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceRateVisualization.Deviceonly)]
        public FlangerDeviceRateVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceRateVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceAmplitude {
        
        private float valueField;
        
        private FlangerDeviceAmplitudeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceAmplitude() {
            this.valueField = ((float)(0.04F));
            this.visualizationField = FlangerDeviceAmplitudeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.04")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceAmplitudeVisualization.Deviceonly)]
        public FlangerDeviceAmplitudeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceAmplitudeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceFeedBack {
        
        private float valueField;
        
        private FlangerDeviceFeedBackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceFeedBack() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = FlangerDeviceFeedBackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceFeedBackVisualization.Deviceonly)]
        public FlangerDeviceFeedBackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceFeedBackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceDelay {
        
        private float valueField;
        
        private FlangerDeviceDelayVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceDelay() {
            this.valueField = ((float)(1F));
            this.visualizationField = FlangerDeviceDelayVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceDelayVisualization.Deviceonly)]
        public FlangerDeviceDelayVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceDelayVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceDephase {
        
        private float valueField;
        
        private FlangerDeviceDephaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceDephase() {
            this.valueField = ((float)(0.7853982F));
            this.visualizationField = FlangerDeviceDephaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.7853982")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceDephaseVisualization.Deviceonly)]
        public FlangerDeviceDephaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceDephaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceFilterType {
        
        private float valueField;
        
        private FlangerDeviceFilterTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceFilterType() {
            this.valueField = ((float)(3F));
            this.visualizationField = FlangerDeviceFilterTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceFilterTypeVisualization.Deviceonly)]
        public FlangerDeviceFilterTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceFilterTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceFilterFreq {
        
        private float valueField;
        
        private FlangerDeviceFilterFreqVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceFilterFreq() {
            this.valueField = ((float)(127F));
            this.visualizationField = FlangerDeviceFilterFreqVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceFilterFreqVisualization.Deviceonly)]
        public FlangerDeviceFilterFreqVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceFilterFreqVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlangerDeviceFilterResonance {
        
        private float valueField;
        
        private FlangerDeviceFilterResonanceVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FlangerDeviceFilterResonance() {
            this.valueField = ((float)(0F));
            this.visualizationField = FlangerDeviceFilterResonanceVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FlangerDeviceFilterResonanceVisualization.Deviceonly)]
        public FlangerDeviceFilterResonanceVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FlangerDeviceFilterResonanceVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GainerDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private GainerDeviceRunTimePreset runTimePresetAField;
        
        private GainerDeviceRunTimePreset runTimePresetBField;
        
        private GainerDeviceVolume volumeField;
        
        private GainerDevicePanning panningField;
        
        private bool lPhaseInvertField;
        
        private bool rPhaseInvertField;
        
        private string typeField;
        
        public GainerDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.lPhaseInvertField = false;
            this.rPhaseInvertField = false;
            this.typeField = "GainerDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDeviceVolume Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDevicePanning Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool LPhaseInvert {
            get {
                return this.lPhaseInvertField;
            }
            set {
                this.lPhaseInvertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool RPhaseInvert {
            get {
                return this.rPhaseInvertField;
            }
            set {
                this.rPhaseInvertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GainerDeviceRunTimePreset {
        
        private GainerDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public GainerDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GainerDeviceDeviceSlotRunTimePreset {
        
        private GainerDeviceVolumeRunTimePreset volumeField;
        
        private GainerDevicePanningRunTimePreset panningField;
        
        private bool lPhaseInvertField;
        
        private bool rPhaseInvertField;
        
        private string typeField;
        
        public GainerDeviceDeviceSlotRunTimePreset() {
            this.lPhaseInvertField = false;
            this.rPhaseInvertField = false;
            this.typeField = "GainerDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDeviceVolumeRunTimePreset Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDevicePanningRunTimePreset Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool LPhaseInvert {
            get {
                return this.lPhaseInvertField;
            }
            set {
                this.lPhaseInvertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool RPhaseInvert {
            get {
                return this.rPhaseInvertField;
            }
            set {
                this.rPhaseInvertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GainerDeviceVolumeRunTimePreset {
        
        private float valueField;
        
        public GainerDeviceVolumeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GainerDevicePanningRunTimePreset {
        
        private float valueField;
        
        public GainerDevicePanningRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GainerDeviceVolume {
        
        private float valueField;
        
        private GainerDeviceVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public GainerDeviceVolume() {
            this.valueField = ((float)(1F));
            this.visualizationField = GainerDeviceVolumeVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(GainerDeviceVolumeVisualization.MixerandDevice)]
        public GainerDeviceVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum GainerDeviceVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GainerDevicePanning {
        
        private float valueField;
        
        private GainerDevicePanningVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public GainerDevicePanning() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = GainerDevicePanningVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(GainerDevicePanningVisualization.Deviceonly)]
        public GainerDevicePanningVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum GainerDevicePanningVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceGateDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private GateDeviceRunTimePreset runTimePresetAField;
        
        private GateDeviceRunTimePreset runTimePresetBField;
        
        private GateDeviceThreshold thresholdField;
        
        private GateDeviceAttackInMs attackInMsField;
        
        private GateDeviceHoldInMs holdInMsField;
        
        private GateDeviceReleaseInMs releaseInMsField;
        
        private GateDeviceGatedVolume gatedVolumeField;
        
        private string typeField;
        
        public GateDeviceGateDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "GateDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceThreshold Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceAttackInMs AttackInMs {
            get {
                return this.attackInMsField;
            }
            set {
                this.attackInMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceHoldInMs HoldInMs {
            get {
                return this.holdInMsField;
            }
            set {
                this.holdInMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceReleaseInMs ReleaseInMs {
            get {
                return this.releaseInMsField;
            }
            set {
                this.releaseInMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceGatedVolume GatedVolume {
            get {
                return this.gatedVolumeField;
            }
            set {
                this.gatedVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceRunTimePreset {
        
        private GateDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public GateDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceDeviceSlotRunTimePreset {
        
        private GateDeviceThresholdRunTimePreset thresholdField;
        
        private GateDeviceAttackInMsRunTimePreset attackInMsField;
        
        private GateDeviceHoldInMsRunTimePreset holdInMsField;
        
        private GateDeviceReleaseInMsRunTimePreset releaseInMsField;
        
        private GateDeviceGatedVolumeRunTimePreset gatedVolumeField;
        
        private string typeField;
        
        public GateDeviceDeviceSlotRunTimePreset() {
            this.typeField = "GateDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceThresholdRunTimePreset Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceAttackInMsRunTimePreset AttackInMs {
            get {
                return this.attackInMsField;
            }
            set {
                this.attackInMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceHoldInMsRunTimePreset HoldInMs {
            get {
                return this.holdInMsField;
            }
            set {
                this.holdInMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceReleaseInMsRunTimePreset ReleaseInMs {
            get {
                return this.releaseInMsField;
            }
            set {
                this.releaseInMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceGatedVolumeRunTimePreset GatedVolume {
            get {
                return this.gatedVolumeField;
            }
            set {
                this.gatedVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceThresholdRunTimePreset {
        
        private float valueField;
        
        public GateDeviceThresholdRunTimePreset() {
            this.valueField = ((float)(0.01584893F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.01584893")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceAttackInMsRunTimePreset {
        
        private float valueField;
        
        public GateDeviceAttackInMsRunTimePreset() {
            this.valueField = ((float)(5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceHoldInMsRunTimePreset {
        
        private float valueField;
        
        public GateDeviceHoldInMsRunTimePreset() {
            this.valueField = ((float)(20F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceReleaseInMsRunTimePreset {
        
        private float valueField;
        
        public GateDeviceReleaseInMsRunTimePreset() {
            this.valueField = ((float)(200F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "200")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceGatedVolumeRunTimePreset {
        
        private float valueField;
        
        public GateDeviceGatedVolumeRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceThreshold {
        
        private float valueField;
        
        private GateDeviceThresholdVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public GateDeviceThreshold() {
            this.valueField = ((float)(0.01584893F));
            this.visualizationField = GateDeviceThresholdVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.01584893")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(GateDeviceThresholdVisualization.Deviceonly)]
        public GateDeviceThresholdVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum GateDeviceThresholdVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceAttackInMs {
        
        private float valueField;
        
        private GateDeviceAttackInMsVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public GateDeviceAttackInMs() {
            this.valueField = ((float)(5F));
            this.visualizationField = GateDeviceAttackInMsVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(GateDeviceAttackInMsVisualization.Deviceonly)]
        public GateDeviceAttackInMsVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum GateDeviceAttackInMsVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceHoldInMs {
        
        private float valueField;
        
        private GateDeviceHoldInMsVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public GateDeviceHoldInMs() {
            this.valueField = ((float)(20F));
            this.visualizationField = GateDeviceHoldInMsVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(GateDeviceHoldInMsVisualization.Deviceonly)]
        public GateDeviceHoldInMsVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum GateDeviceHoldInMsVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceReleaseInMs {
        
        private float valueField;
        
        private GateDeviceReleaseInMsVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public GateDeviceReleaseInMs() {
            this.valueField = ((float)(200F));
            this.visualizationField = GateDeviceReleaseInMsVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "200")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(GateDeviceReleaseInMsVisualization.Deviceonly)]
        public GateDeviceReleaseInMsVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum GateDeviceReleaseInMsVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GateDeviceGatedVolume {
        
        private float valueField;
        
        private GateDeviceGatedVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public GateDeviceGatedVolume() {
            this.valueField = ((float)(0F));
            this.visualizationField = GateDeviceGatedVolumeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(GateDeviceGatedVolumeVisualization.Deviceonly)]
        public GateDeviceGatedVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum GateDeviceGatedVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceGateDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Gate2DeviceRunTimePreset runTimePresetAField;
        
        private Gate2DeviceRunTimePreset runTimePresetBField;
        
        private Gate2DeviceThreshold thresholdField;
        
        private Gate2DeviceAttack attackField;
        
        private Gate2DeviceHold holdField;
        
        private Gate2DeviceRelease releaseField;
        
        private Gate2DeviceFloor floorField;
        
        private bool listenToSideChainField;
        
        private Gate2DeviceSideChainHpFreq sideChainHpFreqField;
        
        private Gate2DeviceSideChainLpFreq sideChainLpFreqField;
        
        private Gate2DeviceType typeField;
        
        private string typeField1;
        
        public Gate2DeviceGateDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.listenToSideChainField = false;
            this.typeField1 = "Gate2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceThreshold Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceAttack Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceHold Hold {
            get {
                return this.holdField;
            }
            set {
                this.holdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceRelease Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceFloor Floor {
            get {
                return this.floorField;
            }
            set {
                this.floorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ListenToSideChain {
            get {
                return this.listenToSideChainField;
            }
            set {
                this.listenToSideChainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceSideChainHpFreq SideChainHpFreq {
            get {
                return this.sideChainHpFreqField;
            }
            set {
                this.sideChainHpFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceSideChainLpFreq SideChainLpFreq {
            get {
                return this.sideChainLpFreqField;
            }
            set {
                this.sideChainLpFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceRunTimePreset {
        
        private Gate2DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Gate2DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceDeviceSlotRunTimePreset {
        
        private Gate2DeviceThresholdRunTimePreset thresholdField;
        
        private Gate2DeviceAttackRunTimePreset attackField;
        
        private Gate2DeviceHoldRunTimePreset holdField;
        
        private Gate2DeviceReleaseRunTimePreset releaseField;
        
        private Gate2DeviceFloorRunTimePreset floorField;
        
        private bool listenToSideChainField;
        
        private Gate2DeviceSideChainHpFreqRunTimePreset sideChainHpFreqField;
        
        private Gate2DeviceSideChainLpFreqRunTimePreset sideChainLpFreqField;
        
        private Gate2DeviceTypeRunTimePreset typeField;
        
        private string typeField1;
        
        public Gate2DeviceDeviceSlotRunTimePreset() {
            this.listenToSideChainField = false;
            this.typeField1 = "Gate2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceThresholdRunTimePreset Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceAttackRunTimePreset Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceHoldRunTimePreset Hold {
            get {
                return this.holdField;
            }
            set {
                this.holdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceReleaseRunTimePreset Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceFloorRunTimePreset Floor {
            get {
                return this.floorField;
            }
            set {
                this.floorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ListenToSideChain {
            get {
                return this.listenToSideChainField;
            }
            set {
                this.listenToSideChainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceSideChainHpFreqRunTimePreset SideChainHpFreq {
            get {
                return this.sideChainHpFreqField;
            }
            set {
                this.sideChainHpFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceSideChainLpFreqRunTimePreset SideChainLpFreq {
            get {
                return this.sideChainLpFreqField;
            }
            set {
                this.sideChainLpFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceTypeRunTimePreset Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceThresholdRunTimePreset {
        
        private float valueField;
        
        public Gate2DeviceThresholdRunTimePreset() {
            this.valueField = ((float)(-18F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-18")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceAttackRunTimePreset {
        
        private float valueField;
        
        public Gate2DeviceAttackRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceHoldRunTimePreset {
        
        private float valueField;
        
        public Gate2DeviceHoldRunTimePreset() {
            this.valueField = ((float)(20F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceReleaseRunTimePreset {
        
        private float valueField;
        
        public Gate2DeviceReleaseRunTimePreset() {
            this.valueField = ((float)(100F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceFloorRunTimePreset {
        
        private float valueField;
        
        public Gate2DeviceFloorRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceSideChainHpFreqRunTimePreset {
        
        private float valueField;
        
        public Gate2DeviceSideChainHpFreqRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceSideChainLpFreqRunTimePreset {
        
        private float valueField;
        
        public Gate2DeviceSideChainLpFreqRunTimePreset() {
            this.valueField = ((float)(127F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceTypeRunTimePreset {
        
        private float valueField;
        
        public Gate2DeviceTypeRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceThreshold {
        
        private float valueField;
        
        private Gate2DeviceThresholdVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Gate2DeviceThreshold() {
            this.valueField = ((float)(-18F));
            this.visualizationField = Gate2DeviceThresholdVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-18")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Gate2DeviceThresholdVisualization.Deviceonly)]
        public Gate2DeviceThresholdVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Gate2DeviceThresholdVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceAttack {
        
        private float valueField;
        
        private Gate2DeviceAttackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Gate2DeviceAttack() {
            this.valueField = ((float)(1F));
            this.visualizationField = Gate2DeviceAttackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Gate2DeviceAttackVisualization.Deviceonly)]
        public Gate2DeviceAttackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Gate2DeviceAttackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceHold {
        
        private float valueField;
        
        private Gate2DeviceHoldVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Gate2DeviceHold() {
            this.valueField = ((float)(20F));
            this.visualizationField = Gate2DeviceHoldVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Gate2DeviceHoldVisualization.Deviceonly)]
        public Gate2DeviceHoldVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Gate2DeviceHoldVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceRelease {
        
        private float valueField;
        
        private Gate2DeviceReleaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Gate2DeviceRelease() {
            this.valueField = ((float)(100F));
            this.visualizationField = Gate2DeviceReleaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Gate2DeviceReleaseVisualization.Deviceonly)]
        public Gate2DeviceReleaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Gate2DeviceReleaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceFloor {
        
        private float valueField;
        
        private Gate2DeviceFloorVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Gate2DeviceFloor() {
            this.valueField = ((float)(0F));
            this.visualizationField = Gate2DeviceFloorVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Gate2DeviceFloorVisualization.Deviceonly)]
        public Gate2DeviceFloorVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Gate2DeviceFloorVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceSideChainHpFreq {
        
        private float valueField;
        
        private Gate2DeviceSideChainHpFreqVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Gate2DeviceSideChainHpFreq() {
            this.valueField = ((float)(0F));
            this.visualizationField = Gate2DeviceSideChainHpFreqVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Gate2DeviceSideChainHpFreqVisualization.Deviceonly)]
        public Gate2DeviceSideChainHpFreqVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Gate2DeviceSideChainHpFreqVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceSideChainLpFreq {
        
        private float valueField;
        
        private Gate2DeviceSideChainLpFreqVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Gate2DeviceSideChainLpFreq() {
            this.valueField = ((float)(127F));
            this.visualizationField = Gate2DeviceSideChainLpFreqVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "127")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Gate2DeviceSideChainLpFreqVisualization.Deviceonly)]
        public Gate2DeviceSideChainLpFreqVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Gate2DeviceSideChainLpFreqVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gate2DeviceType {
        
        private float valueField;
        
        private Gate2DeviceTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Gate2DeviceType() {
            this.valueField = ((float)(0F));
            this.visualizationField = Gate2DeviceTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Gate2DeviceTypeVisualization.Deviceonly)]
        public Gate2DeviceTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Gate2DeviceTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceLofiDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private LofiDeviceRunTimePreset runTimePresetAField;
        
        private LofiDeviceRunTimePreset runTimePresetBField;
        
        private LofiDeviceBitCrunsh bitCrunshField;
        
        private LofiDeviceQuality qualityField;
        
        private LofiDeviceNoise noiseField;
        
        private LofiDeviceWetOut wetOutField;
        
        private LofiDeviceDryOut dryOutField;
        
        private LofiDeviceInterpolate interpolateField;
        
        private string typeField;
        
        public LofiDeviceLofiDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "LofiDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceBitCrunsh BitCrunsh {
            get {
                return this.bitCrunshField;
            }
            set {
                this.bitCrunshField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceQuality Quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceNoise Noise {
            get {
                return this.noiseField;
            }
            set {
                this.noiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceWetOut WetOut {
            get {
                return this.wetOutField;
            }
            set {
                this.wetOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceDryOut DryOut {
            get {
                return this.dryOutField;
            }
            set {
                this.dryOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceInterpolate Interpolate {
            get {
                return this.interpolateField;
            }
            set {
                this.interpolateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceRunTimePreset {
        
        private LofiDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public LofiDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceDeviceSlotRunTimePreset {
        
        private LofiDeviceBitCrunshRunTimePreset bitCrunshField;
        
        private LofiDeviceQualityRunTimePreset qualityField;
        
        private LofiDeviceNoiseRunTimePreset noiseField;
        
        private LofiDeviceWetOutRunTimePreset wetOutField;
        
        private LofiDeviceDryOutRunTimePreset dryOutField;
        
        private LofiDeviceInterpolateRunTimePreset interpolateField;
        
        private string typeField;
        
        public LofiDeviceDeviceSlotRunTimePreset() {
            this.typeField = "LofiDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceBitCrunshRunTimePreset BitCrunsh {
            get {
                return this.bitCrunshField;
            }
            set {
                this.bitCrunshField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceQualityRunTimePreset Quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceNoiseRunTimePreset Noise {
            get {
                return this.noiseField;
            }
            set {
                this.noiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceWetOutRunTimePreset WetOut {
            get {
                return this.wetOutField;
            }
            set {
                this.wetOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceDryOutRunTimePreset DryOut {
            get {
                return this.dryOutField;
            }
            set {
                this.dryOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceInterpolateRunTimePreset Interpolate {
            get {
                return this.interpolateField;
            }
            set {
                this.interpolateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceBitCrunshRunTimePreset {
        
        private float valueField;
        
        public LofiDeviceBitCrunshRunTimePreset() {
            this.valueField = ((float)(8F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "8")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceQualityRunTimePreset {
        
        private float valueField;
        
        public LofiDeviceQualityRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceNoiseRunTimePreset {
        
        private float valueField;
        
        public LofiDeviceNoiseRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceWetOutRunTimePreset {
        
        private float valueField;
        
        public LofiDeviceWetOutRunTimePreset() {
            this.valueField = ((float)(100F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceDryOutRunTimePreset {
        
        private float valueField;
        
        public LofiDeviceDryOutRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceInterpolateRunTimePreset {
        
        private float valueField;
        
        public LofiDeviceInterpolateRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceBitCrunsh {
        
        private float valueField;
        
        private LofiDeviceBitCrunshVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LofiDeviceBitCrunsh() {
            this.valueField = ((float)(8F));
            this.visualizationField = LofiDeviceBitCrunshVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "8")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LofiDeviceBitCrunshVisualization.Deviceonly)]
        public LofiDeviceBitCrunshVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LofiDeviceBitCrunshVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceQuality {
        
        private float valueField;
        
        private LofiDeviceQualityVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LofiDeviceQuality() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = LofiDeviceQualityVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LofiDeviceQualityVisualization.Deviceonly)]
        public LofiDeviceQualityVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LofiDeviceQualityVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceNoise {
        
        private float valueField;
        
        private LofiDeviceNoiseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LofiDeviceNoise() {
            this.valueField = ((float)(0F));
            this.visualizationField = LofiDeviceNoiseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LofiDeviceNoiseVisualization.Deviceonly)]
        public LofiDeviceNoiseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LofiDeviceNoiseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceWetOut {
        
        private float valueField;
        
        private LofiDeviceWetOutVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LofiDeviceWetOut() {
            this.valueField = ((float)(100F));
            this.visualizationField = LofiDeviceWetOutVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LofiDeviceWetOutVisualization.Deviceonly)]
        public LofiDeviceWetOutVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LofiDeviceWetOutVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceDryOut {
        
        private float valueField;
        
        private LofiDeviceDryOutVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LofiDeviceDryOut() {
            this.valueField = ((float)(0F));
            this.visualizationField = LofiDeviceDryOutVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LofiDeviceDryOutVisualization.Deviceonly)]
        public LofiDeviceDryOutVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LofiDeviceDryOutVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LofiDeviceInterpolate {
        
        private float valueField;
        
        private LofiDeviceInterpolateVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LofiDeviceInterpolate() {
            this.valueField = ((float)(0F));
            this.visualizationField = LofiDeviceInterpolateVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LofiDeviceInterpolateVisualization.Deviceonly)]
        public LofiDeviceInterpolateVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LofiDeviceInterpolateVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceLofiDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Lofi2DeviceRunTimePreset runTimePresetAField;
        
        private Lofi2DeviceRunTimePreset runTimePresetBField;
        
        private Lofi2DeviceBits bitsField;
        
        private Lofi2DeviceRate rateField;
        
        private Lofi2DeviceNoise noiseField;
        
        private Lofi2DeviceWetOut wetOutField;
        
        private Lofi2DeviceDryOut dryOutField;
        
        private Lofi2DeviceInterpolate interpolateField;
        
        private string typeField;
        
        public Lofi2DeviceLofiDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "Lofi2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceBits Bits {
            get {
                return this.bitsField;
            }
            set {
                this.bitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceRate Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceNoise Noise {
            get {
                return this.noiseField;
            }
            set {
                this.noiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceWetOut WetOut {
            get {
                return this.wetOutField;
            }
            set {
                this.wetOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceDryOut DryOut {
            get {
                return this.dryOutField;
            }
            set {
                this.dryOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceInterpolate Interpolate {
            get {
                return this.interpolateField;
            }
            set {
                this.interpolateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceRunTimePreset {
        
        private Lofi2DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Lofi2DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceDeviceSlotRunTimePreset {
        
        private Lofi2DeviceBitsRunTimePreset bitsField;
        
        private Lofi2DeviceRateRunTimePreset rateField;
        
        private Lofi2DeviceNoiseRunTimePreset noiseField;
        
        private Lofi2DeviceWetOutRunTimePreset wetOutField;
        
        private Lofi2DeviceDryOutRunTimePreset dryOutField;
        
        private Lofi2DeviceInterpolateRunTimePreset interpolateField;
        
        private string typeField;
        
        public Lofi2DeviceDeviceSlotRunTimePreset() {
            this.typeField = "Lofi2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceBitsRunTimePreset Bits {
            get {
                return this.bitsField;
            }
            set {
                this.bitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceRateRunTimePreset Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceNoiseRunTimePreset Noise {
            get {
                return this.noiseField;
            }
            set {
                this.noiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceWetOutRunTimePreset WetOut {
            get {
                return this.wetOutField;
            }
            set {
                this.wetOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceDryOutRunTimePreset DryOut {
            get {
                return this.dryOutField;
            }
            set {
                this.dryOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceInterpolateRunTimePreset Interpolate {
            get {
                return this.interpolateField;
            }
            set {
                this.interpolateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceBitsRunTimePreset {
        
        private float valueField;
        
        public Lofi2DeviceBitsRunTimePreset() {
            this.valueField = ((float)(8F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "8")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceRateRunTimePreset {
        
        private float valueField;
        
        public Lofi2DeviceRateRunTimePreset() {
            this.valueField = ((float)(0.7718657F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.7718657")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceNoiseRunTimePreset {
        
        private float valueField;
        
        public Lofi2DeviceNoiseRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceWetOutRunTimePreset {
        
        private float valueField;
        
        public Lofi2DeviceWetOutRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceDryOutRunTimePreset {
        
        private float valueField;
        
        public Lofi2DeviceDryOutRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceInterpolateRunTimePreset {
        
        private float valueField;
        
        public Lofi2DeviceInterpolateRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceBits {
        
        private float valueField;
        
        private Lofi2DeviceBitsVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Lofi2DeviceBits() {
            this.valueField = ((float)(8F));
            this.visualizationField = Lofi2DeviceBitsVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "8")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Lofi2DeviceBitsVisualization.Deviceonly)]
        public Lofi2DeviceBitsVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Lofi2DeviceBitsVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceRate {
        
        private float valueField;
        
        private Lofi2DeviceRateVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Lofi2DeviceRate() {
            this.valueField = ((float)(0.7718657F));
            this.visualizationField = Lofi2DeviceRateVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.7718657")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Lofi2DeviceRateVisualization.Deviceonly)]
        public Lofi2DeviceRateVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Lofi2DeviceRateVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceNoise {
        
        private float valueField;
        
        private Lofi2DeviceNoiseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Lofi2DeviceNoise() {
            this.valueField = ((float)(0F));
            this.visualizationField = Lofi2DeviceNoiseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Lofi2DeviceNoiseVisualization.Deviceonly)]
        public Lofi2DeviceNoiseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Lofi2DeviceNoiseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceWetOut {
        
        private float valueField;
        
        private Lofi2DeviceWetOutVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Lofi2DeviceWetOut() {
            this.valueField = ((float)(1F));
            this.visualizationField = Lofi2DeviceWetOutVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Lofi2DeviceWetOutVisualization.Deviceonly)]
        public Lofi2DeviceWetOutVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Lofi2DeviceWetOutVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceDryOut {
        
        private float valueField;
        
        private Lofi2DeviceDryOutVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Lofi2DeviceDryOut() {
            this.valueField = ((float)(0F));
            this.visualizationField = Lofi2DeviceDryOutVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Lofi2DeviceDryOutVisualization.Deviceonly)]
        public Lofi2DeviceDryOutVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Lofi2DeviceDryOutVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lofi2DeviceInterpolate {
        
        private float valueField;
        
        private Lofi2DeviceInterpolateVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Lofi2DeviceInterpolate() {
            this.valueField = ((float)(0F));
            this.visualizationField = Lofi2DeviceInterpolateVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Lofi2DeviceInterpolateVisualization.Deviceonly)]
        public Lofi2DeviceInterpolateVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Lofi2DeviceInterpolateVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private MaximizerDeviceRunTimePreset runTimePresetAField;
        
        private MaximizerDeviceRunTimePreset runTimePresetBField;
        
        private MaximizerDeviceInputGain inputGainField;
        
        private MaximizerDeviceThreshold thresholdField;
        
        private MaximizerDeviceTransientRelease transientReleaseField;
        
        private MaximizerDeviceLongTermRelease longTermReleaseField;
        
        private MaximizerDeviceCeiling ceilingField;
        
        private string typeField;
        
        public MaximizerDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "MaximizerDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceInputGain InputGain {
            get {
                return this.inputGainField;
            }
            set {
                this.inputGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceThreshold Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceTransientRelease TransientRelease {
            get {
                return this.transientReleaseField;
            }
            set {
                this.transientReleaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceLongTermRelease LongTermRelease {
            get {
                return this.longTermReleaseField;
            }
            set {
                this.longTermReleaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceCeiling Ceiling {
            get {
                return this.ceilingField;
            }
            set {
                this.ceilingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceRunTimePreset {
        
        private MaximizerDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public MaximizerDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceDeviceSlotRunTimePreset {
        
        private MaximizerDeviceInputGainRunTimePreset inputGainField;
        
        private MaximizerDeviceThresholdRunTimePreset thresholdField;
        
        private MaximizerDeviceTransientReleaseRunTimePreset transientReleaseField;
        
        private MaximizerDeviceLongTermReleaseRunTimePreset longTermReleaseField;
        
        private MaximizerDeviceCeilingRunTimePreset ceilingField;
        
        private string typeField;
        
        public MaximizerDeviceDeviceSlotRunTimePreset() {
            this.typeField = "MaximizerDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceInputGainRunTimePreset InputGain {
            get {
                return this.inputGainField;
            }
            set {
                this.inputGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceThresholdRunTimePreset Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceTransientReleaseRunTimePreset TransientRelease {
            get {
                return this.transientReleaseField;
            }
            set {
                this.transientReleaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceLongTermReleaseRunTimePreset LongTermRelease {
            get {
                return this.longTermReleaseField;
            }
            set {
                this.longTermReleaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDeviceCeilingRunTimePreset Ceiling {
            get {
                return this.ceilingField;
            }
            set {
                this.ceilingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceInputGainRunTimePreset {
        
        private float valueField;
        
        public MaximizerDeviceInputGainRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceThresholdRunTimePreset {
        
        private float valueField;
        
        public MaximizerDeviceThresholdRunTimePreset() {
            this.valueField = ((float)(-0.02F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-0.02")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceTransientReleaseRunTimePreset {
        
        private float valueField;
        
        public MaximizerDeviceTransientReleaseRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceLongTermReleaseRunTimePreset {
        
        private float valueField;
        
        public MaximizerDeviceLongTermReleaseRunTimePreset() {
            this.valueField = ((float)(80F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "80")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceCeilingRunTimePreset {
        
        private float valueField;
        
        public MaximizerDeviceCeilingRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceInputGain {
        
        private float valueField;
        
        private MaximizerDeviceInputGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MaximizerDeviceInputGain() {
            this.valueField = ((float)(0F));
            this.visualizationField = MaximizerDeviceInputGainVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MaximizerDeviceInputGainVisualization.Deviceonly)]
        public MaximizerDeviceInputGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MaximizerDeviceInputGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceThreshold {
        
        private float valueField;
        
        private MaximizerDeviceThresholdVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MaximizerDeviceThreshold() {
            this.valueField = ((float)(-0.02F));
            this.visualizationField = MaximizerDeviceThresholdVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-0.02")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MaximizerDeviceThresholdVisualization.Deviceonly)]
        public MaximizerDeviceThresholdVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MaximizerDeviceThresholdVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceTransientRelease {
        
        private float valueField;
        
        private MaximizerDeviceTransientReleaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MaximizerDeviceTransientRelease() {
            this.valueField = ((float)(1F));
            this.visualizationField = MaximizerDeviceTransientReleaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MaximizerDeviceTransientReleaseVisualization.Deviceonly)]
        public MaximizerDeviceTransientReleaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MaximizerDeviceTransientReleaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceLongTermRelease {
        
        private float valueField;
        
        private MaximizerDeviceLongTermReleaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MaximizerDeviceLongTermRelease() {
            this.valueField = ((float)(80F));
            this.visualizationField = MaximizerDeviceLongTermReleaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "80")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MaximizerDeviceLongTermReleaseVisualization.Deviceonly)]
        public MaximizerDeviceLongTermReleaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MaximizerDeviceLongTermReleaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaximizerDeviceCeiling {
        
        private float valueField;
        
        private MaximizerDeviceCeilingVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MaximizerDeviceCeiling() {
            this.valueField = ((float)(0F));
            this.visualizationField = MaximizerDeviceCeilingVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MaximizerDeviceCeilingVisualization.MixerandDevice)]
        public MaximizerDeviceCeilingVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MaximizerDeviceCeilingVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private MixerEqDeviceRunTimePreset runTimePresetAField;
        
        private MixerEqDeviceRunTimePreset runTimePresetBField;
        
        private MixerEqDeviceInputMode inputModeField;
        
        private float maxVisualizedGainField;
        
        private MixerEqDeviceLowGain lowGainField;
        
        private MixerEqDeviceMidGain midGainField;
        
        private MixerEqDeviceMidFreq midFreqField;
        
        private MixerEqDeviceMidQ midQField;
        
        private MixerEqDeviceHiGain hiGainField;
        
        private string typeField;
        
        public MixerEqDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.inputModeField = MixerEqDeviceInputMode.LR;
            this.maxVisualizedGainField = ((float)(20F));
            this.typeField = "MixerEqDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MixerEqDeviceInputMode.LR)]
        public MixerEqDeviceInputMode InputMode {
            get {
                return this.inputModeField;
            }
            set {
                this.inputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float MaxVisualizedGain {
            get {
                return this.maxVisualizedGainField;
            }
            set {
                this.maxVisualizedGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceLowGain LowGain {
            get {
                return this.lowGainField;
            }
            set {
                this.lowGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceMidGain MidGain {
            get {
                return this.midGainField;
            }
            set {
                this.midGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceMidFreq MidFreq {
            get {
                return this.midFreqField;
            }
            set {
                this.midFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceMidQ MidQ {
            get {
                return this.midQField;
            }
            set {
                this.midQField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceHiGain HiGain {
            get {
                return this.hiGainField;
            }
            set {
                this.hiGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceRunTimePreset {
        
        private MixerEqDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public MixerEqDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceDeviceSlotRunTimePreset {
        
        private MixerEqDeviceDeviceSlotRunTimePresetInputMode inputModeField;
        
        private float maxVisualizedGainField;
        
        private MixerEqDeviceLowGainRunTimePreset lowGainField;
        
        private MixerEqDeviceMidGainRunTimePreset midGainField;
        
        private MixerEqDeviceMidFreqRunTimePreset midFreqField;
        
        private MixerEqDeviceMidQRunTimePreset midQField;
        
        private MixerEqDeviceHiGainRunTimePreset hiGainField;
        
        private string typeField;
        
        public MixerEqDeviceDeviceSlotRunTimePreset() {
            this.inputModeField = MixerEqDeviceDeviceSlotRunTimePresetInputMode.LR;
            this.maxVisualizedGainField = ((float)(20F));
            this.typeField = "MixerEqDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MixerEqDeviceDeviceSlotRunTimePresetInputMode.LR)]
        public MixerEqDeviceDeviceSlotRunTimePresetInputMode InputMode {
            get {
                return this.inputModeField;
            }
            set {
                this.inputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float MaxVisualizedGain {
            get {
                return this.maxVisualizedGainField;
            }
            set {
                this.maxVisualizedGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceLowGainRunTimePreset LowGain {
            get {
                return this.lowGainField;
            }
            set {
                this.lowGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceMidGainRunTimePreset MidGain {
            get {
                return this.midGainField;
            }
            set {
                this.midGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceMidFreqRunTimePreset MidFreq {
            get {
                return this.midFreqField;
            }
            set {
                this.midFreqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceMidQRunTimePreset MidQ {
            get {
                return this.midQField;
            }
            set {
                this.midQField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDeviceHiGainRunTimePreset HiGain {
            get {
                return this.hiGainField;
            }
            set {
                this.hiGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MixerEqDeviceDeviceSlotRunTimePresetInputMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceLowGainRunTimePreset {
        
        private float valueField;
        
        public MixerEqDeviceLowGainRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceMidGainRunTimePreset {
        
        private float valueField;
        
        public MixerEqDeviceMidGainRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceMidFreqRunTimePreset {
        
        private float valueField;
        
        public MixerEqDeviceMidFreqRunTimePreset() {
            this.valueField = ((float)(0.6F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.6")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceMidQRunTimePreset {
        
        private float valueField;
        
        public MixerEqDeviceMidQRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceHiGainRunTimePreset {
        
        private float valueField;
        
        public MixerEqDeviceHiGainRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MixerEqDeviceInputMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceLowGain {
        
        private float valueField;
        
        private MixerEqDeviceLowGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MixerEqDeviceLowGain() {
            this.valueField = ((float)(0F));
            this.visualizationField = MixerEqDeviceLowGainVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MixerEqDeviceLowGainVisualization.MixerandDevice)]
        public MixerEqDeviceLowGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MixerEqDeviceLowGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceMidGain {
        
        private float valueField;
        
        private MixerEqDeviceMidGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MixerEqDeviceMidGain() {
            this.valueField = ((float)(0F));
            this.visualizationField = MixerEqDeviceMidGainVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MixerEqDeviceMidGainVisualization.MixerandDevice)]
        public MixerEqDeviceMidGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MixerEqDeviceMidGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceMidFreq {
        
        private float valueField;
        
        private MixerEqDeviceMidFreqVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MixerEqDeviceMidFreq() {
            this.valueField = ((float)(0.6F));
            this.visualizationField = MixerEqDeviceMidFreqVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.6")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MixerEqDeviceMidFreqVisualization.Deviceonly)]
        public MixerEqDeviceMidFreqVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MixerEqDeviceMidFreqVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceMidQ {
        
        private float valueField;
        
        private MixerEqDeviceMidQVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MixerEqDeviceMidQ() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = MixerEqDeviceMidQVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MixerEqDeviceMidQVisualization.Deviceonly)]
        public MixerEqDeviceMidQVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MixerEqDeviceMidQVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MixerEqDeviceHiGain {
        
        private float valueField;
        
        private MixerEqDeviceHiGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MixerEqDeviceHiGain() {
            this.valueField = ((float)(0F));
            this.visualizationField = MixerEqDeviceHiGainVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MixerEqDeviceHiGainVisualization.MixerandDevice)]
        public MixerEqDeviceHiGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MixerEqDeviceHiGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceReverbDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Reverb2DeviceRunTimePreset runTimePresetAField;
        
        private Reverb2DeviceRunTimePreset runTimePresetBField;
        
        private int qualitySetupField;
        
        private Reverb2DeviceReverbTime reverbTimeField;
        
        private Reverb2DeviceLPFilter lPFilterField;
        
        private Reverb2DevicePreDelay preDelayField;
        
        private Reverb2DeviceDryMix dryMixField;
        
        private Reverb2DeviceSend sendField;
        
        private string typeField;
        
        public Reverb2DeviceReverbDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.qualitySetupField = 1;
            this.typeField = "Reverb2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int QualitySetup {
            get {
                return this.qualitySetupField;
            }
            set {
                this.qualitySetupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceReverbTime ReverbTime {
            get {
                return this.reverbTimeField;
            }
            set {
                this.reverbTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceLPFilter LPFilter {
            get {
                return this.lPFilterField;
            }
            set {
                this.lPFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DevicePreDelay PreDelay {
            get {
                return this.preDelayField;
            }
            set {
                this.preDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceDryMix DryMix {
            get {
                return this.dryMixField;
            }
            set {
                this.dryMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceSend Send {
            get {
                return this.sendField;
            }
            set {
                this.sendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceRunTimePreset {
        
        private Reverb2DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Reverb2DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceDeviceSlotRunTimePreset {
        
        private int qualitySetupField;
        
        private Reverb2DeviceReverbTimeRunTimePreset reverbTimeField;
        
        private Reverb2DeviceLPFilterRunTimePreset lPFilterField;
        
        private Reverb2DevicePreDelayRunTimePreset preDelayField;
        
        private Reverb2DeviceDryMixRunTimePreset dryMixField;
        
        private Reverb2DeviceSendRunTimePreset sendField;
        
        private string typeField;
        
        public Reverb2DeviceDeviceSlotRunTimePreset() {
            this.qualitySetupField = 1;
            this.typeField = "Reverb2Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int QualitySetup {
            get {
                return this.qualitySetupField;
            }
            set {
                this.qualitySetupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceReverbTimeRunTimePreset ReverbTime {
            get {
                return this.reverbTimeField;
            }
            set {
                this.reverbTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceLPFilterRunTimePreset LPFilter {
            get {
                return this.lPFilterField;
            }
            set {
                this.lPFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DevicePreDelayRunTimePreset PreDelay {
            get {
                return this.preDelayField;
            }
            set {
                this.preDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceDryMixRunTimePreset DryMix {
            get {
                return this.dryMixField;
            }
            set {
                this.dryMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceSendRunTimePreset Send {
            get {
                return this.sendField;
            }
            set {
                this.sendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceReverbTimeRunTimePreset {
        
        private float valueField;
        
        public Reverb2DeviceReverbTimeRunTimePreset() {
            this.valueField = ((float)(15F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "15")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceLPFilterRunTimePreset {
        
        private float valueField;
        
        public Reverb2DeviceLPFilterRunTimePreset() {
            this.valueField = ((float)(4000F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DevicePreDelayRunTimePreset {
        
        private float valueField;
        
        public Reverb2DevicePreDelayRunTimePreset() {
            this.valueField = ((float)(10F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceDryMixRunTimePreset {
        
        private float valueField;
        
        public Reverb2DeviceDryMixRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceSendRunTimePreset {
        
        private float valueField;
        
        public Reverb2DeviceSendRunTimePreset() {
            this.valueField = ((float)(0.4F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceReverbTime {
        
        private float valueField;
        
        private Reverb2DeviceReverbTimeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb2DeviceReverbTime() {
            this.valueField = ((float)(15F));
            this.visualizationField = Reverb2DeviceReverbTimeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "15")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb2DeviceReverbTimeVisualization.Deviceonly)]
        public Reverb2DeviceReverbTimeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb2DeviceReverbTimeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceLPFilter {
        
        private float valueField;
        
        private Reverb2DeviceLPFilterVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb2DeviceLPFilter() {
            this.valueField = ((float)(4000F));
            this.visualizationField = Reverb2DeviceLPFilterVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb2DeviceLPFilterVisualization.Deviceonly)]
        public Reverb2DeviceLPFilterVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb2DeviceLPFilterVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DevicePreDelay {
        
        private float valueField;
        
        private Reverb2DevicePreDelayVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb2DevicePreDelay() {
            this.valueField = ((float)(10F));
            this.visualizationField = Reverb2DevicePreDelayVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb2DevicePreDelayVisualization.Deviceonly)]
        public Reverb2DevicePreDelayVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb2DevicePreDelayVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceDryMix {
        
        private float valueField;
        
        private Reverb2DeviceDryMixVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb2DeviceDryMix() {
            this.valueField = ((float)(1F));
            this.visualizationField = Reverb2DeviceDryMixVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb2DeviceDryMixVisualization.Deviceonly)]
        public Reverb2DeviceDryMixVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb2DeviceDryMixVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb2DeviceSend {
        
        private float valueField;
        
        private Reverb2DeviceSendVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb2DeviceSend() {
            this.valueField = ((float)(0.4F));
            this.visualizationField = Reverb2DeviceSendVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb2DeviceSendVisualization.Deviceonly)]
        public Reverb2DeviceSendVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb2DeviceSendVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceReverbDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private Reverb3DeviceRunTimePreset runTimePresetAField;
        
        private Reverb3DeviceRunTimePreset runTimePresetBField;
        
        private Reverb3DeviceReverbTime reverbTimeField;
        
        private Reverb3DevicePreDelay preDelayField;
        
        private Reverb3DeviceLPFilter lPFilterField;
        
        private Reverb3DeviceLPGain lPGainField;
        
        private Reverb3DeviceColor colorField;
        
        private Reverb3DeviceWidth widthField;
        
        private Reverb3DevicePan panField;
        
        private Reverb3DeviceWetMix wetMixField;
        
        private Reverb3DeviceDryMix dryMixField;
        
        private string typeField;
        
        public Reverb3DeviceReverbDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "Reverb3Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceReverbTime ReverbTime {
            get {
                return this.reverbTimeField;
            }
            set {
                this.reverbTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DevicePreDelay PreDelay {
            get {
                return this.preDelayField;
            }
            set {
                this.preDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceLPFilter LPFilter {
            get {
                return this.lPFilterField;
            }
            set {
                this.lPFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceLPGain LPGain {
            get {
                return this.lPGainField;
            }
            set {
                this.lPGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceColor Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceWidth Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DevicePan Pan {
            get {
                return this.panField;
            }
            set {
                this.panField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceWetMix WetMix {
            get {
                return this.wetMixField;
            }
            set {
                this.wetMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceDryMix DryMix {
            get {
                return this.dryMixField;
            }
            set {
                this.dryMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceRunTimePreset {
        
        private Reverb3DeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public Reverb3DeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceDeviceSlotRunTimePreset {
        
        private Reverb3DeviceReverbTimeRunTimePreset reverbTimeField;
        
        private Reverb3DevicePreDelayRunTimePreset preDelayField;
        
        private Reverb3DeviceLPFilterRunTimePreset lPFilterField;
        
        private Reverb3DeviceLPGainRunTimePreset lPGainField;
        
        private Reverb3DeviceColorRunTimePreset colorField;
        
        private Reverb3DeviceWidthRunTimePreset widthField;
        
        private Reverb3DevicePanRunTimePreset panField;
        
        private Reverb3DeviceWetMixRunTimePreset wetMixField;
        
        private Reverb3DeviceDryMixRunTimePreset dryMixField;
        
        private string typeField;
        
        public Reverb3DeviceDeviceSlotRunTimePreset() {
            this.typeField = "Reverb3Device";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceReverbTimeRunTimePreset ReverbTime {
            get {
                return this.reverbTimeField;
            }
            set {
                this.reverbTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DevicePreDelayRunTimePreset PreDelay {
            get {
                return this.preDelayField;
            }
            set {
                this.preDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceLPFilterRunTimePreset LPFilter {
            get {
                return this.lPFilterField;
            }
            set {
                this.lPFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceLPGainRunTimePreset LPGain {
            get {
                return this.lPGainField;
            }
            set {
                this.lPGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceColorRunTimePreset Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceWidthRunTimePreset Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DevicePanRunTimePreset Pan {
            get {
                return this.panField;
            }
            set {
                this.panField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceWetMixRunTimePreset WetMix {
            get {
                return this.wetMixField;
            }
            set {
                this.wetMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceDryMixRunTimePreset DryMix {
            get {
                return this.dryMixField;
            }
            set {
                this.dryMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceReverbTimeRunTimePreset {
        
        private float valueField;
        
        public Reverb3DeviceReverbTimeRunTimePreset() {
            this.valueField = ((float)(30F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "30")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DevicePreDelayRunTimePreset {
        
        private float valueField;
        
        public Reverb3DevicePreDelayRunTimePreset() {
            this.valueField = ((float)(10F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceLPFilterRunTimePreset {
        
        private float valueField;
        
        public Reverb3DeviceLPFilterRunTimePreset() {
            this.valueField = ((float)(4000F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceLPGainRunTimePreset {
        
        private float valueField;
        
        public Reverb3DeviceLPGainRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceColorRunTimePreset {
        
        private float valueField;
        
        public Reverb3DeviceColorRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceWidthRunTimePreset {
        
        private float valueField;
        
        public Reverb3DeviceWidthRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DevicePanRunTimePreset {
        
        private float valueField;
        
        public Reverb3DevicePanRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceWetMixRunTimePreset {
        
        private float valueField;
        
        public Reverb3DeviceWetMixRunTimePreset() {
            this.valueField = ((float)(0.4F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceDryMixRunTimePreset {
        
        private float valueField;
        
        public Reverb3DeviceDryMixRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceReverbTime {
        
        private float valueField;
        
        private Reverb3DeviceReverbTimeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DeviceReverbTime() {
            this.valueField = ((float)(30F));
            this.visualizationField = Reverb3DeviceReverbTimeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "30")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DeviceReverbTimeVisualization.Deviceonly)]
        public Reverb3DeviceReverbTimeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DeviceReverbTimeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DevicePreDelay {
        
        private float valueField;
        
        private Reverb3DevicePreDelayVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DevicePreDelay() {
            this.valueField = ((float)(10F));
            this.visualizationField = Reverb3DevicePreDelayVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "10")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DevicePreDelayVisualization.Deviceonly)]
        public Reverb3DevicePreDelayVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DevicePreDelayVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceLPFilter {
        
        private float valueField;
        
        private Reverb3DeviceLPFilterVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DeviceLPFilter() {
            this.valueField = ((float)(4000F));
            this.visualizationField = Reverb3DeviceLPFilterVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DeviceLPFilterVisualization.Deviceonly)]
        public Reverb3DeviceLPFilterVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DeviceLPFilterVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceLPGain {
        
        private float valueField;
        
        private Reverb3DeviceLPGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DeviceLPGain() {
            this.valueField = ((float)(0F));
            this.visualizationField = Reverb3DeviceLPGainVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DeviceLPGainVisualization.Deviceonly)]
        public Reverb3DeviceLPGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DeviceLPGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceColor {
        
        private float valueField;
        
        private Reverb3DeviceColorVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DeviceColor() {
            this.valueField = ((float)(0F));
            this.visualizationField = Reverb3DeviceColorVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DeviceColorVisualization.Deviceonly)]
        public Reverb3DeviceColorVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DeviceColorVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceWidth {
        
        private float valueField;
        
        private Reverb3DeviceWidthVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DeviceWidth() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = Reverb3DeviceWidthVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DeviceWidthVisualization.Deviceonly)]
        public Reverb3DeviceWidthVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DeviceWidthVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DevicePan {
        
        private float valueField;
        
        private Reverb3DevicePanVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DevicePan() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = Reverb3DevicePanVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DevicePanVisualization.Deviceonly)]
        public Reverb3DevicePanVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DevicePanVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceWetMix {
        
        private float valueField;
        
        private Reverb3DeviceWetMixVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DeviceWetMix() {
            this.valueField = ((float)(0.4F));
            this.visualizationField = Reverb3DeviceWetMixVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DeviceWetMixVisualization.Deviceonly)]
        public Reverb3DeviceWetMixVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DeviceWetMixVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reverb3DeviceDryMix {
        
        private float valueField;
        
        private Reverb3DeviceDryMixVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Reverb3DeviceDryMix() {
            this.valueField = ((float)(1F));
            this.visualizationField = Reverb3DeviceDryMixVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(Reverb3DeviceDryMixVisualization.Deviceonly)]
        public Reverb3DeviceDryMixVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum Reverb3DeviceDryMixVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private PhaserDeviceRunTimePreset runTimePresetAField;
        
        private PhaserDeviceRunTimePreset runTimePresetBField;
        
        private PhaserDeviceCeilling ceillingField;
        
        private PhaserDeviceFloor floorField;
        
        private PhaserDeviceLFORate lFORateField;
        
        private PhaserDeviceDepth depthField;
        
        private PhaserDeviceFeedback feedbackField;
        
        private PhaserDevicePhase phaseField;
        
        private PhaserDeviceStages stagesField;
        
        private string typeField;
        
        public PhaserDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "PhaserDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceCeilling Ceilling {
            get {
                return this.ceillingField;
            }
            set {
                this.ceillingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceFloor Floor {
            get {
                return this.floorField;
            }
            set {
                this.floorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceLFORate LFORate {
            get {
                return this.lFORateField;
            }
            set {
                this.lFORateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceDepth Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceFeedback Feedback {
            get {
                return this.feedbackField;
            }
            set {
                this.feedbackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDevicePhase Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceStages Stages {
            get {
                return this.stagesField;
            }
            set {
                this.stagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceRunTimePreset {
        
        private PhaserDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public PhaserDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceDeviceSlotRunTimePreset {
        
        private PhaserDeviceCeillingRunTimePreset ceillingField;
        
        private PhaserDeviceFloorRunTimePreset floorField;
        
        private PhaserDeviceLFORateRunTimePreset lFORateField;
        
        private PhaserDeviceDepthRunTimePreset depthField;
        
        private PhaserDeviceFeedbackRunTimePreset feedbackField;
        
        private PhaserDevicePhaseRunTimePreset phaseField;
        
        private PhaserDeviceStagesRunTimePreset stagesField;
        
        private string typeField;
        
        public PhaserDeviceDeviceSlotRunTimePreset() {
            this.typeField = "PhaserDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceCeillingRunTimePreset Ceilling {
            get {
                return this.ceillingField;
            }
            set {
                this.ceillingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceFloorRunTimePreset Floor {
            get {
                return this.floorField;
            }
            set {
                this.floorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceLFORateRunTimePreset LFORate {
            get {
                return this.lFORateField;
            }
            set {
                this.lFORateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceDepthRunTimePreset Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceFeedbackRunTimePreset Feedback {
            get {
                return this.feedbackField;
            }
            set {
                this.feedbackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDevicePhaseRunTimePreset Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDeviceStagesRunTimePreset Stages {
            get {
                return this.stagesField;
            }
            set {
                this.stagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceCeillingRunTimePreset {
        
        private float valueField;
        
        public PhaserDeviceCeillingRunTimePreset() {
            this.valueField = ((float)(20F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceFloorRunTimePreset {
        
        private float valueField;
        
        public PhaserDeviceFloorRunTimePreset() {
            this.valueField = ((float)(2000F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceLFORateRunTimePreset {
        
        private float valueField;
        
        public PhaserDeviceLFORateRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceDepthRunTimePreset {
        
        private float valueField;
        
        public PhaserDeviceDepthRunTimePreset() {
            this.valueField = ((float)(4F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceFeedbackRunTimePreset {
        
        private float valueField;
        
        public PhaserDeviceFeedbackRunTimePreset() {
            this.valueField = ((float)(0.7F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.7")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDevicePhaseRunTimePreset {
        
        private float valueField;
        
        public PhaserDevicePhaseRunTimePreset() {
            this.valueField = ((float)(3.14159F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3.14159")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceStagesRunTimePreset {
        
        private float valueField;
        
        public PhaserDeviceStagesRunTimePreset() {
            this.valueField = ((float)(6F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "6")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceCeilling {
        
        private float valueField;
        
        private PhaserDeviceCeillingVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PhaserDeviceCeilling() {
            this.valueField = ((float)(20F));
            this.visualizationField = PhaserDeviceCeillingVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PhaserDeviceCeillingVisualization.Deviceonly)]
        public PhaserDeviceCeillingVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PhaserDeviceCeillingVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceFloor {
        
        private float valueField;
        
        private PhaserDeviceFloorVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PhaserDeviceFloor() {
            this.valueField = ((float)(2000F));
            this.visualizationField = PhaserDeviceFloorVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "2000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PhaserDeviceFloorVisualization.Deviceonly)]
        public PhaserDeviceFloorVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PhaserDeviceFloorVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceLFORate {
        
        private float valueField;
        
        private PhaserDeviceLFORateVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PhaserDeviceLFORate() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = PhaserDeviceLFORateVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PhaserDeviceLFORateVisualization.Deviceonly)]
        public PhaserDeviceLFORateVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PhaserDeviceLFORateVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceDepth {
        
        private float valueField;
        
        private PhaserDeviceDepthVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PhaserDeviceDepth() {
            this.valueField = ((float)(4F));
            this.visualizationField = PhaserDeviceDepthVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PhaserDeviceDepthVisualization.Deviceonly)]
        public PhaserDeviceDepthVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PhaserDeviceDepthVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceFeedback {
        
        private float valueField;
        
        private PhaserDeviceFeedbackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PhaserDeviceFeedback() {
            this.valueField = ((float)(0.7F));
            this.visualizationField = PhaserDeviceFeedbackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.7")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PhaserDeviceFeedbackVisualization.Deviceonly)]
        public PhaserDeviceFeedbackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PhaserDeviceFeedbackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDevicePhase {
        
        private float valueField;
        
        private PhaserDevicePhaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PhaserDevicePhase() {
            this.valueField = ((float)(3.14159F));
            this.visualizationField = PhaserDevicePhaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3.14159")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PhaserDevicePhaseVisualization.Deviceonly)]
        public PhaserDevicePhaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PhaserDevicePhaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaserDeviceStages {
        
        private float valueField;
        
        private PhaserDeviceStagesVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PhaserDeviceStages() {
            this.valueField = ((float)(6F));
            this.visualizationField = PhaserDeviceStagesVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "6")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PhaserDeviceStagesVisualization.Deviceonly)]
        public PhaserDeviceStagesVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PhaserDeviceStagesVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceReverbDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private ReverbDeviceRunTimePreset runTimePresetAField;
        
        private ReverbDeviceRunTimePreset runTimePresetBField;
        
        private ReverbDeviceSend sendField;
        
        private ReverbDeviceRoomSize roomSizeField;
        
        private ReverbDeviceWidth widthField;
        
        private ReverbDeviceDamp dampField;
        
        private ReverbDeviceDryMix dryMixField;
        
        private string typeField;
        
        public ReverbDeviceReverbDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "ReverbDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceSend Send {
            get {
                return this.sendField;
            }
            set {
                this.sendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceRoomSize RoomSize {
            get {
                return this.roomSizeField;
            }
            set {
                this.roomSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceWidth Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceDamp Damp {
            get {
                return this.dampField;
            }
            set {
                this.dampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceDryMix DryMix {
            get {
                return this.dryMixField;
            }
            set {
                this.dryMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceRunTimePreset {
        
        private ReverbDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public ReverbDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceDeviceSlotRunTimePreset {
        
        private ReverbDeviceSendRunTimePreset sendField;
        
        private ReverbDeviceRoomSizeRunTimePreset roomSizeField;
        
        private ReverbDeviceWidthRunTimePreset widthField;
        
        private ReverbDeviceDampRunTimePreset dampField;
        
        private ReverbDeviceDryMixRunTimePreset dryMixField;
        
        private string typeField;
        
        public ReverbDeviceDeviceSlotRunTimePreset() {
            this.typeField = "ReverbDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceSendRunTimePreset Send {
            get {
                return this.sendField;
            }
            set {
                this.sendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceRoomSizeRunTimePreset RoomSize {
            get {
                return this.roomSizeField;
            }
            set {
                this.roomSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceWidthRunTimePreset Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceDampRunTimePreset Damp {
            get {
                return this.dampField;
            }
            set {
                this.dampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceDryMixRunTimePreset DryMix {
            get {
                return this.dryMixField;
            }
            set {
                this.dryMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceSendRunTimePreset {
        
        private float valueField;
        
        public ReverbDeviceSendRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceRoomSizeRunTimePreset {
        
        private float valueField;
        
        public ReverbDeviceRoomSizeRunTimePreset() {
            this.valueField = ((float)(0.4F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceWidthRunTimePreset {
        
        private float valueField;
        
        public ReverbDeviceWidthRunTimePreset() {
            this.valueField = ((float)(0.7F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.7")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceDampRunTimePreset {
        
        private float valueField;
        
        public ReverbDeviceDampRunTimePreset() {
            this.valueField = ((float)(0.2F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.2")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceDryMixRunTimePreset {
        
        private float valueField;
        
        public ReverbDeviceDryMixRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceSend {
        
        private float valueField;
        
        private ReverbDeviceSendVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ReverbDeviceSend() {
            this.valueField = ((float)(1F));
            this.visualizationField = ReverbDeviceSendVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ReverbDeviceSendVisualization.Deviceonly)]
        public ReverbDeviceSendVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ReverbDeviceSendVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceRoomSize {
        
        private float valueField;
        
        private ReverbDeviceRoomSizeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ReverbDeviceRoomSize() {
            this.valueField = ((float)(0.4F));
            this.visualizationField = ReverbDeviceRoomSizeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.4")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ReverbDeviceRoomSizeVisualization.Deviceonly)]
        public ReverbDeviceRoomSizeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ReverbDeviceRoomSizeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceWidth {
        
        private float valueField;
        
        private ReverbDeviceWidthVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ReverbDeviceWidth() {
            this.valueField = ((float)(0.7F));
            this.visualizationField = ReverbDeviceWidthVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.7")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ReverbDeviceWidthVisualization.Deviceonly)]
        public ReverbDeviceWidthVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ReverbDeviceWidthVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceDamp {
        
        private float valueField;
        
        private ReverbDeviceDampVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ReverbDeviceDamp() {
            this.valueField = ((float)(0.2F));
            this.visualizationField = ReverbDeviceDampVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.2")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ReverbDeviceDampVisualization.Deviceonly)]
        public ReverbDeviceDampVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ReverbDeviceDampVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverbDeviceDryMix {
        
        private float valueField;
        
        private ReverbDeviceDryMixVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ReverbDeviceDryMix() {
            this.valueField = ((float)(1F));
            this.visualizationField = ReverbDeviceDryMixVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ReverbDeviceDryMixVisualization.Deviceonly)]
        public ReverbDeviceDryMixVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ReverbDeviceDryMixVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private RingModDeviceRunTimePreset runTimePresetAField;
        
        private RingModDeviceRunTimePreset runTimePresetBField;
        
        private RingModDeviceOscillatorType oscillatorTypeField;
        
        private RingModDeviceFrequency frequencyField;
        
        private RingModDeviceAmount amountField;
        
        private RingModDevicePhase phaseField;
        
        private RingModDeviceInertia inertiaField;
        
        private string typeField;
        
        public RingModDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "RingModDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceOscillatorType OscillatorType {
            get {
                return this.oscillatorTypeField;
            }
            set {
                this.oscillatorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceFrequency Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceAmount Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDevicePhase Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceInertia Inertia {
            get {
                return this.inertiaField;
            }
            set {
                this.inertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceRunTimePreset {
        
        private RingModDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public RingModDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceDeviceSlotRunTimePreset {
        
        private RingModDeviceOscillatorTypeRunTimePreset oscillatorTypeField;
        
        private RingModDeviceFrequencyRunTimePreset frequencyField;
        
        private RingModDeviceAmountRunTimePreset amountField;
        
        private RingModDevicePhaseRunTimePreset phaseField;
        
        private RingModDeviceInertiaRunTimePreset inertiaField;
        
        private string typeField;
        
        public RingModDeviceDeviceSlotRunTimePreset() {
            this.typeField = "RingModDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceOscillatorTypeRunTimePreset OscillatorType {
            get {
                return this.oscillatorTypeField;
            }
            set {
                this.oscillatorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceFrequencyRunTimePreset Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceAmountRunTimePreset Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDevicePhaseRunTimePreset Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDeviceInertiaRunTimePreset Inertia {
            get {
                return this.inertiaField;
            }
            set {
                this.inertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceOscillatorTypeRunTimePreset {
        
        private float valueField;
        
        public RingModDeviceOscillatorTypeRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceFrequencyRunTimePreset {
        
        private float valueField;
        
        public RingModDeviceFrequencyRunTimePreset() {
            this.valueField = ((float)(0.6050038F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.6050038")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceAmountRunTimePreset {
        
        private float valueField;
        
        public RingModDeviceAmountRunTimePreset() {
            this.valueField = ((float)(0.75F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.75")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDevicePhaseRunTimePreset {
        
        private float valueField;
        
        public RingModDevicePhaseRunTimePreset() {
            this.valueField = ((float)(45F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "45")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceInertiaRunTimePreset {
        
        private float valueField;
        
        public RingModDeviceInertiaRunTimePreset() {
            this.valueField = ((float)(0.015625F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.015625")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceOscillatorType {
        
        private float valueField;
        
        private RingModDeviceOscillatorTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public RingModDeviceOscillatorType() {
            this.valueField = ((float)(0F));
            this.visualizationField = RingModDeviceOscillatorTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(RingModDeviceOscillatorTypeVisualization.Deviceonly)]
        public RingModDeviceOscillatorTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum RingModDeviceOscillatorTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceFrequency {
        
        private float valueField;
        
        private RingModDeviceFrequencyVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public RingModDeviceFrequency() {
            this.valueField = ((float)(0.6050038F));
            this.visualizationField = RingModDeviceFrequencyVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.6050038")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(RingModDeviceFrequencyVisualization.Deviceonly)]
        public RingModDeviceFrequencyVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum RingModDeviceFrequencyVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceAmount {
        
        private float valueField;
        
        private RingModDeviceAmountVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public RingModDeviceAmount() {
            this.valueField = ((float)(0.75F));
            this.visualizationField = RingModDeviceAmountVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.75")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(RingModDeviceAmountVisualization.Deviceonly)]
        public RingModDeviceAmountVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum RingModDeviceAmountVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDevicePhase {
        
        private float valueField;
        
        private RingModDevicePhaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public RingModDevicePhase() {
            this.valueField = ((float)(45F));
            this.visualizationField = RingModDevicePhaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "45")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(RingModDevicePhaseVisualization.Deviceonly)]
        public RingModDevicePhaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum RingModDevicePhaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RingModDeviceInertia {
        
        private float valueField;
        
        private RingModDeviceInertiaVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public RingModDeviceInertia() {
            this.valueField = ((float)(0.015625F));
            this.visualizationField = RingModDeviceInertiaVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.015625")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(RingModDeviceInertiaVisualization.Deviceonly)]
        public RingModDeviceInertiaVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum RingModDeviceInertiaVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private FilterDistortionDeviceRunTimePreset runTimePresetAField;
        
        private FilterDistortionDeviceRunTimePreset runTimePresetBField;
        
        private FilterDistortionDeviceFilterType filterTypeField;
        
        private FilterDistortionDeviceDrive driveField;
        
        private FilterDistortionDeviceCutoff cutoffField;
        
        private FilterDistortionDeviceResonance resonanceField;
        
        private FilterDistortionDeviceInertia inertiaField;
        
        private string typeField;
        
        public FilterDistortionDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "FilterDistortionDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceFilterType FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceDrive Drive {
            get {
                return this.driveField;
            }
            set {
                this.driveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceCutoff Cutoff {
            get {
                return this.cutoffField;
            }
            set {
                this.cutoffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceResonance Resonance {
            get {
                return this.resonanceField;
            }
            set {
                this.resonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceInertia Inertia {
            get {
                return this.inertiaField;
            }
            set {
                this.inertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceRunTimePreset {
        
        private FilterDistortionDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public FilterDistortionDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceDeviceSlotRunTimePreset {
        
        private FilterDistortionDeviceFilterTypeRunTimePreset filterTypeField;
        
        private FilterDistortionDeviceDriveRunTimePreset driveField;
        
        private FilterDistortionDeviceCutoffRunTimePreset cutoffField;
        
        private FilterDistortionDeviceResonanceRunTimePreset resonanceField;
        
        private FilterDistortionDeviceInertiaRunTimePreset inertiaField;
        
        private string typeField;
        
        public FilterDistortionDeviceDeviceSlotRunTimePreset() {
            this.typeField = "FilterDistortionDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceFilterTypeRunTimePreset FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceDriveRunTimePreset Drive {
            get {
                return this.driveField;
            }
            set {
                this.driveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceCutoffRunTimePreset Cutoff {
            get {
                return this.cutoffField;
            }
            set {
                this.cutoffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceResonanceRunTimePreset Resonance {
            get {
                return this.resonanceField;
            }
            set {
                this.resonanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDeviceInertiaRunTimePreset Inertia {
            get {
                return this.inertiaField;
            }
            set {
                this.inertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceFilterTypeRunTimePreset {
        
        private float valueField;
        
        public FilterDistortionDeviceFilterTypeRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceDriveRunTimePreset {
        
        private float valueField;
        
        public FilterDistortionDeviceDriveRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceCutoffRunTimePreset {
        
        private float valueField;
        
        public FilterDistortionDeviceCutoffRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceResonanceRunTimePreset {
        
        private float valueField;
        
        public FilterDistortionDeviceResonanceRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceInertiaRunTimePreset {
        
        private float valueField;
        
        public FilterDistortionDeviceInertiaRunTimePreset() {
            this.valueField = ((float)(0.015625F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.015625")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceFilterType {
        
        private float valueField;
        
        private FilterDistortionDeviceFilterTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FilterDistortionDeviceFilterType() {
            this.valueField = ((float)(0F));
            this.visualizationField = FilterDistortionDeviceFilterTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FilterDistortionDeviceFilterTypeVisualization.Deviceonly)]
        public FilterDistortionDeviceFilterTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FilterDistortionDeviceFilterTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceDrive {
        
        private float valueField;
        
        private FilterDistortionDeviceDriveVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FilterDistortionDeviceDrive() {
            this.valueField = ((float)(0F));
            this.visualizationField = FilterDistortionDeviceDriveVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FilterDistortionDeviceDriveVisualization.Deviceonly)]
        public FilterDistortionDeviceDriveVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FilterDistortionDeviceDriveVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceCutoff {
        
        private float valueField;
        
        private FilterDistortionDeviceCutoffVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FilterDistortionDeviceCutoff() {
            this.valueField = ((float)(1F));
            this.visualizationField = FilterDistortionDeviceCutoffVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FilterDistortionDeviceCutoffVisualization.Deviceonly)]
        public FilterDistortionDeviceCutoffVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FilterDistortionDeviceCutoffVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceResonance {
        
        private float valueField;
        
        private FilterDistortionDeviceResonanceVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FilterDistortionDeviceResonance() {
            this.valueField = ((float)(0F));
            this.visualizationField = FilterDistortionDeviceResonanceVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FilterDistortionDeviceResonanceVisualization.Deviceonly)]
        public FilterDistortionDeviceResonanceVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FilterDistortionDeviceResonanceVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDistortionDeviceInertia {
        
        private float valueField;
        
        private FilterDistortionDeviceInertiaVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public FilterDistortionDeviceInertia() {
            this.valueField = ((float)(0.015625F));
            this.visualizationField = FilterDistortionDeviceInertiaVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.015625")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(FilterDistortionDeviceInertiaVisualization.Deviceonly)]
        public FilterDistortionDeviceInertiaVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FilterDistortionDeviceInertiaVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private ShaperDeviceRunTimePreset runTimePresetAField;
        
        private ShaperDeviceRunTimePreset runTimePresetBField;
        
        private ShaperDeviceThreshold thresholdField;
        
        private ShaperDeviceRatio ratioField;
        
        private ShaperDeviceAttack attackField;
        
        private ShaperDeviceRelease releaseField;
        
        private ShaperDeviceGain gainField;
        
        private string typeField;
        
        public ShaperDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "ShaperDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceThreshold Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceRatio Ratio {
            get {
                return this.ratioField;
            }
            set {
                this.ratioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceAttack Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceRelease Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceGain Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceRunTimePreset {
        
        private ShaperDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public ShaperDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceDeviceSlotRunTimePreset {
        
        private ShaperDeviceThresholdRunTimePreset thresholdField;
        
        private ShaperDeviceRatioRunTimePreset ratioField;
        
        private ShaperDeviceAttackRunTimePreset attackField;
        
        private ShaperDeviceReleaseRunTimePreset releaseField;
        
        private ShaperDeviceGainRunTimePreset gainField;
        
        private string typeField;
        
        public ShaperDeviceDeviceSlotRunTimePreset() {
            this.typeField = "ShaperDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceThresholdRunTimePreset Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceRatioRunTimePreset Ratio {
            get {
                return this.ratioField;
            }
            set {
                this.ratioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceAttackRunTimePreset Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceReleaseRunTimePreset Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDeviceGainRunTimePreset Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceThresholdRunTimePreset {
        
        private float valueField;
        
        public ShaperDeviceThresholdRunTimePreset() {
            this.valueField = ((float)(8384F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "8384")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceRatioRunTimePreset {
        
        private float valueField;
        
        public ShaperDeviceRatioRunTimePreset() {
            this.valueField = ((float)(3F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceAttackRunTimePreset {
        
        private float valueField;
        
        public ShaperDeviceAttackRunTimePreset() {
            this.valueField = ((float)(1000F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceReleaseRunTimePreset {
        
        private float valueField;
        
        public ShaperDeviceReleaseRunTimePreset() {
            this.valueField = ((float)(100000F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceGainRunTimePreset {
        
        private float valueField;
        
        public ShaperDeviceGainRunTimePreset() {
            this.valueField = ((float)(1.3F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1.3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceThreshold {
        
        private float valueField;
        
        private ShaperDeviceThresholdVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ShaperDeviceThreshold() {
            this.valueField = ((float)(8384F));
            this.visualizationField = ShaperDeviceThresholdVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "8384")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ShaperDeviceThresholdVisualization.Deviceonly)]
        public ShaperDeviceThresholdVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ShaperDeviceThresholdVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceRatio {
        
        private float valueField;
        
        private ShaperDeviceRatioVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ShaperDeviceRatio() {
            this.valueField = ((float)(3F));
            this.visualizationField = ShaperDeviceRatioVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ShaperDeviceRatioVisualization.Deviceonly)]
        public ShaperDeviceRatioVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ShaperDeviceRatioVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceAttack {
        
        private float valueField;
        
        private ShaperDeviceAttackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ShaperDeviceAttack() {
            this.valueField = ((float)(1000F));
            this.visualizationField = ShaperDeviceAttackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ShaperDeviceAttackVisualization.Deviceonly)]
        public ShaperDeviceAttackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ShaperDeviceAttackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceRelease {
        
        private float valueField;
        
        private ShaperDeviceReleaseVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ShaperDeviceRelease() {
            this.valueField = ((float)(100000F));
            this.visualizationField = ShaperDeviceReleaseVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "100000")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ShaperDeviceReleaseVisualization.Deviceonly)]
        public ShaperDeviceReleaseVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ShaperDeviceReleaseVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShaperDeviceGain {
        
        private float valueField;
        
        private ShaperDeviceGainVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ShaperDeviceGain() {
            this.valueField = ((float)(1.3F));
            this.visualizationField = ShaperDeviceGainVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1.3")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ShaperDeviceGainVisualization.Deviceonly)]
        public ShaperDeviceGainVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ShaperDeviceGainVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StereoExpanderDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private StereoExpanderDeviceRunTimePreset runTimePresetAField;
        
        private StereoExpanderDeviceRunTimePreset runTimePresetBField;
        
        private StereoExpanderDeviceMonoMixMode monoMixModeField;
        
        private StereoExpanderDeviceStereoWidth stereoWidthField;
        
        private StereoExpanderDeviceSurroundWidth surroundWidthField;
        
        private string typeField;
        
        public StereoExpanderDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.monoMixModeField = StereoExpanderDeviceMonoMixMode.R;
            this.typeField = "StereoExpanderDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(StereoExpanderDeviceMonoMixMode.R)]
        public StereoExpanderDeviceMonoMixMode MonoMixMode {
            get {
                return this.monoMixModeField;
            }
            set {
                this.monoMixModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDeviceStereoWidth StereoWidth {
            get {
                return this.stereoWidthField;
            }
            set {
                this.stereoWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDeviceSurroundWidth SurroundWidth {
            get {
                return this.surroundWidthField;
            }
            set {
                this.surroundWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StereoExpanderDeviceRunTimePreset {
        
        private StereoExpanderDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public StereoExpanderDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StereoExpanderDeviceDeviceSlotRunTimePreset {
        
        private StereoExpanderDeviceDeviceSlotRunTimePresetMonoMixMode monoMixModeField;
        
        private StereoExpanderDeviceStereoWidthRunTimePreset stereoWidthField;
        
        private StereoExpanderDeviceSurroundWidthRunTimePreset surroundWidthField;
        
        private string typeField;
        
        public StereoExpanderDeviceDeviceSlotRunTimePreset() {
            this.monoMixModeField = StereoExpanderDeviceDeviceSlotRunTimePresetMonoMixMode.R;
            this.typeField = "StereoExpanderDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(StereoExpanderDeviceDeviceSlotRunTimePresetMonoMixMode.R)]
        public StereoExpanderDeviceDeviceSlotRunTimePresetMonoMixMode MonoMixMode {
            get {
                return this.monoMixModeField;
            }
            set {
                this.monoMixModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDeviceStereoWidthRunTimePreset StereoWidth {
            get {
                return this.stereoWidthField;
            }
            set {
                this.stereoWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDeviceSurroundWidthRunTimePreset SurroundWidth {
            get {
                return this.surroundWidthField;
            }
            set {
                this.surroundWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum StereoExpanderDeviceDeviceSlotRunTimePresetMonoMixMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StereoExpanderDeviceStereoWidthRunTimePreset {
        
        private float valueField;
        
        public StereoExpanderDeviceStereoWidthRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StereoExpanderDeviceSurroundWidthRunTimePreset {
        
        private float valueField;
        
        public StereoExpanderDeviceSurroundWidthRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum StereoExpanderDeviceMonoMixMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StereoExpanderDeviceStereoWidth {
        
        private float valueField;
        
        private StereoExpanderDeviceStereoWidthVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public StereoExpanderDeviceStereoWidth() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = StereoExpanderDeviceStereoWidthVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(StereoExpanderDeviceStereoWidthVisualization.Deviceonly)]
        public StereoExpanderDeviceStereoWidthVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum StereoExpanderDeviceStereoWidthVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StereoExpanderDeviceSurroundWidth {
        
        private float valueField;
        
        private StereoExpanderDeviceSurroundWidthVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public StereoExpanderDeviceSurroundWidth() {
            this.valueField = ((float)(0F));
            this.visualizationField = StereoExpanderDeviceSurroundWidthVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(StereoExpanderDeviceSurroundWidthVisualization.Deviceonly)]
        public StereoExpanderDeviceSurroundWidthVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum StereoExpanderDeviceSurroundWidthVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private SendDeviceRunTimePreset runTimePresetAField;
        
        private SendDeviceRunTimePreset runTimePresetBField;
        
        private SendDeviceSendAmount sendAmountField;
        
        private SendDeviceDestSendTrack destSendTrackField;
        
        private bool muteSourceField;
        
        private string typeField;
        
        public SendDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.muteSourceField = true;
            this.typeField = "SendDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDeviceSendAmount SendAmount {
            get {
                return this.sendAmountField;
            }
            set {
                this.sendAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDeviceDestSendTrack DestSendTrack {
            get {
                return this.destSendTrackField;
            }
            set {
                this.destSendTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool MuteSource {
            get {
                return this.muteSourceField;
            }
            set {
                this.muteSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDeviceRunTimePreset {
        
        private SendDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public SendDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDeviceDeviceSlotRunTimePreset {
        
        private SendDeviceSendAmountRunTimePreset sendAmountField;
        
        private SendDeviceDestSendTrackRunTimePreset destSendTrackField;
        
        private bool muteSourceField;
        
        private string typeField;
        
        public SendDeviceDeviceSlotRunTimePreset() {
            this.muteSourceField = true;
            this.typeField = "SendDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDeviceSendAmountRunTimePreset SendAmount {
            get {
                return this.sendAmountField;
            }
            set {
                this.sendAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDeviceDestSendTrackRunTimePreset DestSendTrack {
            get {
                return this.destSendTrackField;
            }
            set {
                this.destSendTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool MuteSource {
            get {
                return this.muteSourceField;
            }
            set {
                this.muteSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDeviceSendAmountRunTimePreset {
        
        private float valueField;
        
        public SendDeviceSendAmountRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDeviceDestSendTrackRunTimePreset {
        
        private float valueField;
        
        public SendDeviceDestSendTrackRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDeviceSendAmount {
        
        private float valueField;
        
        private SendDeviceSendAmountVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SendDeviceSendAmount() {
            this.valueField = ((float)(1F));
            this.visualizationField = SendDeviceSendAmountVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SendDeviceSendAmountVisualization.MixerandDevice)]
        public SendDeviceSendAmountVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SendDeviceSendAmountVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDeviceDestSendTrack {
        
        private float valueField;
        
        private SendDeviceDestSendTrackVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SendDeviceDestSendTrack() {
            this.valueField = ((float)(0F));
            this.visualizationField = SendDeviceDestSendTrackVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SendDeviceDestSendTrackVisualization.Deviceonly)]
        public SendDeviceDestSendTrackVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SendDeviceDestSendTrackVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PdcTestDelayDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private PdcTestDelayDeviceRunTimePreset runTimePresetAField;
        
        private PdcTestDelayDeviceRunTimePreset runTimePresetBField;
        
        private PdcTestDelayDeviceDelayInMs delayInMsField;
        
        private PdcTestDelayDeviceReportLatency reportLatencyField;
        
        private string typeField;
        
        public PdcTestDelayDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "PdcTestDelayDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDeviceDelayInMs DelayInMs {
            get {
                return this.delayInMsField;
            }
            set {
                this.delayInMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDeviceReportLatency ReportLatency {
            get {
                return this.reportLatencyField;
            }
            set {
                this.reportLatencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PdcTestDelayDeviceRunTimePreset {
        
        private PdcTestDelayDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public PdcTestDelayDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PdcTestDelayDeviceDeviceSlotRunTimePreset {
        
        private PdcTestDelayDeviceDelayInMsRunTimePreset delayInMsField;
        
        private PdcTestDelayDeviceReportLatencyRunTimePreset reportLatencyField;
        
        private string typeField;
        
        public PdcTestDelayDeviceDeviceSlotRunTimePreset() {
            this.typeField = "PdcTestDelayDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDeviceDelayInMsRunTimePreset DelayInMs {
            get {
                return this.delayInMsField;
            }
            set {
                this.delayInMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDeviceReportLatencyRunTimePreset ReportLatency {
            get {
                return this.reportLatencyField;
            }
            set {
                this.reportLatencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PdcTestDelayDeviceDelayInMsRunTimePreset {
        
        private float valueField;
        
        public PdcTestDelayDeviceDelayInMsRunTimePreset() {
            this.valueField = ((float)(200F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "200")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PdcTestDelayDeviceReportLatencyRunTimePreset {
        
        private float valueField;
        
        public PdcTestDelayDeviceReportLatencyRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PdcTestDelayDeviceDelayInMs {
        
        private float valueField;
        
        private PdcTestDelayDeviceDelayInMsVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PdcTestDelayDeviceDelayInMs() {
            this.valueField = ((float)(200F));
            this.visualizationField = PdcTestDelayDeviceDelayInMsVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "200")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PdcTestDelayDeviceDelayInMsVisualization.Deviceonly)]
        public PdcTestDelayDeviceDelayInMsVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PdcTestDelayDeviceDelayInMsVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PdcTestDelayDeviceReportLatency {
        
        private float valueField;
        
        private PdcTestDelayDeviceReportLatencyVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public PdcTestDelayDeviceReportLatency() {
            this.valueField = ((float)(1F));
            this.visualizationField = PdcTestDelayDeviceReportLatencyVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PdcTestDelayDeviceReportLatencyVisualization.Deviceonly)]
        public PdcTestDelayDeviceReportLatencyVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PdcTestDelayDeviceReportLatencyVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstrumentAutomationDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private InstrumentAutomationDeviceRunTimePreset runTimePresetAField;
        
        private InstrumentAutomationDeviceRunTimePreset runTimePresetBField;
        
        private ParameterValue parameterValue0Field;
        
        private int parameterNumber0Field;
        
        private ParameterValue parameterValue1Field;
        
        private int parameterNumber1Field;
        
        private ParameterValue parameterValue2Field;
        
        private int parameterNumber2Field;
        
        private ParameterValue parameterValue3Field;
        
        private int parameterNumber3Field;
        
        private ParameterValue parameterValue4Field;
        
        private int parameterNumber4Field;
        
        private ParameterValue parameterValue5Field;
        
        private int parameterNumber5Field;
        
        private ParameterValue parameterValue6Field;
        
        private int parameterNumber6Field;
        
        private ParameterValue parameterValue7Field;
        
        private int parameterNumber7Field;
        
        private ParameterValue parameterValue8Field;
        
        private int parameterNumber8Field;
        
        private ParameterValue parameterValue9Field;
        
        private int parameterNumber9Field;
        
        private ParameterValue parameterValue10Field;
        
        private int parameterNumber10Field;
        
        private ParameterValue parameterValue11Field;
        
        private int parameterNumber11Field;
        
        private ParameterValue parameterValue12Field;
        
        private int parameterNumber12Field;
        
        private ParameterValue parameterValue13Field;
        
        private int parameterNumber13Field;
        
        private int linkedInstrumentField;
        
        private int visiblePagesField;
        
        private string typeField;
        
        public InstrumentAutomationDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = true;
            this.parameterNumber0Field = 0;
            this.parameterNumber1Field = 1;
            this.parameterNumber2Field = 2;
            this.parameterNumber3Field = 3;
            this.parameterNumber4Field = 4;
            this.parameterNumber5Field = 5;
            this.parameterNumber6Field = 6;
            this.parameterNumber7Field = 7;
            this.parameterNumber8Field = 8;
            this.parameterNumber9Field = 9;
            this.parameterNumber10Field = 10;
            this.parameterNumber11Field = 11;
            this.parameterNumber12Field = 12;
            this.parameterNumber13Field = 13;
            this.linkedInstrumentField = 0;
            this.visiblePagesField = 1;
            this.typeField = "InstrumentAutomationDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstrumentAutomationDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstrumentAutomationDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue0 {
            get {
                return this.parameterValue0Field;
            }
            set {
                this.parameterValue0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ParameterNumber0 {
            get {
                return this.parameterNumber0Field;
            }
            set {
                this.parameterNumber0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue1 {
            get {
                return this.parameterValue1Field;
            }
            set {
                this.parameterValue1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int ParameterNumber1 {
            get {
                return this.parameterNumber1Field;
            }
            set {
                this.parameterNumber1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue2 {
            get {
                return this.parameterValue2Field;
            }
            set {
                this.parameterValue2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(2)]
        public int ParameterNumber2 {
            get {
                return this.parameterNumber2Field;
            }
            set {
                this.parameterNumber2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue3 {
            get {
                return this.parameterValue3Field;
            }
            set {
                this.parameterValue3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(3)]
        public int ParameterNumber3 {
            get {
                return this.parameterNumber3Field;
            }
            set {
                this.parameterNumber3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue4 {
            get {
                return this.parameterValue4Field;
            }
            set {
                this.parameterValue4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(4)]
        public int ParameterNumber4 {
            get {
                return this.parameterNumber4Field;
            }
            set {
                this.parameterNumber4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue5 {
            get {
                return this.parameterValue5Field;
            }
            set {
                this.parameterValue5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(5)]
        public int ParameterNumber5 {
            get {
                return this.parameterNumber5Field;
            }
            set {
                this.parameterNumber5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue6 {
            get {
                return this.parameterValue6Field;
            }
            set {
                this.parameterValue6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(6)]
        public int ParameterNumber6 {
            get {
                return this.parameterNumber6Field;
            }
            set {
                this.parameterNumber6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue7 {
            get {
                return this.parameterValue7Field;
            }
            set {
                this.parameterValue7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(7)]
        public int ParameterNumber7 {
            get {
                return this.parameterNumber7Field;
            }
            set {
                this.parameterNumber7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue8 {
            get {
                return this.parameterValue8Field;
            }
            set {
                this.parameterValue8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(8)]
        public int ParameterNumber8 {
            get {
                return this.parameterNumber8Field;
            }
            set {
                this.parameterNumber8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue9 {
            get {
                return this.parameterValue9Field;
            }
            set {
                this.parameterValue9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(9)]
        public int ParameterNumber9 {
            get {
                return this.parameterNumber9Field;
            }
            set {
                this.parameterNumber9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue10 {
            get {
                return this.parameterValue10Field;
            }
            set {
                this.parameterValue10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(10)]
        public int ParameterNumber10 {
            get {
                return this.parameterNumber10Field;
            }
            set {
                this.parameterNumber10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue11 {
            get {
                return this.parameterValue11Field;
            }
            set {
                this.parameterValue11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(11)]
        public int ParameterNumber11 {
            get {
                return this.parameterNumber11Field;
            }
            set {
                this.parameterNumber11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue12 {
            get {
                return this.parameterValue12Field;
            }
            set {
                this.parameterValue12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(12)]
        public int ParameterNumber12 {
            get {
                return this.parameterNumber12Field;
            }
            set {
                this.parameterNumber12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterValue ParameterValue13 {
            get {
                return this.parameterValue13Field;
            }
            set {
                this.parameterValue13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(13)]
        public int ParameterNumber13 {
            get {
                return this.parameterNumber13Field;
            }
            set {
                this.parameterNumber13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int LinkedInstrument {
            get {
                return this.linkedInstrumentField;
            }
            set {
                this.linkedInstrumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int VisiblePages {
            get {
                return this.visiblePagesField;
            }
            set {
                this.visiblePagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstrumentAutomationDeviceRunTimePreset {
        
        private InstrumentAutomationDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public InstrumentAutomationDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstrumentAutomationDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstrumentAutomationDeviceDeviceSlotRunTimePreset {
        
        private int parameterNumber0Field;
        
        private int parameterNumber1Field;
        
        private int parameterNumber2Field;
        
        private int parameterNumber3Field;
        
        private int parameterNumber4Field;
        
        private int parameterNumber5Field;
        
        private int parameterNumber6Field;
        
        private int parameterNumber7Field;
        
        private int parameterNumber8Field;
        
        private int parameterNumber9Field;
        
        private int parameterNumber10Field;
        
        private int parameterNumber11Field;
        
        private int parameterNumber12Field;
        
        private int parameterNumber13Field;
        
        private int visiblePagesField;
        
        private string typeField;
        
        public InstrumentAutomationDeviceDeviceSlotRunTimePreset() {
            this.parameterNumber0Field = 0;
            this.parameterNumber1Field = 1;
            this.parameterNumber2Field = 2;
            this.parameterNumber3Field = 3;
            this.parameterNumber4Field = 4;
            this.parameterNumber5Field = 5;
            this.parameterNumber6Field = 6;
            this.parameterNumber7Field = 7;
            this.parameterNumber8Field = 8;
            this.parameterNumber9Field = 9;
            this.parameterNumber10Field = 10;
            this.parameterNumber11Field = 11;
            this.parameterNumber12Field = 12;
            this.parameterNumber13Field = 13;
            this.visiblePagesField = 1;
            this.typeField = "InstrumentAutomationDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ParameterNumber0 {
            get {
                return this.parameterNumber0Field;
            }
            set {
                this.parameterNumber0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int ParameterNumber1 {
            get {
                return this.parameterNumber1Field;
            }
            set {
                this.parameterNumber1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(2)]
        public int ParameterNumber2 {
            get {
                return this.parameterNumber2Field;
            }
            set {
                this.parameterNumber2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(3)]
        public int ParameterNumber3 {
            get {
                return this.parameterNumber3Field;
            }
            set {
                this.parameterNumber3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(4)]
        public int ParameterNumber4 {
            get {
                return this.parameterNumber4Field;
            }
            set {
                this.parameterNumber4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(5)]
        public int ParameterNumber5 {
            get {
                return this.parameterNumber5Field;
            }
            set {
                this.parameterNumber5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(6)]
        public int ParameterNumber6 {
            get {
                return this.parameterNumber6Field;
            }
            set {
                this.parameterNumber6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(7)]
        public int ParameterNumber7 {
            get {
                return this.parameterNumber7Field;
            }
            set {
                this.parameterNumber7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(8)]
        public int ParameterNumber8 {
            get {
                return this.parameterNumber8Field;
            }
            set {
                this.parameterNumber8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(9)]
        public int ParameterNumber9 {
            get {
                return this.parameterNumber9Field;
            }
            set {
                this.parameterNumber9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(10)]
        public int ParameterNumber10 {
            get {
                return this.parameterNumber10Field;
            }
            set {
                this.parameterNumber10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(11)]
        public int ParameterNumber11 {
            get {
                return this.parameterNumber11Field;
            }
            set {
                this.parameterNumber11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(12)]
        public int ParameterNumber12 {
            get {
                return this.parameterNumber12Field;
            }
            set {
                this.parameterNumber12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(13)]
        public int ParameterNumber13 {
            get {
                return this.parameterNumber13Field;
            }
            set {
                this.parameterNumber13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int VisiblePages {
            get {
                return this.visiblePagesField;
            }
            set {
                this.visiblePagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParameterValue {
        
        private float valueField;
        
        private ParameterValueVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public ParameterValue() {
            this.valueField = ((float)(0F));
            this.visualizationField = ParameterValueVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ParameterValueVisualization.Deviceonly)]
        public ParameterValueVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ParameterValueVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private LfoDeviceRunTimePreset runTimePresetAField;
        
        private LfoDeviceRunTimePreset runTimePresetBField;
        
        private DestEffect destEffectField;
        
        private DestParameter destParameterField;
        
        private LfoDeviceAmplitude amplitudeField;
        
        private LfoDeviceOffset offsetField;
        
        private LfoDeviceFrequency frequencyField;
        
        private LfoDeviceType typeField;
        
        private CustomEnvelope customEnvelopeField;
        
        private bool customEnvelopeOneShotField;
        
        private string typeField1;
        
        public LfoDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.customEnvelopeOneShotField = false;
            this.typeField1 = "LfoDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DestEffect DestEffect {
            get {
                return this.destEffectField;
            }
            set {
                this.destEffectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DestParameter DestParameter {
            get {
                return this.destParameterField;
            }
            set {
                this.destParameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceAmplitude Amplitude {
            get {
                return this.amplitudeField;
            }
            set {
                this.amplitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceOffset Offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceFrequency Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CustomEnvelope CustomEnvelope {
            get {
                return this.customEnvelopeField;
            }
            set {
                this.customEnvelopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool CustomEnvelopeOneShot {
            get {
                return this.customEnvelopeOneShotField;
            }
            set {
                this.customEnvelopeOneShotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceRunTimePreset {
        
        private LfoDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public LfoDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceDeviceSlotRunTimePreset {
        
        private LfoDeviceAmplitudeRunTimePreset amplitudeField;
        
        private LfoDeviceOffsetRunTimePreset offsetField;
        
        private LfoDeviceFrequencyRunTimePreset frequencyField;
        
        private LfoDeviceTypeRunTimePreset typeField;
        
        private CustomEnvelope customEnvelopeField;
        
        private bool customEnvelopeOneShotField;
        
        private string typeField1;
        
        public LfoDeviceDeviceSlotRunTimePreset() {
            this.customEnvelopeOneShotField = false;
            this.typeField1 = "LfoDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceAmplitudeRunTimePreset Amplitude {
            get {
                return this.amplitudeField;
            }
            set {
                this.amplitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceOffsetRunTimePreset Offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceFrequencyRunTimePreset Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDeviceTypeRunTimePreset Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CustomEnvelope CustomEnvelope {
            get {
                return this.customEnvelopeField;
            }
            set {
                this.customEnvelopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool CustomEnvelopeOneShot {
            get {
                return this.customEnvelopeOneShotField;
            }
            set {
                this.customEnvelopeOneShotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField1;
            }
            set {
                this.typeField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceAmplitudeRunTimePreset {
        
        private float valueField;
        
        public LfoDeviceAmplitudeRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceOffsetRunTimePreset {
        
        private float valueField;
        
        public LfoDeviceOffsetRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceFrequencyRunTimePreset {
        
        private float valueField;
        
        public LfoDeviceFrequencyRunTimePreset() {
            this.valueField = ((float)(0.9375F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.9375")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceTypeRunTimePreset {
        
        private float valueField;
        
        public LfoDeviceTypeRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomEnvelope {
        
        private CustomEnvelopePlayMode playModeField;
        
        private int lengthField;
        
        private float valueQuantumField;
        
        private string[] pointsField;
        
        public CustomEnvelope() {
            this.playModeField = CustomEnvelopePlayMode.Linear;
            this.lengthField = 64;
            this.valueQuantumField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(CustomEnvelopePlayMode.Linear)]
        public CustomEnvelopePlayMode PlayMode {
            get {
                return this.playModeField;
            }
            set {
                this.playModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(64)]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float ValueQuantum {
            get {
                return this.valueQuantumField;
            }
            set {
                this.valueQuantumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Point", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CustomEnvelopePlayMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Points,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DestEffect {
        
        private float valueField;
        
        private DestEffectVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DestEffect() {
            this.valueField = ((float)(-1F));
            this.visualizationField = DestEffectVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DestEffectVisualization.Deviceonly)]
        public DestEffectVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DestEffectVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DestParameter {
        
        private float valueField;
        
        private DestParameterVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public DestParameter() {
            this.valueField = ((float)(-1F));
            this.visualizationField = DestParameterVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DestParameterVisualization.Deviceonly)]
        public DestParameterVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DestParameterVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceAmplitude {
        
        private float valueField;
        
        private LfoDeviceAmplitudeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LfoDeviceAmplitude() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = LfoDeviceAmplitudeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LfoDeviceAmplitudeVisualization.Deviceonly)]
        public LfoDeviceAmplitudeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LfoDeviceAmplitudeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceOffset {
        
        private float valueField;
        
        private LfoDeviceOffsetVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LfoDeviceOffset() {
            this.valueField = ((float)(0F));
            this.visualizationField = LfoDeviceOffsetVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LfoDeviceOffsetVisualization.Deviceonly)]
        public LfoDeviceOffsetVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LfoDeviceOffsetVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceFrequency {
        
        private float valueField;
        
        private LfoDeviceFrequencyVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LfoDeviceFrequency() {
            this.valueField = ((float)(0.9375F));
            this.visualizationField = LfoDeviceFrequencyVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.9375")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LfoDeviceFrequencyVisualization.Deviceonly)]
        public LfoDeviceFrequencyVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LfoDeviceFrequencyVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LfoDeviceType {
        
        private float valueField;
        
        private LfoDeviceTypeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LfoDeviceType() {
            this.valueField = ((float)(0F));
            this.visualizationField = LfoDeviceTypeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LfoDeviceTypeVisualization.Deviceonly)]
        public LfoDeviceTypeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LfoDeviceTypeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MidiCCDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private MidiCCDeviceRunTimePreset runTimePresetAField;
        
        private MidiCCDeviceRunTimePreset runTimePresetBField;
        
        private MidiCCDeviceControllerValue controllerValue0Field;
        
        private int controllerNumber0Field;
        
        private string controllerName0Field;
        
        private MidiCCDeviceControllerValue controllerValue1Field;
        
        private int controllerNumber1Field;
        
        private string controllerName1Field;
        
        private MidiCCDeviceControllerValue controllerValue2Field;
        
        private int controllerNumber2Field;
        
        private string controllerName2Field;
        
        private MidiCCDeviceControllerValue controllerValue3Field;
        
        private int controllerNumber3Field;
        
        private string controllerName3Field;
        
        private MidiCCDeviceControllerValue controllerValue4Field;
        
        private int controllerNumber4Field;
        
        private string controllerName4Field;
        
        private MidiCCDeviceControllerValue controllerValue5Field;
        
        private int controllerNumber5Field;
        
        private string controllerName5Field;
        
        private MidiCCDeviceControllerValue controllerValue6Field;
        
        private int controllerNumber6Field;
        
        private string controllerName6Field;
        
        private MidiCCDeviceControllerValue controllerValue7Field;
        
        private int controllerNumber7Field;
        
        private string controllerName7Field;
        
        private MidiCCDeviceControllerValue controllerValue8Field;
        
        private int controllerNumber8Field;
        
        private string controllerName8Field;
        
        private MidiCCDeviceControllerValue controllerValue9Field;
        
        private int controllerNumber9Field;
        
        private string controllerName9Field;
        
        private MidiCCDeviceControllerValue controllerValue10Field;
        
        private int controllerNumber10Field;
        
        private string controllerName10Field;
        
        private MidiCCDeviceControllerValue controllerValue11Field;
        
        private int controllerNumber11Field;
        
        private string controllerName11Field;
        
        private MidiCCDeviceControllerValue controllerValue12Field;
        
        private int controllerNumber12Field;
        
        private string controllerName12Field;
        
        private MidiCCDeviceControllerValue controllerValue13Field;
        
        private int controllerNumber13Field;
        
        private string controllerName13Field;
        
        private int linkedInstrumentField;
        
        private int visiblePagesField;
        
        private string typeField;
        
        public MidiCCDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = true;
            this.controllerNumber0Field = -1;
            this.controllerName0Field = "Untitled";
            this.controllerNumber1Field = -1;
            this.controllerName1Field = "Untitled";
            this.controllerNumber2Field = -1;
            this.controllerName2Field = "Untitled";
            this.controllerNumber3Field = -1;
            this.controllerName3Field = "Untitled";
            this.controllerNumber4Field = -1;
            this.controllerName4Field = "Untitled";
            this.controllerNumber5Field = -1;
            this.controllerName5Field = "Untitled";
            this.controllerNumber6Field = -1;
            this.controllerName6Field = "Untitled";
            this.controllerNumber7Field = -1;
            this.controllerName7Field = "Untitled";
            this.controllerNumber8Field = -1;
            this.controllerName8Field = "Untitled";
            this.controllerNumber9Field = -1;
            this.controllerName9Field = "Untitled";
            this.controllerNumber10Field = -1;
            this.controllerName10Field = "Untitled";
            this.controllerNumber11Field = -1;
            this.controllerName11Field = "Untitled";
            this.controllerNumber12Field = -1;
            this.controllerName12Field = "Untitled";
            this.controllerNumber13Field = -1;
            this.controllerName13Field = "Untitled";
            this.linkedInstrumentField = 0;
            this.visiblePagesField = 1;
            this.typeField = "MidiCCDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue0 {
            get {
                return this.controllerValue0Field;
            }
            set {
                this.controllerValue0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber0 {
            get {
                return this.controllerNumber0Field;
            }
            set {
                this.controllerNumber0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName0 {
            get {
                return this.controllerName0Field;
            }
            set {
                this.controllerName0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue1 {
            get {
                return this.controllerValue1Field;
            }
            set {
                this.controllerValue1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber1 {
            get {
                return this.controllerNumber1Field;
            }
            set {
                this.controllerNumber1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName1 {
            get {
                return this.controllerName1Field;
            }
            set {
                this.controllerName1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue2 {
            get {
                return this.controllerValue2Field;
            }
            set {
                this.controllerValue2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber2 {
            get {
                return this.controllerNumber2Field;
            }
            set {
                this.controllerNumber2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName2 {
            get {
                return this.controllerName2Field;
            }
            set {
                this.controllerName2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue3 {
            get {
                return this.controllerValue3Field;
            }
            set {
                this.controllerValue3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber3 {
            get {
                return this.controllerNumber3Field;
            }
            set {
                this.controllerNumber3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName3 {
            get {
                return this.controllerName3Field;
            }
            set {
                this.controllerName3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue4 {
            get {
                return this.controllerValue4Field;
            }
            set {
                this.controllerValue4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber4 {
            get {
                return this.controllerNumber4Field;
            }
            set {
                this.controllerNumber4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName4 {
            get {
                return this.controllerName4Field;
            }
            set {
                this.controllerName4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue5 {
            get {
                return this.controllerValue5Field;
            }
            set {
                this.controllerValue5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber5 {
            get {
                return this.controllerNumber5Field;
            }
            set {
                this.controllerNumber5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName5 {
            get {
                return this.controllerName5Field;
            }
            set {
                this.controllerName5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue6 {
            get {
                return this.controllerValue6Field;
            }
            set {
                this.controllerValue6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber6 {
            get {
                return this.controllerNumber6Field;
            }
            set {
                this.controllerNumber6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName6 {
            get {
                return this.controllerName6Field;
            }
            set {
                this.controllerName6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue7 {
            get {
                return this.controllerValue7Field;
            }
            set {
                this.controllerValue7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber7 {
            get {
                return this.controllerNumber7Field;
            }
            set {
                this.controllerNumber7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName7 {
            get {
                return this.controllerName7Field;
            }
            set {
                this.controllerName7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue8 {
            get {
                return this.controllerValue8Field;
            }
            set {
                this.controllerValue8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber8 {
            get {
                return this.controllerNumber8Field;
            }
            set {
                this.controllerNumber8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName8 {
            get {
                return this.controllerName8Field;
            }
            set {
                this.controllerName8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue9 {
            get {
                return this.controllerValue9Field;
            }
            set {
                this.controllerValue9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber9 {
            get {
                return this.controllerNumber9Field;
            }
            set {
                this.controllerNumber9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName9 {
            get {
                return this.controllerName9Field;
            }
            set {
                this.controllerName9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue10 {
            get {
                return this.controllerValue10Field;
            }
            set {
                this.controllerValue10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber10 {
            get {
                return this.controllerNumber10Field;
            }
            set {
                this.controllerNumber10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName10 {
            get {
                return this.controllerName10Field;
            }
            set {
                this.controllerName10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue11 {
            get {
                return this.controllerValue11Field;
            }
            set {
                this.controllerValue11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber11 {
            get {
                return this.controllerNumber11Field;
            }
            set {
                this.controllerNumber11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName11 {
            get {
                return this.controllerName11Field;
            }
            set {
                this.controllerName11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue12 {
            get {
                return this.controllerValue12Field;
            }
            set {
                this.controllerValue12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber12 {
            get {
                return this.controllerNumber12Field;
            }
            set {
                this.controllerNumber12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName12 {
            get {
                return this.controllerName12Field;
            }
            set {
                this.controllerName12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValue ControllerValue13 {
            get {
                return this.controllerValue13Field;
            }
            set {
                this.controllerValue13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber13 {
            get {
                return this.controllerNumber13Field;
            }
            set {
                this.controllerNumber13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName13 {
            get {
                return this.controllerName13Field;
            }
            set {
                this.controllerName13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int LinkedInstrument {
            get {
                return this.linkedInstrumentField;
            }
            set {
                this.linkedInstrumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int VisiblePages {
            get {
                return this.visiblePagesField;
            }
            set {
                this.visiblePagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MidiCCDeviceRunTimePreset {
        
        private MidiCCDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public MidiCCDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MidiCCDeviceDeviceSlotRunTimePreset {
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue0Field;
        
        private int controllerNumber0Field;
        
        private string controllerName0Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue1Field;
        
        private int controllerNumber1Field;
        
        private string controllerName1Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue2Field;
        
        private int controllerNumber2Field;
        
        private string controllerName2Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue3Field;
        
        private int controllerNumber3Field;
        
        private string controllerName3Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue4Field;
        
        private int controllerNumber4Field;
        
        private string controllerName4Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue5Field;
        
        private int controllerNumber5Field;
        
        private string controllerName5Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue6Field;
        
        private int controllerNumber6Field;
        
        private string controllerName6Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue7Field;
        
        private int controllerNumber7Field;
        
        private string controllerName7Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue8Field;
        
        private int controllerNumber8Field;
        
        private string controllerName8Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue9Field;
        
        private int controllerNumber9Field;
        
        private string controllerName9Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue10Field;
        
        private int controllerNumber10Field;
        
        private string controllerName10Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue11Field;
        
        private int controllerNumber11Field;
        
        private string controllerName11Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue12Field;
        
        private int controllerNumber12Field;
        
        private string controllerName12Field;
        
        private MidiCCDeviceControllerValueRunTimePreset controllerValue13Field;
        
        private int controllerNumber13Field;
        
        private string controllerName13Field;
        
        private int visiblePagesField;
        
        private string typeField;
        
        public MidiCCDeviceDeviceSlotRunTimePreset() {
            this.controllerNumber0Field = -1;
            this.controllerName0Field = "Untitled";
            this.controllerNumber1Field = -1;
            this.controllerName1Field = "Untitled";
            this.controllerNumber2Field = -1;
            this.controllerName2Field = "Untitled";
            this.controllerNumber3Field = -1;
            this.controllerName3Field = "Untitled";
            this.controllerNumber4Field = -1;
            this.controllerName4Field = "Untitled";
            this.controllerNumber5Field = -1;
            this.controllerName5Field = "Untitled";
            this.controllerNumber6Field = -1;
            this.controllerName6Field = "Untitled";
            this.controllerNumber7Field = -1;
            this.controllerName7Field = "Untitled";
            this.controllerNumber8Field = -1;
            this.controllerName8Field = "Untitled";
            this.controllerNumber9Field = -1;
            this.controllerName9Field = "Untitled";
            this.controllerNumber10Field = -1;
            this.controllerName10Field = "Untitled";
            this.controllerNumber11Field = -1;
            this.controllerName11Field = "Untitled";
            this.controllerNumber12Field = -1;
            this.controllerName12Field = "Untitled";
            this.controllerNumber13Field = -1;
            this.controllerName13Field = "Untitled";
            this.visiblePagesField = 1;
            this.typeField = "MidiCCDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue0 {
            get {
                return this.controllerValue0Field;
            }
            set {
                this.controllerValue0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber0 {
            get {
                return this.controllerNumber0Field;
            }
            set {
                this.controllerNumber0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName0 {
            get {
                return this.controllerName0Field;
            }
            set {
                this.controllerName0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue1 {
            get {
                return this.controllerValue1Field;
            }
            set {
                this.controllerValue1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber1 {
            get {
                return this.controllerNumber1Field;
            }
            set {
                this.controllerNumber1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName1 {
            get {
                return this.controllerName1Field;
            }
            set {
                this.controllerName1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue2 {
            get {
                return this.controllerValue2Field;
            }
            set {
                this.controllerValue2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber2 {
            get {
                return this.controllerNumber2Field;
            }
            set {
                this.controllerNumber2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName2 {
            get {
                return this.controllerName2Field;
            }
            set {
                this.controllerName2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue3 {
            get {
                return this.controllerValue3Field;
            }
            set {
                this.controllerValue3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber3 {
            get {
                return this.controllerNumber3Field;
            }
            set {
                this.controllerNumber3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName3 {
            get {
                return this.controllerName3Field;
            }
            set {
                this.controllerName3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue4 {
            get {
                return this.controllerValue4Field;
            }
            set {
                this.controllerValue4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber4 {
            get {
                return this.controllerNumber4Field;
            }
            set {
                this.controllerNumber4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName4 {
            get {
                return this.controllerName4Field;
            }
            set {
                this.controllerName4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue5 {
            get {
                return this.controllerValue5Field;
            }
            set {
                this.controllerValue5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber5 {
            get {
                return this.controllerNumber5Field;
            }
            set {
                this.controllerNumber5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName5 {
            get {
                return this.controllerName5Field;
            }
            set {
                this.controllerName5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue6 {
            get {
                return this.controllerValue6Field;
            }
            set {
                this.controllerValue6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber6 {
            get {
                return this.controllerNumber6Field;
            }
            set {
                this.controllerNumber6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName6 {
            get {
                return this.controllerName6Field;
            }
            set {
                this.controllerName6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue7 {
            get {
                return this.controllerValue7Field;
            }
            set {
                this.controllerValue7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber7 {
            get {
                return this.controllerNumber7Field;
            }
            set {
                this.controllerNumber7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName7 {
            get {
                return this.controllerName7Field;
            }
            set {
                this.controllerName7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue8 {
            get {
                return this.controllerValue8Field;
            }
            set {
                this.controllerValue8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber8 {
            get {
                return this.controllerNumber8Field;
            }
            set {
                this.controllerNumber8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName8 {
            get {
                return this.controllerName8Field;
            }
            set {
                this.controllerName8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue9 {
            get {
                return this.controllerValue9Field;
            }
            set {
                this.controllerValue9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber9 {
            get {
                return this.controllerNumber9Field;
            }
            set {
                this.controllerNumber9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName9 {
            get {
                return this.controllerName9Field;
            }
            set {
                this.controllerName9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue10 {
            get {
                return this.controllerValue10Field;
            }
            set {
                this.controllerValue10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber10 {
            get {
                return this.controllerNumber10Field;
            }
            set {
                this.controllerNumber10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName10 {
            get {
                return this.controllerName10Field;
            }
            set {
                this.controllerName10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue11 {
            get {
                return this.controllerValue11Field;
            }
            set {
                this.controllerValue11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber11 {
            get {
                return this.controllerNumber11Field;
            }
            set {
                this.controllerNumber11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName11 {
            get {
                return this.controllerName11Field;
            }
            set {
                this.controllerName11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue12 {
            get {
                return this.controllerValue12Field;
            }
            set {
                this.controllerValue12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber12 {
            get {
                return this.controllerNumber12Field;
            }
            set {
                this.controllerNumber12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName12 {
            get {
                return this.controllerName12Field;
            }
            set {
                this.controllerName12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDeviceControllerValueRunTimePreset ControllerValue13 {
            get {
                return this.controllerValue13Field;
            }
            set {
                this.controllerValue13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ControllerNumber13 {
            get {
                return this.controllerNumber13Field;
            }
            set {
                this.controllerNumber13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Untitled")]
        public string ControllerName13 {
            get {
                return this.controllerName13Field;
            }
            set {
                this.controllerName13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int VisiblePages {
            get {
                return this.visiblePagesField;
            }
            set {
                this.visiblePagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MidiCCDeviceControllerValueRunTimePreset {
        
        private float valueField;
        
        public MidiCCDeviceControllerValueRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MidiCCDeviceControllerValue {
        
        private float valueField;
        
        private MidiCCDeviceControllerValueVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public MidiCCDeviceControllerValue() {
            this.valueField = ((float)(0F));
            this.visualizationField = MidiCCDeviceControllerValueVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MidiCCDeviceControllerValueVisualization.Deviceonly)]
        public MidiCCDeviceControllerValueVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MidiCCDeviceControllerValueVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VelocityDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private VelocityDeviceRunTimePreset runTimePresetAField;
        
        private VelocityDeviceRunTimePreset runTimePresetBField;
        
        private int srcInstrumentField;
        
        private VelocityDeviceVelocityScaling velocityScalingField;
        
        private int velocityMinField;
        
        private int velocityMaxField;
        
        private DestEffect destEffectField;
        
        private DestParameter destParameterField;
        
        private VelocityDeviceDestMin destMinField;
        
        private VelocityDeviceDestMax destMaxField;
        
        private string typeField;
        
        public VelocityDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.srcInstrumentField = -1;
            this.velocityScalingField = VelocityDeviceVelocityScaling.LogSlow;
            this.velocityMinField = 0;
            this.velocityMaxField = 127;
            this.typeField = "VelocityDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int SrcInstrument {
            get {
                return this.srcInstrumentField;
            }
            set {
                this.srcInstrumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(VelocityDeviceVelocityScaling.LogSlow)]
        public VelocityDeviceVelocityScaling VelocityScaling {
            get {
                return this.velocityScalingField;
            }
            set {
                this.velocityScalingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int VelocityMin {
            get {
                return this.velocityMinField;
            }
            set {
                this.velocityMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(127)]
        public int VelocityMax {
            get {
                return this.velocityMaxField;
            }
            set {
                this.velocityMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DestEffect DestEffect {
            get {
                return this.destEffectField;
            }
            set {
                this.destEffectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DestParameter DestParameter {
            get {
                return this.destParameterField;
            }
            set {
                this.destParameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDeviceDestMin DestMin {
            get {
                return this.destMinField;
            }
            set {
                this.destMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDeviceDestMax DestMax {
            get {
                return this.destMaxField;
            }
            set {
                this.destMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VelocityDeviceRunTimePreset {
        
        private VelocityDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public VelocityDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VelocityDeviceDeviceSlotRunTimePreset {
        
        private int srcInstrumentField;
        
        private VelocityDeviceDeviceSlotRunTimePresetVelocityScaling velocityScalingField;
        
        private int velocityMinField;
        
        private int velocityMaxField;
        
        private VelocityDeviceDestMinRunTimePreset destMinField;
        
        private VelocityDeviceDestMaxRunTimePreset destMaxField;
        
        private string typeField;
        
        public VelocityDeviceDeviceSlotRunTimePreset() {
            this.srcInstrumentField = -1;
            this.velocityScalingField = VelocityDeviceDeviceSlotRunTimePresetVelocityScaling.LogSlow;
            this.velocityMinField = 0;
            this.velocityMaxField = 127;
            this.typeField = "VelocityDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int SrcInstrument {
            get {
                return this.srcInstrumentField;
            }
            set {
                this.srcInstrumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(VelocityDeviceDeviceSlotRunTimePresetVelocityScaling.LogSlow)]
        public VelocityDeviceDeviceSlotRunTimePresetVelocityScaling VelocityScaling {
            get {
                return this.velocityScalingField;
            }
            set {
                this.velocityScalingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int VelocityMin {
            get {
                return this.velocityMinField;
            }
            set {
                this.velocityMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(127)]
        public int VelocityMax {
            get {
                return this.velocityMaxField;
            }
            set {
                this.velocityMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDeviceDestMinRunTimePreset DestMin {
            get {
                return this.destMinField;
            }
            set {
                this.destMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDeviceDestMaxRunTimePreset DestMax {
            get {
                return this.destMaxField;
            }
            set {
                this.destMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum VelocityDeviceDeviceSlotRunTimePresetVelocityScaling {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
        LogFast,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
        LogSlow,
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
        ExpSlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
        ExpFast,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VelocityDeviceDestMinRunTimePreset {
        
        private float valueField;
        
        public VelocityDeviceDestMinRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VelocityDeviceDestMaxRunTimePreset {
        
        private float valueField;
        
        public VelocityDeviceDestMaxRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum VelocityDeviceVelocityScaling {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
        LogFast,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
        LogSlow,
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
        ExpSlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
        ExpFast,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VelocityDeviceDestMin {
        
        private float valueField;
        
        private VelocityDeviceDestMinVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public VelocityDeviceDestMin() {
            this.valueField = ((float)(0F));
            this.visualizationField = VelocityDeviceDestMinVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(VelocityDeviceDestMinVisualization.Deviceonly)]
        public VelocityDeviceDestMinVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum VelocityDeviceDestMinVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VelocityDeviceDestMax {
        
        private float valueField;
        
        private VelocityDeviceDestMaxVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public VelocityDeviceDestMax() {
            this.valueField = ((float)(1F));
            this.visualizationField = VelocityDeviceDestMaxVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(VelocityDeviceDestMaxVisualization.Deviceonly)]
        public VelocityDeviceDestMaxVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum VelocityDeviceDestMaxVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioPluginDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private AudioPluginDeviceRunTimePreset runTimePresetAField;
        
        private AudioPluginDeviceRunTimePreset runTimePresetBField;
        
        private int activeProgramField;
        
        private AudioPluginDevicePluginType pluginTypeField;
        
        private bool pluginTypeFieldSpecified;
        
        private string pluginIdentifierField;
        
        private string pluginDisplayNameField;
        
        private string pluginShortDisplayNameField;
        
        private string pluginEditorWindowPositionField;
        
        private AudioPluginDeviceParameterChunkType parameterChunkTypeField;
        
        private string parameterChunkField;
        
        private Parameter[] parametersField;
        
        private string typeField;
        
        public AudioPluginDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.activeProgramField = 0;
            this.pluginEditorWindowPositionField = "-1,-1";
            this.parameterChunkTypeField = AudioPluginDeviceParameterChunkType.Chunk;
            this.typeField = "AudioPluginDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ActiveProgram {
            get {
                return this.activeProgramField;
            }
            set {
                this.activeProgramField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDevicePluginType PluginType {
            get {
                return this.pluginTypeField;
            }
            set {
                this.pluginTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginTypeSpecified {
            get {
                return this.pluginTypeFieldSpecified;
            }
            set {
                this.pluginTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginIdentifier {
            get {
                return this.pluginIdentifierField;
            }
            set {
                this.pluginIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginDisplayName {
            get {
                return this.pluginDisplayNameField;
            }
            set {
                this.pluginDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginShortDisplayName {
            get {
                return this.pluginShortDisplayNameField;
            }
            set {
                this.pluginShortDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("-1,-1")]
        public string PluginEditorWindowPosition {
            get {
                return this.pluginEditorWindowPositionField;
            }
            set {
                this.pluginEditorWindowPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(AudioPluginDeviceParameterChunkType.Chunk)]
        public AudioPluginDeviceParameterChunkType ParameterChunkType {
            get {
                return this.parameterChunkTypeField;
            }
            set {
                this.parameterChunkTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterChunk {
            get {
                return this.parameterChunkField;
            }
            set {
                this.parameterChunkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Parameter[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioPluginDeviceRunTimePreset {
        
        private AudioPluginDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public AudioPluginDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioPluginDeviceDeviceSlotRunTimePreset {
        
        private int activeProgramField;
        
        private AudioPluginDeviceDeviceSlotRunTimePresetPluginType pluginTypeField;
        
        private bool pluginTypeFieldSpecified;
        
        private string pluginIdentifierField;
        
        private string pluginDisplayNameField;
        
        private string pluginShortDisplayNameField;
        
        private string pluginEditorWindowPositionField;
        
        private AudioPluginDeviceDeviceSlotRunTimePresetParameterChunkType parameterChunkTypeField;
        
        private string parameterChunkField;
        
        private Parameter[] parametersField;
        
        private string typeField;
        
        public AudioPluginDeviceDeviceSlotRunTimePreset() {
            this.activeProgramField = 0;
            this.pluginEditorWindowPositionField = "-1,-1";
            this.parameterChunkTypeField = AudioPluginDeviceDeviceSlotRunTimePresetParameterChunkType.Chunk;
            this.typeField = "AudioPluginDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ActiveProgram {
            get {
                return this.activeProgramField;
            }
            set {
                this.activeProgramField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDeviceDeviceSlotRunTimePresetPluginType PluginType {
            get {
                return this.pluginTypeField;
            }
            set {
                this.pluginTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginTypeSpecified {
            get {
                return this.pluginTypeFieldSpecified;
            }
            set {
                this.pluginTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginIdentifier {
            get {
                return this.pluginIdentifierField;
            }
            set {
                this.pluginIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginDisplayName {
            get {
                return this.pluginDisplayNameField;
            }
            set {
                this.pluginDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginShortDisplayName {
            get {
                return this.pluginShortDisplayNameField;
            }
            set {
                this.pluginShortDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("-1,-1")]
        public string PluginEditorWindowPosition {
            get {
                return this.pluginEditorWindowPositionField;
            }
            set {
                this.pluginEditorWindowPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(AudioPluginDeviceDeviceSlotRunTimePresetParameterChunkType.Chunk)]
        public AudioPluginDeviceDeviceSlotRunTimePresetParameterChunkType ParameterChunkType {
            get {
                return this.parameterChunkTypeField;
            }
            set {
                this.parameterChunkTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterChunk {
            get {
                return this.parameterChunkField;
            }
            set {
                this.parameterChunkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Parameter[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum AudioPluginDeviceDeviceSlotRunTimePresetPluginType {
        
        /// <remarks/>
        AU,
        
        /// <remarks/>
        VST,
        
        /// <remarks/>
        LADSAP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum AudioPluginDeviceDeviceSlotRunTimePresetParameterChunkType {
        
        /// <remarks/>
        Chunk,
        
        /// <remarks/>
        ParameterBag,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Parameter {
        
        private float valueField;
        
        private ParameterVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public Parameter() {
            this.valueField = ((float)(0F));
            this.visualizationField = ParameterVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ParameterVisualization.Deviceonly)]
        public ParameterVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ParameterVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum AudioPluginDevicePluginType {
        
        /// <remarks/>
        AU,
        
        /// <remarks/>
        VST,
        
        /// <remarks/>
        LADSAP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum AudioPluginDeviceParameterChunkType {
        
        /// <remarks/>
        Chunk,
        
        /// <remarks/>
        ParameterBag,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerSendTrack {
        
        private string nameField;
        
        private SequencerSendTrackState stateField;
        
        private SequencerSendTrackNoteColumnState[] noteColumnStatesField;
        
        private int numberOfVisibleNoteColumnsField;
        
        private int numberOfVisibleEffectColumnsField;
        
        private bool volumeColumnIsVisibleField;
        
        private bool panningColumnIsVisibleField;
        
        private bool delayColumnIsVisibleField;
        
        private int trackRoutingField;
        
        private float trackDelayField;
        
        private SequencerSendTrackFilterDevices filterDevicesField;
        
        private string typeField;
        
        public SequencerSendTrack() {
            this.nameField = "S01";
            this.stateField = SequencerSendTrackState.Active;
            this.numberOfVisibleNoteColumnsField = 0;
            this.numberOfVisibleEffectColumnsField = 1;
            this.volumeColumnIsVisibleField = false;
            this.panningColumnIsVisibleField = false;
            this.delayColumnIsVisibleField = false;
            this.trackRoutingField = 0;
            this.trackDelayField = ((float)(0F));
            this.typeField = "SequencerSendTrack";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("S01")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerSendTrackState.Active)]
        public SequencerSendTrackState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnState", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SequencerSendTrackNoteColumnState[] NoteColumnStates {
            get {
                return this.noteColumnStatesField;
            }
            set {
                this.noteColumnStatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int NumberOfVisibleNoteColumns {
            get {
                return this.numberOfVisibleNoteColumnsField;
            }
            set {
                this.numberOfVisibleNoteColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int NumberOfVisibleEffectColumns {
            get {
                return this.numberOfVisibleEffectColumnsField;
            }
            set {
                this.numberOfVisibleEffectColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool VolumeColumnIsVisible {
            get {
                return this.volumeColumnIsVisibleField;
            }
            set {
                this.volumeColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PanningColumnIsVisible {
            get {
                return this.panningColumnIsVisibleField;
            }
            set {
                this.panningColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DelayColumnIsVisible {
            get {
                return this.delayColumnIsVisibleField;
            }
            set {
                this.delayColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TrackRouting {
            get {
                return this.trackRoutingField;
            }
            set {
                this.trackRoutingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float TrackDelay {
            get {
                return this.trackDelayField;
            }
            set {
                this.trackDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrackFilterDevices FilterDevices {
            get {
                return this.filterDevicesField;
            }
            set {
                this.filterDevicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerSendTrackState {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Mute,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerSendTrackNoteColumnState {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Mute,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDevicePostVolume {
        
        private float valueField;
        
        private SequencerMasterTrackDevicePostVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerMasterTrackDevicePostVolume() {
            this.valueField = ((float)(1F));
            this.visualizationField = SequencerMasterTrackDevicePostVolumeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerMasterTrackDevicePostVolumeVisualization.Deviceonly)]
        public SequencerMasterTrackDevicePostVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerMasterTrackDevicePostVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDevicePostPanning {
        
        private float valueField;
        
        private SequencerMasterTrackDevicePostPanningVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerMasterTrackDevicePostPanning() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = SequencerMasterTrackDevicePostPanningVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerMasterTrackDevicePostPanningVisualization.Deviceonly)]
        public SequencerMasterTrackDevicePostPanningVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerMasterTrackDevicePostPanningVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDeviceSurround {
        
        private float valueField;
        
        private SequencerMasterTrackDeviceSurroundVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerMasterTrackDeviceSurround() {
            this.valueField = ((float)(0F));
            this.visualizationField = SequencerMasterTrackDeviceSurroundVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerMasterTrackDeviceSurroundVisualization.Deviceonly)]
        public SequencerMasterTrackDeviceSurroundVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerMasterTrackDeviceSurroundVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDeviceVolume {
        
        private float valueField;
        
        private SequencerMasterTrackDeviceVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerMasterTrackDeviceVolume() {
            this.valueField = ((float)(1F));
            this.visualizationField = SequencerMasterTrackDeviceVolumeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerMasterTrackDeviceVolumeVisualization.Deviceonly)]
        public SequencerMasterTrackDeviceVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerMasterTrackDeviceVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDevicePanning {
        
        private float valueField;
        
        private SequencerMasterTrackDevicePanningVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerMasterTrackDevicePanning() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = SequencerMasterTrackDevicePanningVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerMasterTrackDevicePanningVisualization.Deviceonly)]
        public SequencerMasterTrackDevicePanningVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerMasterTrackDevicePanningVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDevicePostVolumeRunTimePreset {
        
        private float valueField;
        
        public SequencerMasterTrackDevicePostVolumeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDevicePostPanningRunTimePreset {
        
        private float valueField;
        
        public SequencerMasterTrackDevicePostPanningRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDeviceSurroundRunTimePreset {
        
        private float valueField;
        
        public SequencerMasterTrackDeviceSurroundRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDeviceVolumeRunTimePreset {
        
        private float valueField;
        
        public SequencerMasterTrackDeviceVolumeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDevicePanningRunTimePreset {
        
        private float valueField;
        
        public SequencerMasterTrackDevicePanningRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDeviceDeviceSlotRunTimePreset {
        
        private SequencerMasterTrackDevicePanningRunTimePreset panningField;
        
        private SequencerMasterTrackDeviceVolumeRunTimePreset volumeField;
        
        private SequencerMasterTrackDeviceSurroundRunTimePreset surroundField;
        
        private SequencerMasterTrackDevicePostPanningRunTimePreset postPanningField;
        
        private SequencerMasterTrackDevicePostVolumeRunTimePreset postVolumeField;
        
        private bool autoDcCorrectionField;
        
        private bool softClippingField;
        
        private bool autoGainField;
        
        private string typeField;
        
        public SequencerMasterTrackDeviceDeviceSlotRunTimePreset() {
            this.autoDcCorrectionField = false;
            this.softClippingField = false;
            this.autoGainField = false;
            this.typeField = "SequencerMasterTrackDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDevicePanningRunTimePreset Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDeviceVolumeRunTimePreset Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDeviceSurroundRunTimePreset Surround {
            get {
                return this.surroundField;
            }
            set {
                this.surroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDevicePostPanningRunTimePreset PostPanning {
            get {
                return this.postPanningField;
            }
            set {
                this.postPanningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDevicePostVolumeRunTimePreset PostVolume {
            get {
                return this.postVolumeField;
            }
            set {
                this.postVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoDcCorrection {
            get {
                return this.autoDcCorrectionField;
            }
            set {
                this.autoDcCorrectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SoftClipping {
            get {
                return this.softClippingField;
            }
            set {
                this.softClippingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoGain {
            get {
                return this.autoGainField;
            }
            set {
                this.autoGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDeviceRunTimePreset {
        
        private SequencerMasterTrackDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public SequencerMasterTrackDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private SequencerMasterTrackDeviceRunTimePreset runTimePresetAField;
        
        private SequencerMasterTrackDeviceRunTimePreset runTimePresetBField;
        
        private SequencerMasterTrackDevicePanning panningField;
        
        private SequencerMasterTrackDeviceVolume volumeField;
        
        private SequencerMasterTrackDeviceSurround surroundField;
        
        private SequencerMasterTrackDevicePostPanning postPanningField;
        
        private SequencerMasterTrackDevicePostVolume postVolumeField;
        
        private bool autoDcCorrectionField;
        
        private bool softClippingField;
        
        private bool autoGainField;
        
        private string typeField;
        
        public SequencerMasterTrackDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.autoDcCorrectionField = false;
            this.softClippingField = false;
            this.autoGainField = false;
            this.typeField = "SequencerMasterTrackDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDevicePanning Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDeviceVolume Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDeviceSurround Surround {
            get {
                return this.surroundField;
            }
            set {
                this.surroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDevicePostPanning PostPanning {
            get {
                return this.postPanningField;
            }
            set {
                this.postPanningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDevicePostVolume PostVolume {
            get {
                return this.postVolumeField;
            }
            set {
                this.postVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoDcCorrection {
            get {
                return this.autoDcCorrectionField;
            }
            set {
                this.autoDcCorrectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SoftClipping {
            get {
                return this.softClippingField;
            }
            set {
                this.softClippingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoGain {
            get {
                return this.autoGainField;
            }
            set {
                this.autoGainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrackFilterDevices {
        
        private SequencerMasterTrackFilterDevicesDevices devicesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackFilterDevicesDevices Devices {
            get {
                return this.devicesField;
            }
            set {
                this.devicesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SequencerMasterTrackFilterDevicesDevices {
        
        private BusCompressorDevice[] busCompressorDeviceField;
        
        private ChorusDevice[] chorusDeviceField;
        
        private CompressorDevice[] compressorDeviceField;
        
        private DcOffsetDevice[] dcOffsetDeviceField;
        
        private DelayDevice[] delayDeviceField;
        
        private DistortionDeviceDistortionDevice[] distortionDeviceField;
        
        private Distortion2DeviceDistortionDevice[] distortion2DeviceField;
        
        private Eq10DeviceEqDevice[] eq10DeviceField;
        
        private Eq5DeviceEqDevice[] eq5DeviceField;
        
        private Filter1DeviceFilterDevice[] filter1DeviceField;
        
        private Filter2DeviceFilterDevice[] filter2DeviceField;
        
        private Filter3DeviceFilterDevice[] filter3DeviceField;
        
        private FlangerDevice[] flangerDeviceField;
        
        private GainerDevice[] gainerDeviceField;
        
        private GateDeviceGateDevice[] gateDeviceField;
        
        private Gate2DeviceGateDevice[] gate2DeviceField;
        
        private LofiDeviceLofiDevice[] lofiDeviceField;
        
        private Lofi2DeviceLofiDevice[] lofi2DeviceField;
        
        private SequencerMasterTrackDevice[] sequencerMasterTrackDeviceField;
        
        private MaximizerDevice[] maximizerDeviceField;
        
        private MixerEqDevice[] mixerEqDeviceField;
        
        private Reverb2DeviceReverbDevice[] reverb2DeviceField;
        
        private Reverb3DeviceReverbDevice[] reverb3DeviceField;
        
        private PhaserDevice[] phaserDeviceField;
        
        private ReverbDeviceReverbDevice[] reverbDeviceField;
        
        private RingModDevice[] ringModDeviceField;
        
        private FilterDistortionDevice[] filterDistortionDeviceField;
        
        private ShaperDevice[] shaperDeviceField;
        
        private StereoExpanderDevice[] stereoExpanderDeviceField;
        
        private PdcTestDelayDevice[] pdcTestDelayDeviceField;
        
        private InstrumentAutomationDevice[] instrumentAutomationDeviceField;
        
        private LfoDevice[] lfoDeviceField;
        
        private MidiCCDevice[] midiCCDeviceField;
        
        private VelocityDevice[] velocityDeviceField;
        
        private AudioPluginDevice[] audioPluginDeviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BusCompressorDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDevice[] BusCompressorDevice {
            get {
                return this.busCompressorDeviceField;
            }
            set {
                this.busCompressorDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChorusDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDevice[] ChorusDevice {
            get {
                return this.chorusDeviceField;
            }
            set {
                this.chorusDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CompressorDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDevice[] CompressorDevice {
            get {
                return this.compressorDeviceField;
            }
            set {
                this.compressorDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DcOffsetDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDevice[] DcOffsetDevice {
            get {
                return this.dcOffsetDeviceField;
            }
            set {
                this.dcOffsetDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DelayDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDevice[] DelayDevice {
            get {
                return this.delayDeviceField;
            }
            set {
                this.delayDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DistortionDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceDistortionDevice[] DistortionDevice {
            get {
                return this.distortionDeviceField;
            }
            set {
                this.distortionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Distortion2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDistortionDevice[] Distortion2Device {
            get {
                return this.distortion2DeviceField;
            }
            set {
                this.distortion2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Eq10Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceEqDevice[] Eq10Device {
            get {
                return this.eq10DeviceField;
            }
            set {
                this.eq10DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Eq5Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceEqDevice[] Eq5Device {
            get {
                return this.eq5DeviceField;
            }
            set {
                this.eq5DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter1Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceFilterDevice[] Filter1Device {
            get {
                return this.filter1DeviceField;
            }
            set {
                this.filter1DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceFilterDevice[] Filter2Device {
            get {
                return this.filter2DeviceField;
            }
            set {
                this.filter2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter3Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceFilterDevice[] Filter3Device {
            get {
                return this.filter3DeviceField;
            }
            set {
                this.filter3DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FlangerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDevice[] FlangerDevice {
            get {
                return this.flangerDeviceField;
            }
            set {
                this.flangerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GainerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDevice[] GainerDevice {
            get {
                return this.gainerDeviceField;
            }
            set {
                this.gainerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GateDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceGateDevice[] GateDevice {
            get {
                return this.gateDeviceField;
            }
            set {
                this.gateDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Gate2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceGateDevice[] Gate2Device {
            get {
                return this.gate2DeviceField;
            }
            set {
                this.gate2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LofiDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceLofiDevice[] LofiDevice {
            get {
                return this.lofiDeviceField;
            }
            set {
                this.lofiDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Lofi2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceLofiDevice[] Lofi2Device {
            get {
                return this.lofi2DeviceField;
            }
            set {
                this.lofi2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SequencerMasterTrackDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackDevice[] SequencerMasterTrackDevice {
            get {
                return this.sequencerMasterTrackDeviceField;
            }
            set {
                this.sequencerMasterTrackDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaximizerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDevice[] MaximizerDevice {
            get {
                return this.maximizerDeviceField;
            }
            set {
                this.maximizerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MixerEqDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDevice[] MixerEqDevice {
            get {
                return this.mixerEqDeviceField;
            }
            set {
                this.mixerEqDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reverb2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceReverbDevice[] Reverb2Device {
            get {
                return this.reverb2DeviceField;
            }
            set {
                this.reverb2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reverb3Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceReverbDevice[] Reverb3Device {
            get {
                return this.reverb3DeviceField;
            }
            set {
                this.reverb3DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PhaserDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDevice[] PhaserDevice {
            get {
                return this.phaserDeviceField;
            }
            set {
                this.phaserDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReverbDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceReverbDevice[] ReverbDevice {
            get {
                return this.reverbDeviceField;
            }
            set {
                this.reverbDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RingModDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDevice[] RingModDevice {
            get {
                return this.ringModDeviceField;
            }
            set {
                this.ringModDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FilterDistortionDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDevice[] FilterDistortionDevice {
            get {
                return this.filterDistortionDeviceField;
            }
            set {
                this.filterDistortionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ShaperDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDevice[] ShaperDevice {
            get {
                return this.shaperDeviceField;
            }
            set {
                this.shaperDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StereoExpanderDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDevice[] StereoExpanderDevice {
            get {
                return this.stereoExpanderDeviceField;
            }
            set {
                this.stereoExpanderDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PdcTestDelayDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDevice[] PdcTestDelayDevice {
            get {
                return this.pdcTestDelayDeviceField;
            }
            set {
                this.pdcTestDelayDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InstrumentAutomationDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstrumentAutomationDevice[] InstrumentAutomationDevice {
            get {
                return this.instrumentAutomationDeviceField;
            }
            set {
                this.instrumentAutomationDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LfoDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDevice[] LfoDevice {
            get {
                return this.lfoDeviceField;
            }
            set {
                this.lfoDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MidiCCDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDevice[] MidiCCDevice {
            get {
                return this.midiCCDeviceField;
            }
            set {
                this.midiCCDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("VelocityDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDevice[] VelocityDevice {
            get {
                return this.velocityDeviceField;
            }
            set {
                this.velocityDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AudioPluginDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDevice[] AudioPluginDevice {
            get {
                return this.audioPluginDeviceField;
            }
            set {
                this.audioPluginDeviceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerMasterTrack {
        
        private string nameField;
        
        private SequencerMasterTrackState stateField;
        
        private SequencerMasterTrackNoteColumnState[] noteColumnStatesField;
        
        private int numberOfVisibleNoteColumnsField;
        
        private int numberOfVisibleEffectColumnsField;
        
        private bool volumeColumnIsVisibleField;
        
        private bool panningColumnIsVisibleField;
        
        private bool delayColumnIsVisibleField;
        
        private int trackRoutingField;
        
        private float trackDelayField;
        
        private SequencerMasterTrackFilterDevices filterDevicesField;
        
        private string typeField;
        
        public SequencerMasterTrack() {
            this.nameField = "Mst";
            this.stateField = SequencerMasterTrackState.Active;
            this.numberOfVisibleNoteColumnsField = 0;
            this.numberOfVisibleEffectColumnsField = 1;
            this.volumeColumnIsVisibleField = false;
            this.panningColumnIsVisibleField = false;
            this.delayColumnIsVisibleField = false;
            this.trackRoutingField = 0;
            this.trackDelayField = ((float)(0F));
            this.typeField = "SequencerMasterTrack";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Mst")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerMasterTrackState.Active)]
        public SequencerMasterTrackState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnState", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SequencerMasterTrackNoteColumnState[] NoteColumnStates {
            get {
                return this.noteColumnStatesField;
            }
            set {
                this.noteColumnStatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int NumberOfVisibleNoteColumns {
            get {
                return this.numberOfVisibleNoteColumnsField;
            }
            set {
                this.numberOfVisibleNoteColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int NumberOfVisibleEffectColumns {
            get {
                return this.numberOfVisibleEffectColumnsField;
            }
            set {
                this.numberOfVisibleEffectColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool VolumeColumnIsVisible {
            get {
                return this.volumeColumnIsVisibleField;
            }
            set {
                this.volumeColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PanningColumnIsVisible {
            get {
                return this.panningColumnIsVisibleField;
            }
            set {
                this.panningColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DelayColumnIsVisible {
            get {
                return this.delayColumnIsVisibleField;
            }
            set {
                this.delayColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TrackRouting {
            get {
                return this.trackRoutingField;
            }
            set {
                this.trackRoutingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float TrackDelay {
            get {
                return this.trackDelayField;
            }
            set {
                this.trackDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrackFilterDevices FilterDevices {
            get {
                return this.filterDevicesField;
            }
            set {
                this.filterDevicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerMasterTrackState {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Mute,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerMasterTrackNoteColumnState {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Mute,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LineInDeviceVolume {
        
        private float valueField;
        
        private LineInDeviceVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LineInDeviceVolume() {
            this.valueField = ((float)(1F));
            this.visualizationField = LineInDeviceVolumeVisualization.MixerandDevice;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LineInDeviceVolumeVisualization.MixerandDevice)]
        public LineInDeviceVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LineInDeviceVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LineInDevicePanning {
        
        private float valueField;
        
        private LineInDevicePanningVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public LineInDevicePanning() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = LineInDevicePanningVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LineInDevicePanningVisualization.Deviceonly)]
        public LineInDevicePanningVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LineInDevicePanningVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LineInDeviceVolumeRunTimePreset {
        
        private float valueField;
        
        public LineInDeviceVolumeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LineInDevicePanningRunTimePreset {
        
        private float valueField;
        
        public LineInDevicePanningRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LineInDeviceDeviceSlotRunTimePreset {
        
        private int inputChannelField;
        
        private LineInDeviceDeviceSlotRunTimePresetInputChannelMode inputChannelModeField;
        
        private LineInDeviceDeviceSlotRunTimePresetInputLatencyMode inputLatencyModeField;
        
        private LineInDevicePanningRunTimePreset panningField;
        
        private LineInDeviceVolumeRunTimePreset volumeField;
        
        private string typeField;
        
        public LineInDeviceDeviceSlotRunTimePreset() {
            this.inputChannelField = 0;
            this.inputChannelModeField = LineInDeviceDeviceSlotRunTimePresetInputChannelMode.LR;
            this.inputLatencyModeField = LineInDeviceDeviceSlotRunTimePresetInputLatencyMode.LiveRecordingMode;
            this.typeField = "LineInDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int InputChannel {
            get {
                return this.inputChannelField;
            }
            set {
                this.inputChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LineInDeviceDeviceSlotRunTimePresetInputChannelMode.LR)]
        public LineInDeviceDeviceSlotRunTimePresetInputChannelMode InputChannelMode {
            get {
                return this.inputChannelModeField;
            }
            set {
                this.inputChannelModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LineInDeviceDeviceSlotRunTimePresetInputLatencyMode.LiveRecordingMode)]
        public LineInDeviceDeviceSlotRunTimePresetInputLatencyMode InputLatencyMode {
            get {
                return this.inputLatencyModeField;
            }
            set {
                this.inputLatencyModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDevicePanningRunTimePreset Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDeviceVolumeRunTimePreset Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LineInDeviceDeviceSlotRunTimePresetInputChannelMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LineInDeviceDeviceSlotRunTimePresetInputLatencyMode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Live Recording Mode")]
        LiveRecordingMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MIDI Return Mode")]
        MIDIReturnMode,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LineInDeviceRunTimePreset {
        
        private LineInDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public LineInDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LineInDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private LineInDeviceRunTimePreset runTimePresetAField;
        
        private LineInDeviceRunTimePreset runTimePresetBField;
        
        private int inputChannelField;
        
        private LineInDeviceInputChannelMode inputChannelModeField;
        
        private LineInDeviceInputLatencyMode inputLatencyModeField;
        
        private LineInDevicePanning panningField;
        
        private LineInDeviceVolume volumeField;
        
        private string typeField;
        
        public LineInDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.inputChannelField = 0;
            this.inputChannelModeField = LineInDeviceInputChannelMode.LR;
            this.inputLatencyModeField = LineInDeviceInputLatencyMode.LiveRecordingMode;
            this.typeField = "LineInDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int InputChannel {
            get {
                return this.inputChannelField;
            }
            set {
                this.inputChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LineInDeviceInputChannelMode.LR)]
        public LineInDeviceInputChannelMode InputChannelMode {
            get {
                return this.inputChannelModeField;
            }
            set {
                this.inputChannelModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LineInDeviceInputLatencyMode.LiveRecordingMode)]
        public LineInDeviceInputLatencyMode InputLatencyMode {
            get {
                return this.inputLatencyModeField;
            }
            set {
                this.inputLatencyModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDevicePanning Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDeviceVolume Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LineInDeviceInputChannelMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LineInDeviceInputLatencyMode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Live Recording Mode")]
        LiveRecordingMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MIDI Return Mode")]
        MIDIReturnMode,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDevicePostVolume {
        
        private float valueField;
        
        private SequencerTrackDevicePostVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerTrackDevicePostVolume() {
            this.valueField = ((float)(1F));
            this.visualizationField = SequencerTrackDevicePostVolumeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerTrackDevicePostVolumeVisualization.Deviceonly)]
        public SequencerTrackDevicePostVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerTrackDevicePostVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDevicePostPanning {
        
        private float valueField;
        
        private SequencerTrackDevicePostPanningVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerTrackDevicePostPanning() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = SequencerTrackDevicePostPanningVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerTrackDevicePostPanningVisualization.Deviceonly)]
        public SequencerTrackDevicePostPanningVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerTrackDevicePostPanningVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDeviceSurround {
        
        private float valueField;
        
        private SequencerTrackDeviceSurroundVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerTrackDeviceSurround() {
            this.valueField = ((float)(0F));
            this.visualizationField = SequencerTrackDeviceSurroundVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerTrackDeviceSurroundVisualization.Deviceonly)]
        public SequencerTrackDeviceSurroundVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerTrackDeviceSurroundVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDeviceVolume {
        
        private float valueField;
        
        private SequencerTrackDeviceVolumeVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerTrackDeviceVolume() {
            this.valueField = ((float)(1F));
            this.visualizationField = SequencerTrackDeviceVolumeVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerTrackDeviceVolumeVisualization.Deviceonly)]
        public SequencerTrackDeviceVolumeVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerTrackDeviceVolumeVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDevicePanning {
        
        private float valueField;
        
        private SequencerTrackDevicePanningVisualization visualizationField;
        
        private MidiMapping[] midiMappingsField;
        
        public SequencerTrackDevicePanning() {
            this.valueField = ((float)(0.5F));
            this.visualizationField = SequencerTrackDevicePanningVisualization.Deviceonly;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerTrackDevicePanningVisualization.Deviceonly)]
        public SequencerTrackDevicePanningVisualization Visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MidiMapping[] MidiMappings {
            get {
                return this.midiMappingsField;
            }
            set {
                this.midiMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerTrackDevicePanningVisualization {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
        DontShow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device only")]
        Deviceonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
        MixerandDevice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDevicePostVolumeRunTimePreset {
        
        private float valueField;
        
        public SequencerTrackDevicePostVolumeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDevicePostPanningRunTimePreset {
        
        private float valueField;
        
        public SequencerTrackDevicePostPanningRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDeviceSurroundRunTimePreset {
        
        private float valueField;
        
        public SequencerTrackDeviceSurroundRunTimePreset() {
            this.valueField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDeviceVolumeRunTimePreset {
        
        private float valueField;
        
        public SequencerTrackDeviceVolumeRunTimePreset() {
            this.valueField = ((float)(1F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDevicePanningRunTimePreset {
        
        private float valueField;
        
        public SequencerTrackDevicePanningRunTimePreset() {
            this.valueField = ((float)(0.5F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDeviceDeviceSlotRunTimePreset {
        
        private SequencerTrackDevicePanningRunTimePreset panningField;
        
        private SequencerTrackDeviceVolumeRunTimePreset volumeField;
        
        private SequencerTrackDeviceSurroundRunTimePreset surroundField;
        
        private SequencerTrackDevicePostPanningRunTimePreset postPanningField;
        
        private SequencerTrackDevicePostVolumeRunTimePreset postVolumeField;
        
        private string typeField;
        
        public SequencerTrackDeviceDeviceSlotRunTimePreset() {
            this.typeField = "SequencerTrackDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDevicePanningRunTimePreset Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDeviceVolumeRunTimePreset Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDeviceSurroundRunTimePreset Surround {
            get {
                return this.surroundField;
            }
            set {
                this.surroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDevicePostPanningRunTimePreset PostPanning {
            get {
                return this.postPanningField;
            }
            set {
                this.postPanningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDevicePostVolumeRunTimePreset PostVolume {
            get {
                return this.postVolumeField;
            }
            set {
                this.postVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDeviceRunTimePreset {
        
        private SequencerTrackDeviceDeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public SequencerTrackDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDeviceDeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private SequencerTrackDeviceRunTimePreset runTimePresetAField;
        
        private SequencerTrackDeviceRunTimePreset runTimePresetBField;
        
        private SequencerTrackDevicePanning panningField;
        
        private SequencerTrackDeviceVolume volumeField;
        
        private SequencerTrackDeviceSurround surroundField;
        
        private SequencerTrackDevicePostPanning postPanningField;
        
        private SequencerTrackDevicePostVolume postVolumeField;
        
        private string typeField;
        
        public SequencerTrackDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.typeField = "SequencerTrackDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDevicePanning Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDeviceVolume Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDeviceSurround Surround {
            get {
                return this.surroundField;
            }
            set {
                this.surroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDevicePostPanning PostPanning {
            get {
                return this.postPanningField;
            }
            set {
                this.postPanningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDevicePostVolume PostVolume {
            get {
                return this.postVolumeField;
            }
            set {
                this.postVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrackFilterDevices {
        
        private SequencerTrackFilterDevicesDevices devicesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackFilterDevicesDevices Devices {
            get {
                return this.devicesField;
            }
            set {
                this.devicesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SequencerTrackFilterDevicesDevices {
        
        private BusCompressorDevice[] busCompressorDeviceField;
        
        private ChorusDevice[] chorusDeviceField;
        
        private CompressorDevice[] compressorDeviceField;
        
        private DcOffsetDevice[] dcOffsetDeviceField;
        
        private DelayDevice[] delayDeviceField;
        
        private DistortionDeviceDistortionDevice[] distortionDeviceField;
        
        private Distortion2DeviceDistortionDevice[] distortion2DeviceField;
        
        private Eq10DeviceEqDevice[] eq10DeviceField;
        
        private Eq5DeviceEqDevice[] eq5DeviceField;
        
        private Filter1DeviceFilterDevice[] filter1DeviceField;
        
        private Filter2DeviceFilterDevice[] filter2DeviceField;
        
        private Filter3DeviceFilterDevice[] filter3DeviceField;
        
        private FlangerDevice[] flangerDeviceField;
        
        private GainerDevice[] gainerDeviceField;
        
        private GateDeviceGateDevice[] gateDeviceField;
        
        private Gate2DeviceGateDevice[] gate2DeviceField;
        
        private LofiDeviceLofiDevice[] lofiDeviceField;
        
        private Lofi2DeviceLofiDevice[] lofi2DeviceField;
        
        private MaximizerDevice[] maximizerDeviceField;
        
        private MixerEqDevice[] mixerEqDeviceField;
        
        private Reverb2DeviceReverbDevice[] reverb2DeviceField;
        
        private Reverb3DeviceReverbDevice[] reverb3DeviceField;
        
        private PhaserDevice[] phaserDeviceField;
        
        private ReverbDeviceReverbDevice[] reverbDeviceField;
        
        private RingModDevice[] ringModDeviceField;
        
        private FilterDistortionDevice[] filterDistortionDeviceField;
        
        private ShaperDevice[] shaperDeviceField;
        
        private StereoExpanderDevice[] stereoExpanderDeviceField;
        
        private SequencerTrackDevice[] sequencerTrackDeviceField;
        
        private LineInDevice[] lineInDeviceField;
        
        private SendDevice[] sendDeviceField;
        
        private PdcTestDelayDevice[] pdcTestDelayDeviceField;
        
        private InstrumentAutomationDevice[] instrumentAutomationDeviceField;
        
        private LfoDevice[] lfoDeviceField;
        
        private MidiCCDevice[] midiCCDeviceField;
        
        private VelocityDevice[] velocityDeviceField;
        
        private AudioPluginDevice[] audioPluginDeviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BusCompressorDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDevice[] BusCompressorDevice {
            get {
                return this.busCompressorDeviceField;
            }
            set {
                this.busCompressorDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChorusDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDevice[] ChorusDevice {
            get {
                return this.chorusDeviceField;
            }
            set {
                this.chorusDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CompressorDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDevice[] CompressorDevice {
            get {
                return this.compressorDeviceField;
            }
            set {
                this.compressorDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DcOffsetDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDevice[] DcOffsetDevice {
            get {
                return this.dcOffsetDeviceField;
            }
            set {
                this.dcOffsetDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DelayDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDevice[] DelayDevice {
            get {
                return this.delayDeviceField;
            }
            set {
                this.delayDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DistortionDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceDistortionDevice[] DistortionDevice {
            get {
                return this.distortionDeviceField;
            }
            set {
                this.distortionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Distortion2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDistortionDevice[] Distortion2Device {
            get {
                return this.distortion2DeviceField;
            }
            set {
                this.distortion2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Eq10Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceEqDevice[] Eq10Device {
            get {
                return this.eq10DeviceField;
            }
            set {
                this.eq10DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Eq5Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceEqDevice[] Eq5Device {
            get {
                return this.eq5DeviceField;
            }
            set {
                this.eq5DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter1Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceFilterDevice[] Filter1Device {
            get {
                return this.filter1DeviceField;
            }
            set {
                this.filter1DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceFilterDevice[] Filter2Device {
            get {
                return this.filter2DeviceField;
            }
            set {
                this.filter2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter3Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceFilterDevice[] Filter3Device {
            get {
                return this.filter3DeviceField;
            }
            set {
                this.filter3DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FlangerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDevice[] FlangerDevice {
            get {
                return this.flangerDeviceField;
            }
            set {
                this.flangerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GainerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDevice[] GainerDevice {
            get {
                return this.gainerDeviceField;
            }
            set {
                this.gainerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GateDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceGateDevice[] GateDevice {
            get {
                return this.gateDeviceField;
            }
            set {
                this.gateDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Gate2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceGateDevice[] Gate2Device {
            get {
                return this.gate2DeviceField;
            }
            set {
                this.gate2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LofiDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceLofiDevice[] LofiDevice {
            get {
                return this.lofiDeviceField;
            }
            set {
                this.lofiDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Lofi2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceLofiDevice[] Lofi2Device {
            get {
                return this.lofi2DeviceField;
            }
            set {
                this.lofi2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaximizerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDevice[] MaximizerDevice {
            get {
                return this.maximizerDeviceField;
            }
            set {
                this.maximizerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MixerEqDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDevice[] MixerEqDevice {
            get {
                return this.mixerEqDeviceField;
            }
            set {
                this.mixerEqDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reverb2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceReverbDevice[] Reverb2Device {
            get {
                return this.reverb2DeviceField;
            }
            set {
                this.reverb2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reverb3Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceReverbDevice[] Reverb3Device {
            get {
                return this.reverb3DeviceField;
            }
            set {
                this.reverb3DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PhaserDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDevice[] PhaserDevice {
            get {
                return this.phaserDeviceField;
            }
            set {
                this.phaserDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReverbDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceReverbDevice[] ReverbDevice {
            get {
                return this.reverbDeviceField;
            }
            set {
                this.reverbDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RingModDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDevice[] RingModDevice {
            get {
                return this.ringModDeviceField;
            }
            set {
                this.ringModDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FilterDistortionDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDevice[] FilterDistortionDevice {
            get {
                return this.filterDistortionDeviceField;
            }
            set {
                this.filterDistortionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ShaperDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDevice[] ShaperDevice {
            get {
                return this.shaperDeviceField;
            }
            set {
                this.shaperDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StereoExpanderDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDevice[] StereoExpanderDevice {
            get {
                return this.stereoExpanderDeviceField;
            }
            set {
                this.stereoExpanderDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SequencerTrackDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackDevice[] SequencerTrackDevice {
            get {
                return this.sequencerTrackDeviceField;
            }
            set {
                this.sequencerTrackDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LineInDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDevice[] LineInDevice {
            get {
                return this.lineInDeviceField;
            }
            set {
                this.lineInDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SendDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDevice[] SendDevice {
            get {
                return this.sendDeviceField;
            }
            set {
                this.sendDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PdcTestDelayDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDevice[] PdcTestDelayDevice {
            get {
                return this.pdcTestDelayDeviceField;
            }
            set {
                this.pdcTestDelayDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InstrumentAutomationDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstrumentAutomationDevice[] InstrumentAutomationDevice {
            get {
                return this.instrumentAutomationDeviceField;
            }
            set {
                this.instrumentAutomationDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LfoDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDevice[] LfoDevice {
            get {
                return this.lfoDeviceField;
            }
            set {
                this.lfoDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MidiCCDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDevice[] MidiCCDevice {
            get {
                return this.midiCCDeviceField;
            }
            set {
                this.midiCCDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("VelocityDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDevice[] VelocityDevice {
            get {
                return this.velocityDeviceField;
            }
            set {
                this.velocityDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AudioPluginDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDevice[] AudioPluginDevice {
            get {
                return this.audioPluginDeviceField;
            }
            set {
                this.audioPluginDeviceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequencerTrack {
        
        private string nameField;
        
        private SequencerTrackState stateField;
        
        private SequencerTrackNoteColumnState[] noteColumnStatesField;
        
        private int numberOfVisibleNoteColumnsField;
        
        private int numberOfVisibleEffectColumnsField;
        
        private bool volumeColumnIsVisibleField;
        
        private bool panningColumnIsVisibleField;
        
        private bool delayColumnIsVisibleField;
        
        private int trackRoutingField;
        
        private float trackDelayField;
        
        private SequencerTrackFilterDevices filterDevicesField;
        
        private string typeField;
        
        public SequencerTrack() {
            this.nameField = "Track 01";
            this.stateField = SequencerTrackState.Active;
            this.numberOfVisibleNoteColumnsField = 1;
            this.numberOfVisibleEffectColumnsField = 1;
            this.volumeColumnIsVisibleField = true;
            this.panningColumnIsVisibleField = false;
            this.delayColumnIsVisibleField = false;
            this.trackRoutingField = 0;
            this.trackDelayField = ((float)(0F));
            this.typeField = "SequencerTrack";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Track 01")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SequencerTrackState.Active)]
        public SequencerTrackState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnState", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SequencerTrackNoteColumnState[] NoteColumnStates {
            get {
                return this.noteColumnStatesField;
            }
            set {
                this.noteColumnStatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int NumberOfVisibleNoteColumns {
            get {
                return this.numberOfVisibleNoteColumnsField;
            }
            set {
                this.numberOfVisibleNoteColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int NumberOfVisibleEffectColumns {
            get {
                return this.numberOfVisibleEffectColumnsField;
            }
            set {
                this.numberOfVisibleEffectColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool VolumeColumnIsVisible {
            get {
                return this.volumeColumnIsVisibleField;
            }
            set {
                this.volumeColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PanningColumnIsVisible {
            get {
                return this.panningColumnIsVisibleField;
            }
            set {
                this.panningColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DelayColumnIsVisible {
            get {
                return this.delayColumnIsVisibleField;
            }
            set {
                this.delayColumnIsVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TrackRouting {
            get {
                return this.trackRoutingField;
            }
            set {
                this.trackRoutingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float TrackDelay {
            get {
                return this.trackDelayField;
            }
            set {
                this.trackDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrackFilterDevices FilterDevices {
            get {
                return this.filterDevicesField;
            }
            set {
                this.filterDevicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerTrackState {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Mute,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SequencerTrackNoteColumnState {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Mute,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeviceSlotRunTimePreset {
        
        private int activeProgramField;
        
        private DeviceSlotRunTimePresetPluginType pluginTypeField;
        
        private bool pluginTypeFieldSpecified;
        
        private string pluginIdentifierField;
        
        private string pluginDisplayNameField;
        
        private string pluginShortDisplayNameField;
        
        private string pluginEditorWindowPositionField;
        
        private DeviceSlotRunTimePresetParameterChunkType parameterChunkTypeField;
        
        private string parameterChunkField;
        
        private Parameter[] parametersField;
        
        private string typeField;
        
        public DeviceSlotRunTimePreset() {
            this.activeProgramField = 0;
            this.pluginEditorWindowPositionField = "-1,-1";
            this.parameterChunkTypeField = DeviceSlotRunTimePresetParameterChunkType.Chunk;
            this.typeField = "AudioPluginDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ActiveProgram {
            get {
                return this.activeProgramField;
            }
            set {
                this.activeProgramField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DeviceSlotRunTimePresetPluginType PluginType {
            get {
                return this.pluginTypeField;
            }
            set {
                this.pluginTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginTypeSpecified {
            get {
                return this.pluginTypeFieldSpecified;
            }
            set {
                this.pluginTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginIdentifier {
            get {
                return this.pluginIdentifierField;
            }
            set {
                this.pluginIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginDisplayName {
            get {
                return this.pluginDisplayNameField;
            }
            set {
                this.pluginDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginShortDisplayName {
            get {
                return this.pluginShortDisplayNameField;
            }
            set {
                this.pluginShortDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("-1,-1")]
        public string PluginEditorWindowPosition {
            get {
                return this.pluginEditorWindowPositionField;
            }
            set {
                this.pluginEditorWindowPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(DeviceSlotRunTimePresetParameterChunkType.Chunk)]
        public DeviceSlotRunTimePresetParameterChunkType ParameterChunkType {
            get {
                return this.parameterChunkTypeField;
            }
            set {
                this.parameterChunkTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterChunk {
            get {
                return this.parameterChunkField;
            }
            set {
                this.parameterChunkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Parameter[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DeviceSlotRunTimePresetPluginType {
        
        /// <remarks/>
        AU,
        
        /// <remarks/>
        VST,
        
        /// <remarks/>
        LADSAP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum DeviceSlotRunTimePresetParameterChunkType {
        
        /// <remarks/>
        Chunk,
        
        /// <remarks/>
        ParameterBag,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PluginDeviceRunTimePreset {
        
        private DeviceSlotRunTimePreset deviceSlotField;
        
        private string typeField;
        
        public PluginDeviceRunTimePreset() {
            this.typeField = "FilterDevicePreset";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DeviceSlotRunTimePreset DeviceSlot {
            get {
                return this.deviceSlotField;
            }
            set {
                this.deviceSlotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PluginDevice {
        
        private bool isActiveField;
        
        private bool isSelectedField;
        
        private string selectedPresetNameField;
        
        private bool selectedPresetIsModifiedField;
        
        private PluginDeviceRunTimePreset runTimePresetAField;
        
        private PluginDeviceRunTimePreset runTimePresetBField;
        
        private int activeProgramField;
        
        private PluginDevicePluginType pluginTypeField;
        
        private bool pluginTypeFieldSpecified;
        
        private string pluginIdentifierField;
        
        private string pluginDisplayNameField;
        
        private string pluginShortDisplayNameField;
        
        private string pluginEditorWindowPositionField;
        
        private PluginDeviceParameterChunkType parameterChunkTypeField;
        
        private string parameterChunkField;
        
        private Parameter[] parametersField;
        
        private string typeField;
        
        public PluginDevice() {
            this.isActiveField = true;
            this.isSelectedField = false;
            this.selectedPresetNameField = "Init";
            this.selectedPresetIsModifiedField = false;
            this.activeProgramField = 0;
            this.pluginEditorWindowPositionField = "-1,-1";
            this.parameterChunkTypeField = PluginDeviceParameterChunkType.Chunk;
            this.typeField = "AudioPluginDevice";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsSelected {
            get {
                return this.isSelectedField;
            }
            set {
                this.isSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Init")]
        public string SelectedPresetName {
            get {
                return this.selectedPresetNameField;
            }
            set {
                this.selectedPresetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SelectedPresetIsModified {
            get {
                return this.selectedPresetIsModifiedField;
            }
            set {
                this.selectedPresetIsModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PluginDeviceRunTimePreset RunTimePresetA {
            get {
                return this.runTimePresetAField;
            }
            set {
                this.runTimePresetAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PluginDeviceRunTimePreset RunTimePresetB {
            get {
                return this.runTimePresetBField;
            }
            set {
                this.runTimePresetBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ActiveProgram {
            get {
                return this.activeProgramField;
            }
            set {
                this.activeProgramField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PluginDevicePluginType PluginType {
            get {
                return this.pluginTypeField;
            }
            set {
                this.pluginTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginTypeSpecified {
            get {
                return this.pluginTypeFieldSpecified;
            }
            set {
                this.pluginTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginIdentifier {
            get {
                return this.pluginIdentifierField;
            }
            set {
                this.pluginIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginDisplayName {
            get {
                return this.pluginDisplayNameField;
            }
            set {
                this.pluginDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PluginShortDisplayName {
            get {
                return this.pluginShortDisplayNameField;
            }
            set {
                this.pluginShortDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("-1,-1")]
        public string PluginEditorWindowPosition {
            get {
                return this.pluginEditorWindowPositionField;
            }
            set {
                this.pluginEditorWindowPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PluginDeviceParameterChunkType.Chunk)]
        public PluginDeviceParameterChunkType ParameterChunkType {
            get {
                return this.parameterChunkTypeField;
            }
            set {
                this.parameterChunkTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterChunk {
            get {
                return this.parameterChunkField;
            }
            set {
                this.parameterChunkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Parameter[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PluginDevicePluginType {
        
        /// <remarks/>
        AU,
        
        /// <remarks/>
        VST,
        
        /// <remarks/>
        LADSAP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PluginDeviceParameterChunkType {
        
        /// <remarks/>
        Chunk,
        
        /// <remarks/>
        ParameterBag,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutputRouting {
        
        private bool enabledField;
        
        private string nameField;
        
        private OutputRoutingMixMode mixModeField;
        
        private bool autoAssignField;
        
        private int assignedTrackField;
        
        public OutputRouting() {
            this.enabledField = true;
            this.nameField = "Bus #01";
            this.mixModeField = OutputRoutingMixMode.LR;
            this.autoAssignField = true;
            this.assignedTrackField = -1;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Bus #01")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(OutputRoutingMixMode.LR)]
        public OutputRoutingMixMode MixMode {
            get {
                return this.mixModeField;
            }
            set {
                this.mixModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool AutoAssign {
            get {
                return this.autoAssignField;
            }
            set {
                this.autoAssignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int AssignedTrack {
            get {
                return this.assignedTrackField;
            }
            set {
                this.assignedTrackField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum OutputRoutingMixMode {
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L+R")]
        LR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PluginProperties {
        
        private sbyte channelField;
        
        private int baseNoteField;
        
        private float volumeField;
        
        private OutputRouting[] outputRoutingsField;
        
        private bool autoSuspendField;
        
        private int aliasInstrumentIndexField;
        
        private string aliasFxIndicesField;
        
        private PluginDevice pluginDeviceField;
        
        public PluginProperties() {
            this.channelField = ((sbyte)(1));
            this.baseNoteField = 48;
            this.volumeField = ((float)(1F));
            this.autoSuspendField = true;
            this.aliasInstrumentIndexField = -1;
            this.aliasFxIndicesField = "-1,-1";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "1")]
        public sbyte Channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(48)]
        public int BaseNote {
            get {
                return this.baseNoteField;
            }
            set {
                this.baseNoteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public OutputRouting[] OutputRoutings {
            get {
                return this.outputRoutingsField;
            }
            set {
                this.outputRoutingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool AutoSuspend {
            get {
                return this.autoSuspendField;
            }
            set {
                this.autoSuspendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int AliasInstrumentIndex {
            get {
                return this.aliasInstrumentIndexField;
            }
            set {
                this.aliasInstrumentIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("-1,-1")]
        public string AliasFxIndices {
            get {
                return this.aliasFxIndicesField;
            }
            set {
                this.aliasFxIndicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PluginDevice PluginDevice {
            get {
                return this.pluginDeviceField;
            }
            set {
                this.pluginDeviceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MidiProperties {
        
        private bool isActiveField;
        
        private sbyte channelField;
        
        private string deviceNameField;
        
        private MidiPropertiesInstrumentType instrumentTypeField;
        
        private int delayField;
        
        private int programField;
        
        private int bankField;
        
        private int baseNoteField;
        
        private int lengthField;
        
        public MidiProperties() {
            this.isActiveField = false;
            this.channelField = ((sbyte)(1));
            this.instrumentTypeField = MidiPropertiesInstrumentType.extMIDI;
            this.delayField = 0;
            this.programField = -1;
            this.bankField = -1;
            this.baseNoteField = 48;
            this.lengthField = 8000;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "1")]
        public sbyte Channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DeviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(MidiPropertiesInstrumentType.extMIDI)]
        public MidiPropertiesInstrumentType InstrumentType {
            get {
                return this.instrumentTypeField;
            }
            set {
                this.instrumentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int Program {
            get {
                return this.programField;
            }
            set {
                this.programField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int Bank {
            get {
                return this.bankField;
            }
            set {
                this.bankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(48)]
        public int BaseNote {
            get {
                return this.baseNoteField;
            }
            set {
                this.baseNoteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(8000)]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MidiPropertiesInstrumentType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ext. MIDI")]
        extMIDI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("LineIn Ret")]
        LineInRet,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResonanceNodes {
        
        private ResonanceNodesPlayMode playModeField;
        
        private int lengthField;
        
        private float valueQuantumField;
        
        private string[] pointsField;
        
        public ResonanceNodes() {
            this.playModeField = ResonanceNodesPlayMode.Curve;
            this.lengthField = 72;
            this.valueQuantumField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(ResonanceNodesPlayMode.Curve)]
        public ResonanceNodesPlayMode PlayMode {
            get {
                return this.playModeField;
            }
            set {
                this.playModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(72)]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float ValueQuantum {
            get {
                return this.valueQuantumField;
            }
            set {
                this.valueQuantumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Point", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ResonanceNodesPlayMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Points,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnvelopesResonance {
        
        private bool isActiveField;
        
        private EnvelopesResonanceInterpolationMode interpolationModeField;
        
        private bool sustainIsActiveField;
        
        private int sustainPosField;
        
        private int loopStartField;
        
        private int loopEndField;
        
        private EnvelopesResonanceLoopMode loopModeField;
        
        private int decayField;
        
        private ResonanceNodes nodesField;
        
        private Lfo lfoField;
        
        private AutoAmp autoAmpField;
        
        public EnvelopesResonance() {
            this.isActiveField = false;
            this.interpolationModeField = EnvelopesResonanceInterpolationMode.Curve;
            this.sustainIsActiveField = false;
            this.sustainPosField = 0;
            this.loopStartField = 0;
            this.loopEndField = 71;
            this.loopModeField = EnvelopesResonanceLoopMode.Off;
            this.decayField = 128;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopesResonanceInterpolationMode.Curve)]
        public EnvelopesResonanceInterpolationMode InterpolationMode {
            get {
                return this.interpolationModeField;
            }
            set {
                this.interpolationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SustainIsActive {
            get {
                return this.sustainIsActiveField;
            }
            set {
                this.sustainIsActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SustainPos {
            get {
                return this.sustainPosField;
            }
            set {
                this.sustainPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int LoopStart {
            get {
                return this.loopStartField;
            }
            set {
                this.loopStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(71)]
        public int LoopEnd {
            get {
                return this.loopEndField;
            }
            set {
                this.loopEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopesResonanceLoopMode.Off)]
        public EnvelopesResonanceLoopMode LoopMode {
            get {
                return this.loopModeField;
            }
            set {
                this.loopModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(128)]
        public int Decay {
            get {
                return this.decayField;
            }
            set {
                this.decayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResonanceNodes Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lfo Lfo {
            get {
                return this.lfoField;
            }
            set {
                this.lfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AutoAmp AutoAmp {
            get {
                return this.autoAmpField;
            }
            set {
                this.autoAmpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopesResonanceInterpolationMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopesResonanceLoopMode {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Forward,
        
        /// <remarks/>
        Backward,
        
        /// <remarks/>
        PingPong,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lfo {
        
        private LfoMode modeField;
        
        private int frequencyField;
        
        private int amplitudeField;
        
        private int dephaseField;
        
        public Lfo() {
            this.modeField = LfoMode.Off;
            this.frequencyField = 3;
            this.amplitudeField = 27;
            this.dephaseField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(LfoMode.Off)]
        public LfoMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(3)]
        public int Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(27)]
        public int Amplitude {
            get {
                return this.amplitudeField;
            }
            set {
                this.amplitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Dephase {
            get {
                return this.dephaseField;
            }
            set {
                this.dephaseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LfoMode {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Sin,
        
        /// <remarks/>
        Saw,
        
        /// <remarks/>
        Pulse,
        
        /// <remarks/>
        Random,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoAmp {
        
        private bool isActiveField;
        
        private int attackField;
        
        private int releaseField;
        
        private int amountField;
        
        public AutoAmp() {
            this.isActiveField = false;
            this.attackField = 100;
            this.releaseField = 70;
            this.amountField = 60;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(100)]
        public int Attack {
            get {
                return this.attackField;
            }
            set {
                this.attackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(70)]
        public int Release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(60)]
        public int Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CutoffNodes {
        
        private CutoffNodesPlayMode playModeField;
        
        private int lengthField;
        
        private float valueQuantumField;
        
        private string[] pointsField;
        
        public CutoffNodes() {
            this.playModeField = CutoffNodesPlayMode.Curve;
            this.lengthField = 72;
            this.valueQuantumField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(CutoffNodesPlayMode.Curve)]
        public CutoffNodesPlayMode PlayMode {
            get {
                return this.playModeField;
            }
            set {
                this.playModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(72)]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float ValueQuantum {
            get {
                return this.valueQuantumField;
            }
            set {
                this.valueQuantumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Point", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CutoffNodesPlayMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Points,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnvelopesCutoff {
        
        private bool isActiveField;
        
        private EnvelopesCutoffInterpolationMode interpolationModeField;
        
        private bool sustainIsActiveField;
        
        private int sustainPosField;
        
        private int loopStartField;
        
        private int loopEndField;
        
        private EnvelopesCutoffLoopMode loopModeField;
        
        private int decayField;
        
        private CutoffNodes nodesField;
        
        private Lfo lfoField;
        
        private AutoAmp autoAmpField;
        
        public EnvelopesCutoff() {
            this.isActiveField = false;
            this.interpolationModeField = EnvelopesCutoffInterpolationMode.Curve;
            this.sustainIsActiveField = false;
            this.sustainPosField = 0;
            this.loopStartField = 0;
            this.loopEndField = 71;
            this.loopModeField = EnvelopesCutoffLoopMode.Off;
            this.decayField = 128;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopesCutoffInterpolationMode.Curve)]
        public EnvelopesCutoffInterpolationMode InterpolationMode {
            get {
                return this.interpolationModeField;
            }
            set {
                this.interpolationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SustainIsActive {
            get {
                return this.sustainIsActiveField;
            }
            set {
                this.sustainIsActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SustainPos {
            get {
                return this.sustainPosField;
            }
            set {
                this.sustainPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int LoopStart {
            get {
                return this.loopStartField;
            }
            set {
                this.loopStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(71)]
        public int LoopEnd {
            get {
                return this.loopEndField;
            }
            set {
                this.loopEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopesCutoffLoopMode.Off)]
        public EnvelopesCutoffLoopMode LoopMode {
            get {
                return this.loopModeField;
            }
            set {
                this.loopModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(128)]
        public int Decay {
            get {
                return this.decayField;
            }
            set {
                this.decayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CutoffNodes Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lfo Lfo {
            get {
                return this.lfoField;
            }
            set {
                this.lfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AutoAmp AutoAmp {
            get {
                return this.autoAmpField;
            }
            set {
                this.autoAmpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopesCutoffInterpolationMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopesCutoffLoopMode {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Forward,
        
        /// <remarks/>
        Backward,
        
        /// <remarks/>
        PingPong,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PitchNodes {
        
        private PitchNodesPlayMode playModeField;
        
        private int lengthField;
        
        private float valueQuantumField;
        
        private string[] pointsField;
        
        public PitchNodes() {
            this.playModeField = PitchNodesPlayMode.Curve;
            this.lengthField = 72;
            this.valueQuantumField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PitchNodesPlayMode.Curve)]
        public PitchNodesPlayMode PlayMode {
            get {
                return this.playModeField;
            }
            set {
                this.playModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(72)]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float ValueQuantum {
            get {
                return this.valueQuantumField;
            }
            set {
                this.valueQuantumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Point", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PitchNodesPlayMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Points,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Pitch {
        
        private bool isActiveField;
        
        private PitchInterpolationMode interpolationModeField;
        
        private bool sustainIsActiveField;
        
        private int sustainPosField;
        
        private int loopStartField;
        
        private int loopEndField;
        
        private PitchLoopMode loopModeField;
        
        private int decayField;
        
        private PitchNodes nodesField;
        
        private Lfo lfo1Field;
        
        private Lfo lfo2Field;
        
        public Pitch() {
            this.isActiveField = false;
            this.interpolationModeField = PitchInterpolationMode.Curve;
            this.sustainIsActiveField = false;
            this.sustainPosField = 0;
            this.loopStartField = 0;
            this.loopEndField = 71;
            this.loopModeField = PitchLoopMode.Off;
            this.decayField = 128;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PitchInterpolationMode.Curve)]
        public PitchInterpolationMode InterpolationMode {
            get {
                return this.interpolationModeField;
            }
            set {
                this.interpolationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SustainIsActive {
            get {
                return this.sustainIsActiveField;
            }
            set {
                this.sustainIsActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SustainPos {
            get {
                return this.sustainPosField;
            }
            set {
                this.sustainPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int LoopStart {
            get {
                return this.loopStartField;
            }
            set {
                this.loopStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(71)]
        public int LoopEnd {
            get {
                return this.loopEndField;
            }
            set {
                this.loopEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PitchLoopMode.Off)]
        public PitchLoopMode LoopMode {
            get {
                return this.loopModeField;
            }
            set {
                this.loopModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(128)]
        public int Decay {
            get {
                return this.decayField;
            }
            set {
                this.decayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PitchNodes Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lfo Lfo1 {
            get {
                return this.lfo1Field;
            }
            set {
                this.lfo1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lfo Lfo2 {
            get {
                return this.lfo2Field;
            }
            set {
                this.lfo2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PitchInterpolationMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PitchLoopMode {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Forward,
        
        /// <remarks/>
        Backward,
        
        /// <remarks/>
        PingPong,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PanNodes {
        
        private PanNodesPlayMode playModeField;
        
        private int lengthField;
        
        private float valueQuantumField;
        
        private string[] pointsField;
        
        public PanNodes() {
            this.playModeField = PanNodesPlayMode.Curve;
            this.lengthField = 72;
            this.valueQuantumField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(PanNodesPlayMode.Curve)]
        public PanNodesPlayMode PlayMode {
            get {
                return this.playModeField;
            }
            set {
                this.playModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(72)]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float ValueQuantum {
            get {
                return this.valueQuantumField;
            }
            set {
                this.valueQuantumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Point", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum PanNodesPlayMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Points,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnvelopesPan {
        
        private bool isActiveField;
        
        private EnvelopesPanInterpolationMode interpolationModeField;
        
        private bool sustainIsActiveField;
        
        private int sustainPosField;
        
        private int loopStartField;
        
        private int loopEndField;
        
        private EnvelopesPanLoopMode loopModeField;
        
        private int decayField;
        
        private PanNodes nodesField;
        
        private Lfo lfo1Field;
        
        private Lfo lfo2Field;
        
        public EnvelopesPan() {
            this.isActiveField = false;
            this.interpolationModeField = EnvelopesPanInterpolationMode.Curve;
            this.sustainIsActiveField = false;
            this.sustainPosField = 0;
            this.loopStartField = 0;
            this.loopEndField = 71;
            this.loopModeField = EnvelopesPanLoopMode.Off;
            this.decayField = 128;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopesPanInterpolationMode.Curve)]
        public EnvelopesPanInterpolationMode InterpolationMode {
            get {
                return this.interpolationModeField;
            }
            set {
                this.interpolationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SustainIsActive {
            get {
                return this.sustainIsActiveField;
            }
            set {
                this.sustainIsActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SustainPos {
            get {
                return this.sustainPosField;
            }
            set {
                this.sustainPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int LoopStart {
            get {
                return this.loopStartField;
            }
            set {
                this.loopStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(71)]
        public int LoopEnd {
            get {
                return this.loopEndField;
            }
            set {
                this.loopEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopesPanLoopMode.Off)]
        public EnvelopesPanLoopMode LoopMode {
            get {
                return this.loopModeField;
            }
            set {
                this.loopModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(128)]
        public int Decay {
            get {
                return this.decayField;
            }
            set {
                this.decayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PanNodes Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lfo Lfo1 {
            get {
                return this.lfo1Field;
            }
            set {
                this.lfo1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lfo Lfo2 {
            get {
                return this.lfo2Field;
            }
            set {
                this.lfo2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopesPanInterpolationMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopesPanLoopMode {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Forward,
        
        /// <remarks/>
        Backward,
        
        /// <remarks/>
        PingPong,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VolumeNodes {
        
        private VolumeNodesPlayMode playModeField;
        
        private int lengthField;
        
        private float valueQuantumField;
        
        private string[] pointsField;
        
        public VolumeNodes() {
            this.playModeField = VolumeNodesPlayMode.Curve;
            this.lengthField = 72;
            this.valueQuantumField = ((float)(0F));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(VolumeNodesPlayMode.Curve)]
        public VolumeNodesPlayMode PlayMode {
            get {
                return this.playModeField;
            }
            set {
                this.playModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(72)]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float ValueQuantum {
            get {
                return this.valueQuantumField;
            }
            set {
                this.valueQuantumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Point", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum VolumeNodesPlayMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Points,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnvelopesVolume {
        
        private bool isActiveField;
        
        private EnvelopesVolumeInterpolationMode interpolationModeField;
        
        private bool sustainIsActiveField;
        
        private int sustainPosField;
        
        private int loopStartField;
        
        private int loopEndField;
        
        private EnvelopesVolumeLoopMode loopModeField;
        
        private int decayField;
        
        private VolumeNodes nodesField;
        
        private Lfo lfo1Field;
        
        private Lfo lfo2Field;
        
        public EnvelopesVolume() {
            this.isActiveField = false;
            this.interpolationModeField = EnvelopesVolumeInterpolationMode.Curve;
            this.sustainIsActiveField = false;
            this.sustainPosField = 0;
            this.loopStartField = 0;
            this.loopEndField = 71;
            this.loopModeField = EnvelopesVolumeLoopMode.Off;
            this.decayField = 128;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopesVolumeInterpolationMode.Curve)]
        public EnvelopesVolumeInterpolationMode InterpolationMode {
            get {
                return this.interpolationModeField;
            }
            set {
                this.interpolationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SustainIsActive {
            get {
                return this.sustainIsActiveField;
            }
            set {
                this.sustainIsActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SustainPos {
            get {
                return this.sustainPosField;
            }
            set {
                this.sustainPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int LoopStart {
            get {
                return this.loopStartField;
            }
            set {
                this.loopStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(71)]
        public int LoopEnd {
            get {
                return this.loopEndField;
            }
            set {
                this.loopEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(EnvelopesVolumeLoopMode.Off)]
        public EnvelopesVolumeLoopMode LoopMode {
            get {
                return this.loopModeField;
            }
            set {
                this.loopModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(128)]
        public int Decay {
            get {
                return this.decayField;
            }
            set {
                this.decayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VolumeNodes Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lfo Lfo1 {
            get {
                return this.lfo1Field;
            }
            set {
                this.lfo1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lfo Lfo2 {
            get {
                return this.lfo2Field;
            }
            set {
                this.lfo2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopesVolumeInterpolationMode {
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Curve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum EnvelopesVolumeLoopMode {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Forward,
        
        /// <remarks/>
        Backward,
        
        /// <remarks/>
        PingPong,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Envelopes {
        
        private EnvelopesVolume volumeField;
        
        private EnvelopesPan panField;
        
        private Pitch pitchField;
        
        private int filterTypeField;
        
        private EnvelopesCutoff cutoffField;
        
        private EnvelopesResonance resonanceField;
        
        public Envelopes() {
            this.filterTypeField = 3;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EnvelopesVolume Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EnvelopesPan Pan {
            get {
                return this.panField;
            }
            set {
                this.panField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Pitch Pitch {
            get {
                return this.pitchField;
            }
            set {
                this.pitchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(3)]
        public int FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EnvelopesCutoff Cutoff {
            get {
                return this.cutoffField;
            }
            set {
                this.cutoffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EnvelopesResonance Resonance {
            get {
                return this.resonanceField;
            }
            set {
                this.resonanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sample {
        
        private string nameField;
        
        private string fileNameField;
        
        private System.DateTime fileModificationDateField;
        
        private bool fileModificationDateFieldSpecified;
        
        private System.DateTime fileModificationDayTimeField;
        
        private bool fileModificationDayTimeFieldSpecified;
        
        private float volumeField;
        
        private float panningField;
        
        private sbyte finetuneField;
        
        private sbyte baseNoteField;
        
        private bool beatSyncIsActiveField;
        
        private short beatSyncLinesField;
        
        private SampleNewNoteAction newNoteActionField;
        
        private SampleInterpolationMode interpolationModeField;
        
        private SampleLoopMode loopModeField;
        
        private uint loopStartField;
        
        private uint loopEndField;
        
        public Sample() {
            this.volumeField = ((float)(1F));
            this.panningField = ((float)(0.5F));
            this.finetuneField = ((sbyte)(0));
            this.baseNoteField = ((sbyte)(48));
            this.beatSyncIsActiveField = false;
            this.beatSyncLinesField = ((short)(16));
            this.newNoteActionField = SampleNewNoteAction.Cut;
            this.interpolationModeField = SampleInterpolationMode.Cubic;
            this.loopModeField = SampleLoopMode.Off;
            this.loopStartField = ((uint)(0));
            this.loopEndField = ((uint)(0));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime FileModificationDate {
            get {
                return this.fileModificationDateField;
            }
            set {
                this.fileModificationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileModificationDateSpecified {
            get {
                return this.fileModificationDateFieldSpecified;
            }
            set {
                this.fileModificationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="time")]
        public System.DateTime FileModificationDayTime {
            get {
                return this.fileModificationDayTimeField;
            }
            set {
                this.fileModificationDayTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileModificationDayTimeSpecified {
            get {
                return this.fileModificationDayTimeFieldSpecified;
            }
            set {
                this.fileModificationDayTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
        public float Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
        public float Panning {
            get {
                return this.panningField;
            }
            set {
                this.panningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "0")]
        public sbyte Finetune {
            get {
                return this.finetuneField;
            }
            set {
                this.finetuneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "48")]
        public sbyte BaseNote {
            get {
                return this.baseNoteField;
            }
            set {
                this.baseNoteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BeatSyncIsActive {
            get {
                return this.beatSyncIsActiveField;
            }
            set {
                this.beatSyncIsActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(short), "16")]
        public short BeatSyncLines {
            get {
                return this.beatSyncLinesField;
            }
            set {
                this.beatSyncLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SampleNewNoteAction.Cut)]
        public SampleNewNoteAction NewNoteAction {
            get {
                return this.newNoteActionField;
            }
            set {
                this.newNoteActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SampleInterpolationMode.Cubic)]
        public SampleInterpolationMode InterpolationMode {
            get {
                return this.interpolationModeField;
            }
            set {
                this.interpolationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(SampleLoopMode.Off)]
        public SampleLoopMode LoopMode {
            get {
                return this.loopModeField;
            }
            set {
                this.loopModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint LoopStart {
            get {
                return this.loopStartField;
            }
            set {
                this.loopStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint LoopEnd {
            get {
                return this.loopEndField;
            }
            set {
                this.loopEndField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SampleNewNoteAction {
        
        /// <remarks/>
        Cut,
        
        /// <remarks/>
        NoteOff,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SampleInterpolationMode {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Cubic,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum SampleLoopMode {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Forward,
        
        /// <remarks/>
        Backward,
        
        /// <remarks/>
        PingPong,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RenoiseInstrument))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Instrument {
        
        private string nameField;
        
        private int[] splitMapField;
        
        private int copyIntoNewSampleNameCounterField;
        
        private int copyIntoNewInstrumentNameCounterField;
        
        private Sample[] samplesField;
        
        private Envelopes envelopesField;
        
        private MidiProperties midiPropertiesField;
        
        private PluginProperties pluginPropertiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Split", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public int[] SplitMap {
            get {
                return this.splitMapField;
            }
            set {
                this.splitMapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int CopyIntoNewSampleNameCounter {
            get {
                return this.copyIntoNewSampleNameCounterField;
            }
            set {
                this.copyIntoNewSampleNameCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int CopyIntoNewInstrumentNameCounter {
            get {
                return this.copyIntoNewInstrumentNameCounterField;
            }
            set {
                this.copyIntoNewInstrumentNameCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public Sample[] Samples {
            get {
                return this.samplesField;
            }
            set {
                this.samplesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Envelopes Envelopes {
            get {
                return this.envelopesField;
            }
            set {
                this.envelopesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiProperties MidiProperties {
            get {
                return this.midiPropertiesField;
            }
            set {
                this.midiPropertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PluginProperties PluginProperties {
            get {
                return this.pluginPropertiesField;
            }
            set {
                this.pluginPropertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordManager {
        
        private int linkedTrackIndexField;
        
        public RecordManager() {
            this.linkedTrackIndexField = -1;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int LinkedTrackIndex {
            get {
                return this.linkedTrackIndexField;
            }
            set {
                this.linkedTrackIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SongBaseTracks {
        
        private SequencerTrack[] sequencerTrackField;
        
        private SequencerMasterTrack[] sequencerMasterTrackField;
        
        private SequencerSendTrack[] sequencerSendTrackField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SequencerTrack", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerTrack[] SequencerTrack {
            get {
                return this.sequencerTrackField;
            }
            set {
                this.sequencerTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SequencerMasterTrack", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerMasterTrack[] SequencerMasterTrack {
            get {
                return this.sequencerMasterTrackField;
            }
            set {
                this.sequencerMasterTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SequencerSendTrack", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SequencerSendTrack[] SequencerSendTrack {
            get {
                return this.sequencerSendTrackField;
            }
            set {
                this.sequencerSendTrackField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class RenoiseInstrument : Instrument {
        
        private int doc_versionField;
        
        public RenoiseInstrument() {
            this.doc_versionField = 7;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int doc_version {
            get {
                return this.doc_versionField;
            }
            set {
                this.doc_versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class RenoiseDeviceChain {
        
        private RenoiseDeviceChainDevices devicesField;
        
        private int doc_versionField;
        
        public RenoiseDeviceChain() {
            this.doc_versionField = 7;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RenoiseDeviceChainDevices Devices {
            get {
                return this.devicesField;
            }
            set {
                this.devicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int doc_version {
            get {
                return this.doc_versionField;
            }
            set {
                this.doc_versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XsdRenoiseParser", "1.0.1.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class RenoiseDeviceChainDevices {
        
        private BusCompressorDevice[] busCompressorDeviceField;
        
        private ChorusDevice[] chorusDeviceField;
        
        private CompressorDevice[] compressorDeviceField;
        
        private DcOffsetDevice[] dcOffsetDeviceField;
        
        private DelayDevice[] delayDeviceField;
        
        private DistortionDeviceDistortionDevice[] distortionDeviceField;
        
        private Distortion2DeviceDistortionDevice[] distortion2DeviceField;
        
        private Eq10DeviceEqDevice[] eq10DeviceField;
        
        private Eq5DeviceEqDevice[] eq5DeviceField;
        
        private Filter1DeviceFilterDevice[] filter1DeviceField;
        
        private Filter2DeviceFilterDevice[] filter2DeviceField;
        
        private Filter3DeviceFilterDevice[] filter3DeviceField;
        
        private FlangerDevice[] flangerDeviceField;
        
        private GainerDevice[] gainerDeviceField;
        
        private GateDeviceGateDevice[] gateDeviceField;
        
        private Gate2DeviceGateDevice[] gate2DeviceField;
        
        private LofiDeviceLofiDevice[] lofiDeviceField;
        
        private Lofi2DeviceLofiDevice[] lofi2DeviceField;
        
        private MaximizerDevice[] maximizerDeviceField;
        
        private MixerEqDevice[] mixerEqDeviceField;
        
        private Reverb2DeviceReverbDevice[] reverb2DeviceField;
        
        private Reverb3DeviceReverbDevice[] reverb3DeviceField;
        
        private PhaserDevice[] phaserDeviceField;
        
        private ReverbDeviceReverbDevice[] reverbDeviceField;
        
        private RingModDevice[] ringModDeviceField;
        
        private FilterDistortionDevice[] filterDistortionDeviceField;
        
        private ShaperDevice[] shaperDeviceField;
        
        private StereoExpanderDevice[] stereoExpanderDeviceField;
        
        private LineInDevice[] lineInDeviceField;
        
        private SendDevice[] sendDeviceField;
        
        private PdcTestDelayDevice[] pdcTestDelayDeviceField;
        
        private InstrumentAutomationDevice[] instrumentAutomationDeviceField;
        
        private LfoDevice[] lfoDeviceField;
        
        private MidiCCDevice[] midiCCDeviceField;
        
        private VelocityDevice[] velocityDeviceField;
        
        private AudioPluginDevice[] audioPluginDeviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BusCompressorDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BusCompressorDevice[] BusCompressorDevice {
            get {
                return this.busCompressorDeviceField;
            }
            set {
                this.busCompressorDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChorusDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ChorusDevice[] ChorusDevice {
            get {
                return this.chorusDeviceField;
            }
            set {
                this.chorusDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CompressorDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CompressorDevice[] CompressorDevice {
            get {
                return this.compressorDeviceField;
            }
            set {
                this.compressorDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DcOffsetDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DcOffsetDevice[] DcOffsetDevice {
            get {
                return this.dcOffsetDeviceField;
            }
            set {
                this.dcOffsetDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DelayDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DelayDevice[] DelayDevice {
            get {
                return this.delayDeviceField;
            }
            set {
                this.delayDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DistortionDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DistortionDeviceDistortionDevice[] DistortionDevice {
            get {
                return this.distortionDeviceField;
            }
            set {
                this.distortionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Distortion2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Distortion2DeviceDistortionDevice[] Distortion2Device {
            get {
                return this.distortion2DeviceField;
            }
            set {
                this.distortion2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Eq10Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq10DeviceEqDevice[] Eq10Device {
            get {
                return this.eq10DeviceField;
            }
            set {
                this.eq10DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Eq5Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Eq5DeviceEqDevice[] Eq5Device {
            get {
                return this.eq5DeviceField;
            }
            set {
                this.eq5DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter1Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter1DeviceFilterDevice[] Filter1Device {
            get {
                return this.filter1DeviceField;
            }
            set {
                this.filter1DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter2DeviceFilterDevice[] Filter2Device {
            get {
                return this.filter2DeviceField;
            }
            set {
                this.filter2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter3Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Filter3DeviceFilterDevice[] Filter3Device {
            get {
                return this.filter3DeviceField;
            }
            set {
                this.filter3DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FlangerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FlangerDevice[] FlangerDevice {
            get {
                return this.flangerDeviceField;
            }
            set {
                this.flangerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GainerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GainerDevice[] GainerDevice {
            get {
                return this.gainerDeviceField;
            }
            set {
                this.gainerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GateDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GateDeviceGateDevice[] GateDevice {
            get {
                return this.gateDeviceField;
            }
            set {
                this.gateDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Gate2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Gate2DeviceGateDevice[] Gate2Device {
            get {
                return this.gate2DeviceField;
            }
            set {
                this.gate2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LofiDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LofiDeviceLofiDevice[] LofiDevice {
            get {
                return this.lofiDeviceField;
            }
            set {
                this.lofiDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Lofi2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Lofi2DeviceLofiDevice[] Lofi2Device {
            get {
                return this.lofi2DeviceField;
            }
            set {
                this.lofi2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaximizerDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MaximizerDevice[] MaximizerDevice {
            get {
                return this.maximizerDeviceField;
            }
            set {
                this.maximizerDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MixerEqDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MixerEqDevice[] MixerEqDevice {
            get {
                return this.mixerEqDeviceField;
            }
            set {
                this.mixerEqDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reverb2Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb2DeviceReverbDevice[] Reverb2Device {
            get {
                return this.reverb2DeviceField;
            }
            set {
                this.reverb2DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reverb3Device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Reverb3DeviceReverbDevice[] Reverb3Device {
            get {
                return this.reverb3DeviceField;
            }
            set {
                this.reverb3DeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PhaserDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PhaserDevice[] PhaserDevice {
            get {
                return this.phaserDeviceField;
            }
            set {
                this.phaserDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReverbDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReverbDeviceReverbDevice[] ReverbDevice {
            get {
                return this.reverbDeviceField;
            }
            set {
                this.reverbDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RingModDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RingModDevice[] RingModDevice {
            get {
                return this.ringModDeviceField;
            }
            set {
                this.ringModDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FilterDistortionDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FilterDistortionDevice[] FilterDistortionDevice {
            get {
                return this.filterDistortionDeviceField;
            }
            set {
                this.filterDistortionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ShaperDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShaperDevice[] ShaperDevice {
            get {
                return this.shaperDeviceField;
            }
            set {
                this.shaperDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StereoExpanderDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StereoExpanderDevice[] StereoExpanderDevice {
            get {
                return this.stereoExpanderDeviceField;
            }
            set {
                this.stereoExpanderDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LineInDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LineInDevice[] LineInDevice {
            get {
                return this.lineInDeviceField;
            }
            set {
                this.lineInDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SendDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SendDevice[] SendDevice {
            get {
                return this.sendDeviceField;
            }
            set {
                this.sendDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PdcTestDelayDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PdcTestDelayDevice[] PdcTestDelayDevice {
            get {
                return this.pdcTestDelayDeviceField;
            }
            set {
                this.pdcTestDelayDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InstrumentAutomationDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstrumentAutomationDevice[] InstrumentAutomationDevice {
            get {
                return this.instrumentAutomationDeviceField;
            }
            set {
                this.instrumentAutomationDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LfoDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LfoDevice[] LfoDevice {
            get {
                return this.lfoDeviceField;
            }
            set {
                this.lfoDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MidiCCDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MidiCCDevice[] MidiCCDevice {
            get {
                return this.midiCCDeviceField;
            }
            set {
                this.midiCCDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("VelocityDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VelocityDevice[] VelocityDevice {
            get {
                return this.velocityDeviceField;
            }
            set {
                this.velocityDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AudioPluginDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioPluginDevice[] AudioPluginDevice {
            get {
                return this.audioPluginDeviceField;
            }
            set {
                this.audioPluginDeviceField = value;
            }
        }
    }
}
